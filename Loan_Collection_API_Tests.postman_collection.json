{
	"info": {
		"_postman_id": "d98db4e9-432f-4f8a-8c34-6783b8f7cae6",
		"name": "Loan_Collection_API_Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "[Global] View PTP History",
			"item": [
				{
					"name": "setup data first",
					"item": [
						{
							"name": "Truncate data",
							"item": [
								{
									"name": "[Util] - Truncate data on all partner_segmentation_configs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "434c878e-32c5-4ed3-9d73-ee8cd1bc18b1",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"partner_segmentation_config"
											]
										},
										"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all bucket_segmetation_configs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c677c7b2-2c71-4945-878d-6753a9faeb01",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"bucket_segmentation_config"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on delivery_channel",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d7324a48-ec3d-4403-9da5-f1c776c1e4ad",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"delivery_channel"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on collection_partner",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aacaef1c-5719-4a25-ad35-d937f23d2fe3",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"collection_partner"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all bucket",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c62e1631-bb09-4f70-b000-451163b4125c",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all loan_collection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "78f63a64-cc79-400b-946d-a4f7f101885f",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection"
											]
										},
										"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all loan_collection_history",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73b616f8-403e-4fbc-b0b7-8ae86779836d",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection_history"
											]
										},
										"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create a partner with 0 entrance and exit amounts",
							"item": [
								{
									"name": "[Helper] - Create a collection partner 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eeb058bd-3663-46e1-8afe-a7f67db9f5a3",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "607d27b2-33e2-4636-b562-3f28a859bea6",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"PARTNER_1\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"collection_partner"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a partner delivery config partner 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "87aaa57a-e962-4d3a-bf25-e52f6c4a0afb",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f0a00ba5-1d82-47de-9e77-f5098b3b869d",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"collection_partner",
												"delivery_channel"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "bd07272d-afb5-4fe8-bbf0-aaf2ad74e267",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "80ba4e15-ce3c-4f89-a35f-23376b00165d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create partner_segmentation_config",
							"item": [
								{
									"name": "Create a partner_segmentation for  bucket",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "cb877fa8-148e-456b-8482-6e42405789a8",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "65284261-122c-4631-b604-8d96f11c850d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"partner_seg_for_partner_1\"\n    ,\"description\":\"Create a partner segmentation with type Partner\",\n    \"config\":{\"type\":\"Partner\",\"id\":1}\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"partner_segmentation"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b8589133-f847-4ffa-bbad-85c9e066e21c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "534963f2-77bf-4c85-8bdc-f3b0ec83c660",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create bucket",
							"item": [
								{
									"name": "Create a bucket cured",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "10a8eb31-1d36-434f-9178-267fdfa6938c",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7786d10c-91b8-45c7-897b-fe95074496c3",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"cured\",\n    \"config_id\":1,\n    \"description\":\"Cured accounts\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"segmentation",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a bucket DoNotWork",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4cf93968-bb42-4584-8b04-be9c84d9d752",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64187b79-b1c3-4002-9e7d-abbf520c030c",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"config_id\":1,\n    \"description\": \"Irremediable accounts'\",\n    \"name\": \"DoNotWork\"\n}\n",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"segmentation",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a bucket 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "135e0c17-1a52-4d83-84d4-8c8fca89bc66",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7909e5c1-df1a-4b0a-9985-12ce8e9e737a",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"config_id\": 1,\n\"description\": \"Test_Bucket_1\",\n\"name\": \"Test_Bucket_1\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"segmentation",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Helper] Get bucket 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "541c1489-8c48-481f-9205-c08c61a69bdc",
												"exec": [
													"setTimeout(function(){}, [10000]);",
													"",
													"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
													"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9d2b5961-a029-4136-8c2f-f91600a86466",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.environment.set(\"BUCKET_1\", pm.response.json().id);",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"bucket",
												"latest"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a bucket_segmentation",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b746c47a-9172-425d-a3a7-e59f792ee68a",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "0bd8ec6b-857d-4d71-9c70-a9aaf6940083",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\":\"PTP Test\",\"config\":{\"type\":\"Bucket\",\"id\":3}\n\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"bucket_segmentation"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "583ddc83-34fa-4546-869e-c39cc46b30af",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7862bd49-27d0-4e01-8025-30514cfe7971",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5b0b8653-5d94-43d3-ac31-87789450b77d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "062b0361-8dc4-4de7-8fb8-c846e154a3d7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create User from Mobile App",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "803a17b8-abb3-45c1-9f52-bbc11e3e00d1",
								"exec": [
									"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
									"console.log(pm.environment.get(\"PHONE_NUMBER\"));",
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01757219-6d77-46d6-8ac1-8edb36dc896c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"PERSON_ID\", pm.response.json().data.personId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"utility",
								"v2",
								"user",
								"creation"
							]
						},
						"description": "Create a new user:\n      This is what happens when the user signs up via the Android app\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, KE, TZ, MX\n     \n       @return [Map] which is converted to JSON by Spring"
					},
					"response": []
				},
				{
					"name": "Admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cac0420-7be1-49d6-81af-ae45835e6cdb",
								"exec": [
									"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
									"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
									"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "59895d9d-0928-45b7-bf59-8df952986874",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{ADMIN_LOGIN_USERNAME}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{ADMIN_LOGIN_PASSWORD}}",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"site",
								"authQA"
							]
						},
						"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
					},
					"response": []
				},
				{
					"name": "Add custom loan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1c3a151-e312-4e26-b4be-1858a17ae1ce",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a35b95b3-9ecb-4b78-b069-6b5833c9e470",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "amount",
									"value": "3000",
									"type": "text"
								},
								{
									"key": "interest_rate",
									"value": "15",
									"type": "text"
								},
								{
									"key": "repayment_frequency",
									"value": "21",
									"type": "text"
								},
								{
									"key": "repayment_counts",
									"value": "1",
									"type": "text"
								},
								{
									"key": "submit",
									"value": "Submit",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/admin/people/addCustomLoan/id/{{PERSON_ID}}",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"admin",
								"people",
								"addCustomLoan",
								"id",
								"{{PERSON_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm loan is sent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3ae37fe-188f-4720-98e8-13aaedddeeec",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm the payment is sent to customer.\", function (err, response) {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.expect(jsonBody[0].status).to.eql(8);",
									"});",
									"",
									"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json()[0].id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bd7b2b09-64a8-4a0a-ad80-120b51c6b126",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loans/loan_application/person_id/{{PERSON_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loans",
								"loan_application",
								"person_id",
								"{{PERSON_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert record in Loan Collection Table",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d0f0358-1e24-4b50-b226-57586cd9fdf5",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "02d5850a-ac81-471b-95a4-094ac845d360",
								"exec": [
									"setTimeout(function(){}, [20000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"loanApplicationId\": {{LOAN_APPLICATION_ID}},\n    \"personId\": {{PERSON_ID}},\n    \"partnerId\": 1,\n    \"amountOwed\": {{AMOUNT_OWED}},\n    \"bucketSegmentationConfigId\": 1,\n    \"partnerSegmentationConfigId\": 1,\n    \"bucketId\": 3,\n    \"active\": 1\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert record in Loan Collection History Table",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e2c90460-8696-44cd-bad2-1ddf7b29a4a6",
								"exec": [
									"setTimeout(function(){}, [20000]);",
									"",
									"var moment = require('moment');",
									"pm.environment.set(\"COLLECTION_DATE\", moment().subtract('days', 10).format(\"YYYY-MM-DD\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fcacc1e7-50e9-464b-ac8a-4c0df6d84200",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonBody = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"LOAN_COLLECTION_ID\", jsonBody.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "c",
							"options": {}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection_history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if user is added to in-house collections ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc2320df-6759-47a7-b9e2-534c4f3b7062",
								"exec": [
									" pm.test(\"Status code is 200\", function () {",
									"     pm.response.to.have.status(200);",
									" });",
									" ",
									" //Check if the person has gone into loan collections.",
									"pm.test(\"Verify customer has entered in house collections\", function () {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.expect(jsonBody[0].partnerId).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2abecadb-401b-4a44-90cb-3a8537b8783d",
								"exec": [
									"setTimeout(function(){}, [20000]);",
									"",
									"    ",
									"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
									"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
									"}",
									"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
									" }",
									"",
									"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
									"}",
									"",
									"var loanAmount = pm.environment.get(\"LOAN_AMOUNT_DISBURSED\");",
									"var interestRate = pm.environment.get(\"INTEREST_RATE\");",
									"var interestAmount = (interestRate * loanAmount);",
									"var amountOwed = (parseInt(interestAmount) + parseInt(loanAmount));",
									"",
									"console.log(\"amount owed : \", amountOwed);",
									"console.log(\"intereset amount : \", interestAmount);",
									"console.log(\"interest rate : \", interestRate);",
									"console.log(\"amount owed : \", amountOwed);",
									"",
									"pm.environment.set(\"AMOUNT_OWED\", amountOwed);",
									"",
									"//create the authorisation token",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"var moment = require('moment');",
									"var dt = moment().format(\"YYYY-MM-DD\");",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection",
								"person_id",
								"{{PERSON_ID}}"
							]
						},
						"description": "Validates that added user is added to in-house collections queue. \nhttps://talamobile.testrail.io/index.php?/cases/view/26429\nhttps://talamobile.testrail.io/index.php?/cases/view/26430"
					},
					"response": []
				},
				{
					"name": "Create a call result",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e79b0f02-ac19-42da-9210-c2e17a8391d9",
								"exec": [
									"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
									"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
									"}",
									"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
									" }",
									"",
									"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
									"}",
									"",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"",
									"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
									"if (!dayCounter)",
									"{",
									"    // set default if not exists",
									"    dayCounter = 1;",
									"}",
									"",
									"var moment = require('moment');",
									"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
									"dayCounter += 1;",
									"pm.environment.set('DATE_COUNTER', dayCounter);",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									"setTimeout(function(){}, [10000]);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fd53cba8-31b0-495e-bc8d-47c9020c4ec2",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.environment.set(\"CALL_RESULT_ID\", jsonBody.id);",
									"});",
									"",
									"const acceptanceServiceRequest = {",
									"    url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString() + \"/loancollections/call_result/\" +  pm.environment.get(\"CALL_RESULT_ID\"),",
									"    method: 'GET',",
									"    header: 'Content-Type:application/json',",
									"};",
									"",
									"//Perform verifications using entries in the DB",
									"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
									"    if(err) {",
									"        console.log(err);",
									"    } else {",
									"        pm.test(\"Call result table has been updated with the customers data.\", function () {",
									"            pm.expect(response.json().id).to.eql(pm.environment.get(\"CALL_RESULT_ID\"));",
									"            pm.expect(response.json().dispositionId).to.eql(3);",
									"            pm.expect(response.json().loanApplicationId).to.eql(parseInt(pm.environment.get(\"LOAN_APPLICATION_ID\")));",
									"",
									"    });",
									"    }});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"type": "text",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"agent_user_id\": {{ADMIN_USER_ID}},\n\"comment\": \"test\",\n\"disposition_id\": 3,\n\"is_active\": true,\n\"loan_application_id\": {{LOAN_APPLICATION_ID}},\n\"loan_still_owed_amount\": {{AMOUNT_OWED}},\n\"local_ptp_date\": {{TIME_LOAN_COLLECTIONS_PTP}},\n\"nonpay_reason_id\": 2,\n\"ptp_amount\": {{PTP_AMOUNT}}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/loan_application/{{LOAN_APPLICATION_ID}}/call_result",
							"host": [
								"{{LOAN_COLLECTIONS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"loan_application",
								"{{LOAN_APPLICATION_ID}}",
								"call_result"
							]
						},
						"description": "https://talamobile.testrail.io/index.php?/cases/view/26431"
					},
					"response": []
				},
				{
					"name": "Verify entries in the call_result table",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd3657c9-0fcd-473b-885b-40d76bdd797a",
								"exec": [
									" pm.test(\"Status code is 200\", function () {",
									"     pm.response.to.have.status(200);",
									" });",
									"",
									"var jsonBody = JSON.parse(responseBody);",
									"",
									"pm.test(\"Verify call_result updated with the correct disposition id equals 3.\", function () {",
									"    pm.expect(jsonBody.dispositionId).to.eql(3);",
									"});",
									"pm.test(\"Verify call_result updated with the correct loan application id.\", function () {",
									"    pm.expect(jsonBody.loanApplicationId).to.eql(parseInt(pm.environment.get(\"LOAN_APPLICATION_ID\")));",
									"});",
									"pm.test(\"Verify call_result updated with the correct ptp amount.\", function () {",
									"    pm.expect(jsonBody.ptpAmount).to.eql(parseInt(pm.environment.get(\"PTP_AMOUNT\")));",
									"});",
									"pm.test(\"Verify call_result updated with the correct ptp amount.\", function () {",
									"    pm.expect(jsonBody.nonpayReasonId).to.eql(2);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e8b9310a-1d23-4a51-bb7a-45ba05a575a7",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/call_result/{{CALL_RESULT_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"call_result",
								"{{CALL_RESULT_ID}}"
							]
						},
						"description": "<li>KE: <a href=\"https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=23914817\">TC-8986</a></li>\n<li>PH: <a href=\"https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=24539054\">TC-9456</a></li>\n<li>TZ: <a href=\"https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=24558549\">TC-9466</a></li>\n<li>MX: <a href=\"https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=24709545\">TC-9521</a></li>"
					},
					"response": []
				},
				{
					"name": "View PTP history",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "252a4e1b-2a16-4cd1-bbb5-8e8900949194",
								"exec": [
									" pm.test(\"Status code is 200\", function () {",
									"     pm.response.to.have.status(200);",
									" });",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac8f4486-6ad2-43a6-93fd-b351825b7cd1",
								"exec": [
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"",
									"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
									"if (!dayCounter)",
									"{",
									"    // set default if not exists",
									"    dayCounter = 1;",
									"}",
									"",
									"var moment = require('moment');",
									"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
									"dayCounter += 1;",
									"pm.environment.set('DATE_COUNTER', dayCounter);",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Authorization",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/call_results/{{PERSON_ID}}?limit=20&page=1",
							"host": [
								"{{LOAN_COLLECTIONS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"call_results",
								"{{PERSON_ID}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bcc43fd0-34f8-4b10-9337-824fde35622c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2ec05a85-cd92-454c-8fea-12e53f3f6c79",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "[Global] Edit PTP",
			"item": [
				{
					"name": "[Global] Add and Deactivate PTP",
					"item": [
						{
							"name": "Create User from Mobile App",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "41077241-283d-4cf9-ab7c-cdea335ccd61",
										"exec": [
											"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
											"console.log(pm.environment.get(\"PHONE_NUMBER\"));",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "36ac4e39-8f4a-4b67-ae07-f8833ece1b99",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.environment.set(\"PERSON_ID\", pm.response.json().data.personId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\t\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"v2",
										"user",
										"creation"
									]
								},
								"description": "Create a new user:\n      This is what happens when the user signs up via the Android app\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, KE, TZ, MX\n     \n       @return [Map] which is converted to JSON by Spring"
							},
							"response": []
						},
						{
							"name": "Admin login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e58de94c-73d8-47aa-a0b4-425bf1b6ff59",
										"exec": [
											"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
											"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
											"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0ecbacad-ac17-4450-8a38-8e988ed7fac5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{ADMIN_LOGIN_USERNAME}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{ADMIN_LOGIN_PASSWORD}}",
											"type": "text"
										}
									],
									"options": {
										"urlencoded": {}
									}
								},
								"url": {
									"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
									"host": [
										"{{SERVER_API_BASE_URL}}"
									],
									"path": [
										"site",
										"authQA"
									]
								},
								"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
							},
							"response": []
						},
						{
							"name": "Add custom loan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f444d5d8-2837-4afb-ba73-1202681ac166",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5c879aa5-7586-40df-afc1-c13dd477e599",
										"exec": [
											"setTimeout(function(){}, [10000]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "amount",
											"value": "3000",
											"type": "text"
										},
										{
											"key": "interest_rate",
											"value": "15",
											"type": "text"
										},
										{
											"key": "repayment_frequency",
											"value": "21",
											"type": "text"
										},
										{
											"key": "repayment_counts",
											"value": "1",
											"type": "text"
										},
										{
											"key": "submit",
											"value": "Submit",
											"type": "text"
										}
									],
									"options": {}
								},
								"url": {
									"raw": "{{SERVER_API_BASE_URL}}/admin/people/addCustomLoan/id/{{PERSON_ID}}",
									"host": [
										"{{SERVER_API_BASE_URL}}"
									],
									"path": [
										"admin",
										"people",
										"addCustomLoan",
										"id",
										"{{PERSON_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Confirm loan is sent",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56abe220-dd5f-4317-98c2-e1abf5d70c68",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Confirm the payment is sent to customer.\", function (err, response) {",
											"    var jsonBody = JSON.parse(responseBody);",
											"    pm.expect(jsonBody[0].status).to.eql(8);",
											"});",
											"",
											"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json()[0].id);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5e90791d-5033-4d4f-b89c-89c3fa621b67",
										"exec": [
											"setTimeout(function(){}, [10000]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loans/loan_application/person_id/{{PERSON_ID}}",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loans",
										"loan_application",
										"person_id",
										"{{PERSON_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "[C31629 ] Add PTP",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "438206e3-0402-4ff9-8f4c-3791eebff3fa",
										"exec": [
											"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
											"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
											"}",
											"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
											" }",
											"",
											"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
											"}",
											"",
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
											"if (!dayCounter)",
											"{",
											"    // set default if not exists",
											"    dayCounter = 1;",
											"}",
											"",
											"var moment = require('moment');",
											"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
											"dayCounter += 1;",
											"pm.environment.set('DATE_COUNTER', dayCounter);",
											"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
											"setTimeout(function(){}, [10000]);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "eee7990d-c275-4edc-9bcc-436640f705c2",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"    var jsonBody = JSON.parse(responseBody);",
											"    pm.environment.set(\"CALL_RESULT_ID\", jsonBody.id);",
											"});",
											"",
											"const acceptanceServiceRequest = {",
											"    url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString() + \"/loancollections/call_result/\" +  pm.environment.get(\"CALL_RESULT_ID\"),",
											"    method: 'GET',",
											"    header: 'Content-Type:application/json',",
											"};",
											"",
											"//Perform verifications using entries in the DB",
											"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
											"    if(err) {",
											"        console.log(err);",
											"    } else {",
											"        pm.test(\"Call result table has been updated with the customers data.\", function () {",
											"            pm.expect(response.json().id).to.eql(pm.environment.get(\"CALL_RESULT_ID\"));",
											"            pm.expect(response.json().dispositionId).to.eql(3);",
											"            pm.expect(response.json().loanApplicationId).to.eql(parseInt(pm.environment.get(\"LOAN_APPLICATION_ID\")));",
											"",
											"    });",
											"    }});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"agent_user_id\": {{ADMIN_USER_ID}},\n\"comment\": \"test\",\n\"disposition_id\": 3,\n\"is_active\": true,\n\"loan_application_id\": {{LOAN_APPLICATION_ID}},\n\"loan_still_owed_amount\": {{AMOUNT_OWED}},\n\"local_ptp_date\": {{TIME_LOAN_COLLECTIONS_PTP}},\n\"nonpay_reason_id\": 2,\n\"ptp_amount\": {{PTP_AMOUNT}}\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/loan_application/{{LOAN_APPLICATION_ID}}/call_result",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"loan_application",
										"{{LOAN_APPLICATION_ID}}",
										"call_result"
									]
								},
								"description": "https://talamobile.testrail.io/index.php?/cases/view/31629"
							},
							"response": []
						},
						{
							"name": "Verify entries in the call_result table",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "75f473fd-1f4a-4108-b7bf-ef6f5503b7c5",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Verify call_result updated with the correct disposition id equals 3.\", function () {",
											"    pm.expect(jsonBody.dispositionId).to.eql(3);",
											"});",
											"pm.test(\"Verify call_result updated with the correct loan application id.\", function () {",
											"    pm.expect(jsonBody.loanApplicationId).to.eql(parseInt(pm.environment.get(\"LOAN_APPLICATION_ID\")));",
											"});",
											"pm.test(\"Verify call_result updated with the correct ptp amount.\", function () {",
											"    pm.expect(jsonBody.ptpAmount).to.eql(parseInt(pm.environment.get(\"PTP_AMOUNT\")));",
											"});",
											"pm.test(\"Verify call_result updated with the correct ptp amount.\", function () {",
											"    pm.expect(jsonBody.nonpayReasonId).to.eql(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a98a9fa8-be76-4af9-87e6-aa3e0b140c1f",
										"exec": [
											"setTimeout(function(){}, [10000]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/call_result/{{CALL_RESULT_ID}}",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"call_result",
										"{{CALL_RESULT_ID}}"
									]
								},
								"description": "<li>KE: <a href=\"https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=23914817\">TC-8986</a></li>\n<li>PH: <a href=\"https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=24539054\">TC-9456</a></li>\n<li>TZ: <a href=\"https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=24558549\">TC-9466</a></li>\n<li>MX: <a href=\"https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=24709545\">TC-9521</a></li>"
							},
							"response": []
						},
						{
							"name": "[C31630 ] Deactivate PTP",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "438206e3-0402-4ff9-8f4c-3791eebff3fa",
										"exec": [
											"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
											"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
											"}",
											"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
											" }",
											"",
											"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
											"}",
											"",
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"   ",
											"   ",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
											"if (!dayCounter)",
											"{",
											"    // set default if not exists",
											"    dayCounter = 1;",
											"}",
											"",
											"var moment = require('moment');",
											"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
											"dayCounter += 1;",
											"pm.environment.set('DATE_COUNTER', dayCounter);",
											"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP_EDIT', \"\\\"\" + dt + \"\\\"\");",
											"pm.environment.set(\"PTP_AMOUNT_EDITED\", 400);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "eee7990d-c275-4edc-9bcc-436640f705c2",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/call_result/{{CALL_RESULT_ID}}",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"call_result",
										"{{CALL_RESULT_ID}}"
									]
								},
								"description": "https://talamobile.testrail.io/index.php?/cases/view/31630"
							},
							"response": []
						},
						{
							"name": "Entry should not be  in the call_result table ",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "75f473fd-1f4a-4108-b7bf-ef6f5503b7c5",
										"exec": [
											" pm.test(\"Status code is 404\", function () {",
											"     pm.response.to.have.status(404);",
											" });",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a98a9fa8-be76-4af9-87e6-aa3e0b140c1f",
										"exec": [
											"setTimeout(function(){}, [10000]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/call_result/{{CALL_RESULT_ID}}",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"call_result",
										"{{CALL_RESULT_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6791c3f1-0665-4db4-8ce3-d23122bf8ef2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7939e92c-8e1f-4b1f-a771-4216a9862b65",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6791c3f1-0665-4db4-8ce3-d23122bf8ef2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7939e92c-8e1f-4b1f-a771-4216a9862b65",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "[KE] Send Automated SMS for PTPs Copy",
			"item": [
				{
					"name": "setup data first",
					"item": [
						{
							"name": "Truncate data",
							"item": [
								{
									"name": "[Util] - Truncate data on all partner_segmentation_configs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8e6493e3-c63b-4659-abc5-cc87f8dd733f",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"partner_segmentation_config"
											]
										},
										"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all bucket_segmetation_configs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bed32a9c-356a-43a9-8fa6-2e0717a4a939",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"bucket_segmentation_config"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on delivery_channel",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e0ee28db-9af0-4baa-9712-3aac78d61b3b",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"delivery_channel"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on collection_partner",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c15e353c-4bd0-407b-8f19-05beabe9b782",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"collection_partner"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all bucket",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "94a29f40-2b6e-4d0e-abba-246696360b87",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all loan_collection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e6f57693-3117-4989-bea6-8b903e6ea534",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection"
											]
										},
										"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all loan_collection_history",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f7a0f7e4-0752-45ef-8cb5-b22c2cc7c542",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection_history"
											]
										},
										"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create a partner with 0 entrance and exit amounts",
							"item": [
								{
									"name": "[Helper] - Create a collection partner 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8440d4c0-1cee-452d-a2a5-4c4e366b7ad7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b929f4ee-f113-4f13-b1f1-c729e87290b6",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"PARTNER_1\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"collection_partner"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a partner delivery config partner 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ab22a94e-2aa6-4329-98cf-99e4cc0d0d86",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "de1975bc-bf2b-489a-ae5a-1dce2314651c",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"collection_partner",
												"delivery_channel"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "992c6a8e-82cd-437b-a02d-9cb812bc2056",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5021f93d-3668-4349-877c-c8166af5f154",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create partner_segmentation_config",
							"item": [
								{
									"name": "Create a partner_segmentation for  bucket",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9e114958-bea4-4477-a93b-f7220e25df42",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3a62affb-3e60-4532-827e-a0b3c536dc7b",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"partner_seg_for_partner_1\"\n    ,\"description\":\"Create a partner segmentation with type Partner\",\n    \"config\":{\"type\":\"Partner\",\"id\":1}\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"partner_segmentation"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e2a34c05-0f2e-47e0-860b-b9df809962f0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "11beaac6-4746-4b76-81a6-a73964e82966",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create bucket",
							"item": [
								{
									"name": "Create a bucket cured",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5d58b99b-34a1-4bf5-9bec-ef93df1517f6",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "587e1f53-1831-4e32-becd-beece5a573dc",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"cured\",\n    \"config_id\":1,\n    \"description\":\"Cured accounts\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"segmentation",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a bucket DoNotWork",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "00a6b93d-7ea6-4509-837b-2f8e24f7b45f",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a1b0edf0-0724-43d0-acfd-67b285354594",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"config_id\":1,\n    \"description\": \"Irremediable accounts'\",\n    \"name\": \"DoNotWork\"\n}\n",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"segmentation",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a bucket 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "3cbeb3c3-5f36-449e-948a-d5677780e739",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4c9de164-7a8d-4d27-8d21-5b3b866ddafe",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"config_id\": {{PARTNER_SEG_1}},\n\"description\": \"Test_Bucket_1\",\n\"name\": \"Test_Bucket_1\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"segmentation",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Helper] Get bucket 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0771e767-971e-4a58-b4c1-2ec82be8e29d",
												"exec": [
													"setTimeout(function(){}, [10000]);",
													"",
													"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
													"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "cfaba80d-4272-4ed3-b2bc-10eecd6f6d29",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.environment.set(\"BUCKET_1\", pm.response.json().id);",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"bucket",
												"latest"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a bucket_segmentation",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c8fc60a4-bcd0-4568-8035-284d9f153174",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "dc403806-1cde-4d53-9fae-f58a41e46d13",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\":\"PTP Test\",\"config\":{\"type\":\"Bucket\",\"id\":3}\n\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"bucket_segmentation"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d5f4ee4b-cd77-4d6d-9950-8cf273512cb6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ab0943dc-86cc-4d3d-b03f-1bf34e3e9f30",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "62a94f60-dfc8-4a8c-9f01-facde954661a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4c32c3ac-8a0f-49b7-a1f5-27c669ae9873",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create User from Mobile App",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "507adba6-8f71-4899-8ea4-07a2cec92012",
								"exec": [
									"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
									"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cf8a4575-3979-4aa2-a2c8-91c69bbd2c4f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"PERSON_ID\", pm.response.json().data.personId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"utility",
								"v2",
								"user",
								"creation"
							]
						},
						"description": "Create a new user:\n      This is what happens when the user signs up via the Android app\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, KE, TZ, MX\n     \n       @return [Map] which is converted to JSON by Spring"
					},
					"response": []
				},
				{
					"name": "Admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c06b55c9-4bb1-45b6-b8f0-370b91932c24",
								"exec": [
									"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
									"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
									"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2fddfde9-713c-4375-8a2b-5c1f3b9af86b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{ADMIN_LOGIN_USERNAME}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{ADMIN_LOGIN_PASSWORD}}",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"site",
								"authQA"
							]
						},
						"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
					},
					"response": []
				},
				{
					"name": "Add custom loan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f3914797-f817-4f0d-95a1-469807b869be",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c0b4e8fb-0735-4f95-a1a8-b474f838df26",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "amount",
									"value": "3000",
									"type": "text"
								},
								{
									"key": "interest_rate",
									"value": "15",
									"type": "text"
								},
								{
									"key": "repayment_frequency",
									"value": "21",
									"type": "text"
								},
								{
									"key": "repayment_counts",
									"value": "1",
									"type": "text"
								},
								{
									"key": "submit",
									"value": "Submit",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/admin/people/addCustomLoan/id/{{PERSON_ID}}",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"admin",
								"people",
								"addCustomLoan",
								"id",
								"{{PERSON_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm loan is sent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15f3d69c-d619-40c8-ad49-39ca5a54945a",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm the payment is sent to customer.\", function (err, response) {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.expect(jsonBody[0].status).to.eql(8);",
									"});",
									"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json()[0].id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fba05b27-d554-4029-8d54-0c620d07df27",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loans/loan_application/person_id/{{PERSON_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loans",
								"loan_application",
								"person_id",
								"{{PERSON_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert record in Loan Collection Table",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f87c858-715b-4350-a825-3b649820c348",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0e6a0797-be20-4261-8815-556149e5578c",
								"exec": [
									"setTimeout(function(){}, [20000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"loanApplicationId\": {{LOAN_APPLICATION_ID}},\n    \"personId\": {{PERSON_ID}},\n    \"partnerId\": 1,\n    \"amountOwed\": {{AMOUNT_OWED}},\n    \"bucketSegmentationConfigId\": 1,\n    \"partnerSegmentationConfigId\": 1,\n    \"bucketId\": 3,\n    \"active\": 1\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert record in Loan Collection History Table",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "60621173-c4c7-4ffe-ad1d-2c0ff38edabc",
								"exec": [
									"setTimeout(function(){}, [20000]);",
									"",
									"var moment = require('moment');",
									"pm.environment.set(\"COLLECTION_DATE\", moment().subtract('days', 10).format(\"YYYY-MM-DD\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "434dbd5b-193f-4b75-b9cc-7492619d3610",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonBody = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"LOAN_COLLECTION_ID\", jsonBody.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"loanApplicationId\": {{LOAN_APPLICATION_ID}},\n    \"personId\": {{PERSON_ID}},\n    \"partnerId\": 1,\n    \"amountOwed\": {{AMOUNT_OWED}},\n    \"bucketSegmentationConfigId\": 1,\n    \"collectionDate\": \"{{COLLECTION_DATE}}\",\n    \"partnerSegmentationConfigId\": 1,\n    \"bucketId\": 3,\n    \"active\": 1\n}\n",
							"options": {}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection_history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if user is added to in-house collections ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "139eb60e-8341-48b1-b8c8-49b96df8ae80",
								"exec": [
									" pm.test(\"Status code is 200\", function () {",
									"     pm.response.to.have.status(200);",
									" });",
									" ",
									" //Check if the person has gone into loan collections.",
									"pm.test(\"Verify customer has entered in house collections\", function () {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.expect(jsonBody[0].partnerId).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac4b0413-0ba6-48a9-80e0-d6d9b6bf0d88",
								"exec": [
									"",
									"var loanAmount = pm.environment.get(\"LOAN_AMOUNT_DISBURSED\");",
									"var interestRate = pm.environment.get(\"INTEREST_RATE\");",
									"var interestAmount = (interestRate * loanAmount);",
									"var amountOwed = (parseInt(interestAmount) + parseInt(loanAmount));",
									"",
									"console.log(\"amount owed : \", amountOwed);",
									"console.log(\"intereset amount : \", interestAmount);",
									"console.log(\"interest rate : \", interestRate);",
									"console.log(\"amount owed : \", amountOwed);",
									"",
									"pm.environment.set(\"AMOUNT_OWED\", amountOwed);",
									"",
									"//create the authorisation token",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"var moment = require('moment');",
									"var dt = moment().format(\"YYYY-MM-DD\");",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									"",
									"setTimeout(function(){}, [10000]);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection",
								"person_id",
								"{{PERSON_ID}}"
							]
						},
						"description": "Validates that added user is added to in-house collections queue. "
					},
					"response": []
				},
				{
					"name": "Create a call result",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "18858fd7-00a9-4b09-a763-71c53129c232",
								"exec": [
									"",
									"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
									"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
									"}",
									"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
									" }",
									"",
									"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
									"}",
									"",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"",
									"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
									"if (!dayCounter)",
									"{",
									"    // set default if not exists",
									"    dayCounter = 1;",
									"}",
									"",
									"var moment = require('moment');",
									"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
									"dayCounter += 1;",
									"pm.environment.set('DATE_COUNTER', dayCounter);",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									"",
									"setTimeout(function(){}, [10000]);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e091b814-edc1-4217-b020-12dc8b372416",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.environment.set(\"CALL_RESULT_ID\", jsonBody.id);",
									"});",
									"",
									"const acceptanceServiceRequest = {",
									"    url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString() + \"/loancollections/call_result/\" +  pm.environment.get(\"CALL_RESULT_ID\"),",
									"    method: 'GET',",
									"    header: 'Content-Type:application/json',",
									"};",
									"",
									"//Perform verifications using entries in the DB",
									"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
									"    if(err) {",
									"        console.log(err);",
									"    } else {",
									"        pm.test(\"Call result table has been updated with the customers data.\", function () {",
									"            pm.expect(response.json().id).to.eql(pm.environment.get(\"CALL_RESULT_ID\"));",
									"            pm.expect(response.json().dispositionId).to.eql(3);",
									"            pm.expect(response.json().loanApplicationId).to.eql(parseInt(pm.environment.get(\"LOAN_APPLICATION_ID\")));",
									"",
									"    });",
									"    }});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"type": "text",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"agent_user_id\": {{ADMIN_USER_ID}},\n\"comment\": \"test\",\n\"disposition_id\": 3,\n\"is_active\": true,\n\"loan_application_id\": {{LOAN_APPLICATION_ID}},\n\"loan_still_owed_amount\": {{AMOUNT_OWED}},\n\"local_ptp_date\": {{TIME_LOAN_COLLECTIONS_PTP}},\n\"nonpay_reason_id\": 2,\n\"ptp_amount\": {{PTP_AMOUNT}}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/loan_application/{{LOAN_APPLICATION_ID}}/call_result?onCreate=SEND_SMS",
							"host": [
								"{{LOAN_COLLECTIONS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"loan_application",
								"{{LOAN_APPLICATION_ID}}",
								"call_result"
							],
							"query": [
								{
									"key": "onCreate",
									"value": "SEND_SMS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify customer does recieve sms template ID 614",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e3ae2f3-6fb0-4311-8eb3-2706e7d9da94",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Confirm user receives SMS.\", function(err, response) {",
									"     pm.expect(pm.response.json().processingStatus).to.eql(2);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f57be097-af38-4644-91bd-93b912e35ba0",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/otp/to/{{PHONE_NUMBER}}/template/{{TEMPLATE_614}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"utility",
								"v2",
								"otp",
								"to",
								"{{PHONE_NUMBER}}",
								"template",
								"{{TEMPLATE_614}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "54e583d5-996d-4674-b591-2745f9a55680",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f796a27a-c3d9-4e64-8b74-76f2665cd5e8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Automate Waiver",
			"item": [
				{
					"name": "Attaching waiver results to campaign",
					"item": [
						{
							"name": "[AS] Admin login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e58de94c-73d8-47aa-a0b4-425bf1b6ff59",
										"exec": [
											"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
											"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
											"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "LoginForm[username]",
											"value": "{{ADMIN_LOGIN_USERNAME}}",
											"type": "text"
										},
										{
											"key": "LoginForm[password]",
											"value": "{{ADMIN_LOGIN_PASSWORD}}",
											"type": "text"
										},
										{
											"key": "yt0",
											"value": "Login",
											"type": "text"
										}
									],
									"options": {}
								},
								"url": {
									"raw": "{{SERVER_API_BASE_URL}}",
									"host": [
										"{{SERVER_API_BASE_URL}}"
									]
								},
								"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
							},
							"response": []
						},
						{
							"name": "[Util] - Get Authorization Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03d31c16-7d10-4ab2-8376-da0a07152170",
										"exec": [
											"pm.environment.set(\"HASH_TOKEN_LOAN_COLLECTIONS\", pm.response.json().tokenValue);",
											"pm.environment.set(\"PERSON_ID\", pm.response.json().personId);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/getAuthToken/personId/1",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"loancollections",
										"getAuthToken",
										"personId",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[AS] Settings for Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6b5c04e-fd01-464b-b5c9-ee7fb73ea9a9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const acceptanceServiceRequest = {",
											"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
											"  method: 'GET',",
											"  header: 'Content-Type:application/json'",
											"};",
											"",
											"//Acceptance service will GET response in JSON format from loans.admin_config table",
											"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
											"    console.log(response.json());",
											"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
											"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
											"    });",
											"});",
											"",
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"v2",
										"adminSettings"
									]
								},
								"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
							},
							"response": []
						},
						{
							"name": "[AS] Create User With Applied loan",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b5fd81a7-6011-4b5c-a334-cdc4687fc9de",
										"exec": [
											"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
											"console.log(pm.environment.get(\"PHONE_NUMBER\"));",
											"setTimeout(function(){}, [10000]);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "72410b1d-1e1d-445f-b3ea-f63177f071e9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.environment.set(\"PERSON_ID\", pm.response.json().personId);",
											"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"v2",
										"user",
										"creation",
										"userWithAppliedLoan"
									]
								}
							},
							"response": []
						},
						{
							"name": "[AS] Approve Loan via Admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "104b91da-329f-4f9b-8845-cccbed2a4446",
										"exec": [
											"setTimeout(function(){}, [10000]);",
											"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
											"    pm.environment.set(\"LOAN_TYPE\", 2);",
											"}",
											"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
											"           pm.environment.set(\"LOAN_TYPE\", 321);",
											" }",
											"",
											"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
											"           pm.environment.set(\"LOAN_TYPE\", 52);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1840ed75-db57-4ae5-9d9b-bb6ca27435f8",
										"exec": [
											"pm.test(\"Status code is 200 found\", function (err, response) {",
											"    pm.response.to.have.status(200);",
											"});   ",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Cookie",
										"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "decision",
											"value": "1",
											"type": "text"
										},
										{
											"key": "loan_limit",
											"value": "50000",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "",
											"type": "text"
										},
										{
											"key": "loan_term_set",
											"value": "",
											"type": "text"
										},
										{
											"key": "eligible_loan_type_ids[]",
											"value": "{{LOAN_TYPE}}",
											"type": "text"
										},
										{
											"key": "submit",
											"value": "Submit",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID}}",
									"host": [
										"{{SERVER_API_BASE_URL}}"
									],
									"path": [
										"admin",
										"people",
										"approveReject",
										"id",
										"{{PERSON_ID}}"
									]
								},
								"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
							},
							"response": []
						},
						{
							"name": "[AS] Accept loan offer on app",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f102255a-aa39-483d-800f-c43d7f3fed32",
										"exec": [
											"setTimeout(function(){}, [1000]);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a295f63b-c1a4-4f8b-83cc-88efad5db1a5",
										"exec": [
											"pm.test(\"Status code is 200\", function (err, response) {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"v2",
										"loan",
										"user_accept_offer"
									]
								},
								"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
							},
							"response": []
						},
						{
							"name": "Mark payment as sent from admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7cc607dc-766e-4f95-ba54-194c133cf4b2",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3f40a075-eb57-4768-a015-ff4c93cb1eea",
										"exec": [
											"setTimeout(function(){}, [10000]);",
											"//Setup date",
											"var moment = require('moment');",
											"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
											"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
											"",
											"//Set the correct rails provider that match the country",
											"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
											"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
											"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
											"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
											"   ",
											"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
											"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
											"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
											"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
											"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
											"  ",
											"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
											"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
											"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
											"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
											"   ",
											"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
											"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
											"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
											"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
											"   ",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Cookie",
										"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "transaction_amount",
											"value": "3000",
											"type": "text"
										},
										{
											"key": "confirmation_number",
											"value": "{{CONFIRMATION_NUMBER}}",
											"type": "text"
										},
										{
											"key": "transaction_date",
											"value": "{{TIME_NOW_SEND_PAYMENT}}",
											"description": "10/11/2018, 11:25 AM",
											"type": "text"
										},
										{
											"key": "mno_provider_name",
											"value": "{{MNO-PROVIDER}}",
											"type": "text"
										},
										{
											"key": "submit",
											"value": "Submitting...",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID}}",
									"host": [
										"{{SERVER_API_BASE_URL}}"
									],
									"path": [
										"admin",
										"people",
										"addDisbursement",
										"id",
										"{{PERSON_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Insert record in Loan Collection Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56abe220-dd5f-4317-98c2-e1abf5d70c68",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d75c9f0c-dde8-4aa6-a96f-59100213745b",
										"exec": [
											"setTimeout(function(){}, [20000]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"loan_collection"
									]
								}
							},
							"response": []
						},
						{
							"name": "Insert record in Loan Collection History Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e7c8191-0921-458e-81d9-690b092d12ad",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"LOAN_COLLECTION_ID\", jsonBody.id);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3dd79450-ea44-488e-9b64-3a984d89f887",
										"exec": [
											"setTimeout(function(){}, [20000]);",
											"",
											"var moment = require('moment');",
											"pm.environment.set(\"COLLECTION_DATE\", moment().subtract('days', 10).format(\"YYYY-MM-DD\"));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"loan_collection_history"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate CSV for waiver results upload",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"",
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"const newDate = new Date();",
											"pm.globals.set(\"LOCAL_START_DATE\", moment(newDate, \"YYYY-MM-DD\"));",
											"pm.globals.set(\"LOCAL_START_DATE\", moment(newDate, \"YYYY-MM-DD\").add('days', 1));",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 200 Ok\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Confirm response is true\", function (err, response) {",
											"    pm.expect(jsonBody.response) === true;",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"group_type\": \"treatment\",\n    \"person_id\": \"{{PERSON_ID}}\",\n    \"loan_application_id\": \"{{LOAN_APPLICATION_ID}}\"\n}"
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loancollection/automatewaiver/generateCsv",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"v2",
										"loancollection",
										"automatewaiver",
										"generateCsv"
									]
								}
							},
							"response": []
						},
						{
							"name": "[AS] Append to CSV for waiver results upload",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"",
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 200 Ok\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Confirm response is true\", function (err, response) {",
											"    pm.expect(jsonBody.response) === true;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loancollection/automatewaiver/appendToCsv",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"v2",
										"loancollection",
										"automatewaiver",
										"appendToCsv"
									]
								}
							},
							"response": []
						},
						{
							"name": "[C29871] Create new waiver campaign record",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"",
											"var token = \"non_production_non_senstive_token\";",
											"const moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											"pm.environment.set('LOCAL_START_DATE', moment().format(\"YYYY-MM-DD\"));",
											"pm.environment.set('LOCAL_END_DATE', moment().add(3, 'days').format(\"YYYY-MM-DD\"));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.environment.set(\"CAMPAIGN_ID\", pm.response.json().id);",
											"",
											"pm.test(\"Status code is 201 Created\", function() {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Confirm campaign id is not null\", function (err, response) {",
											"    pm.expect(jsonBody.name).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign name is saved correctly\", function (err, response) {",
											"    pm.expect(jsonBody.name).to.eql(\"Campaign test name\");",
											"});",
											"",
											"pm.test(\"Confirm campaign description is saved correctly\", function (err, response) {",
											"    pm.expect(jsonBody.description).to.eql(\"About a test campaign\");",
											"});",
											"",
											"pm.test(\"Confirm campaign local_start_date\", function (err, response) {",
											"    pm.expect(jsonBody.local_start_date).to.eql(pm.environment.get(\"LOCAL_START_DATE\"));",
											"});",
											"",
											"pm.test(\"Confirm campaign local_end_date\", function (err, response) {",
											"    pm.expect(jsonBody.local_end_date).to.eql(pm.environment.get(\"LOCAL_END_DATE\"));",
											"});",
											"",
											"pm.test(\"Confirm campaign maximum_waived_percent\", function (err, response) {",
											"    pm.expect(jsonBody.maximum_waived_percent).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign created_by_id\", function (err, response) {",
											"    pm.expect(jsonBody.created_by_id).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign status\", function (err, response) {",
											"    pm.expect(jsonBody.status).to.not.be.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/waiver/campaign",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"waiver",
										"campaign"
									]
								}
							},
							"response": []
						},
						{
							"name": "[AS] Attach accounts to waiver campaign",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"",
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 201 Created\", function() {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Confirm resposne is true\", function (err, response) {",
											"    pm.expect(jsonBody.response) === true;",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loancollection/automatewaiver/campaignId/{{CAMPAIGN_ID}}/uploadCsv",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"v2",
										"loancollection",
										"automatewaiver",
										"campaignId",
										"{{CAMPAIGN_ID}}",
										"uploadCsv"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Start waiver on start date",
					"item": [
						{
							"name": "[C29884] Create new waiver campaign - missing name should return 400",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 400 Bad Request\", function() {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Error should have an object name\", function (err, response) {",
											"    pm.expect(jsonBody.error).to.not.be.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/waiver/campaign",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"waiver",
										"campaign"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Loan Collection]  Attach accounts  to campaign",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "multipart/form-data"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file_name",
											"type": "file",
											"src": []
										}
									],
									"options": {}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/waiver/campaign/{{CAMPAIGN_ID}}",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"waiver",
										"campaign",
										"{{CAMPAIGN_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "[C29871] Create new waiver campaign record",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"",
											"var token = \"non_production_non_senstive_token\";",
											"const moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											"pm.environment.set('LOCAL_START_DATE', moment().format(\"YYYY-MM-DD\"));",
											"pm.environment.set('LOCAL_END_DATE', moment().add(3, 'days').format(\"YYYY-MM-DD\"));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.environment.set(\"CAMPAIGN_ID\", pm.response.json().id);",
											"",
											"pm.test(\"Status code is 201 Created\", function() {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Confirm campaign id is not null\", function (err, response) {",
											"    pm.expect(jsonBody.name).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign name is saved correctly\", function (err, response) {",
											"    pm.expect(jsonBody.name).to.eql(\"Campaign test name\");",
											"});",
											"",
											"pm.test(\"Confirm campaign description is saved correctly\", function (err, response) {",
											"    pm.expect(jsonBody.description).to.eql(\"About a test campaign\");",
											"});",
											"",
											"pm.test(\"Confirm campaign local_start_date\", function (err, response) {",
											"    pm.expect(jsonBody.local_start_date).to.eql(pm.environment.get(\"LOCAL_START_DATE\"));",
											"});",
											"",
											"pm.test(\"Confirm campaign local_end_date\", function (err, response) {",
											"    pm.expect(jsonBody.local_end_date).to.eql(pm.environment.get(\"LOCAL_END_DATE\"));",
											"});",
											"",
											"pm.test(\"Confirm campaign maximum_waived_percent\", function (err, response) {",
											"    pm.expect(jsonBody.maximum_waived_percent).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign created_by_id\", function (err, response) {",
											"    pm.expect(jsonBody.created_by_id).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign status\", function (err, response) {",
											"    pm.expect(jsonBody.status).to.not.be.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"Campaign test name\",\n   \"description\": \"About a test campaign\",             \n   \"local_start_date\": \"{{LOCAL_START_DATE}}\",            \n   \"local_end_date\": \"{{LOCAL_END_DATE}}\",             \n   \"maximum_waived_percent\": 10,\n   \"status\": 1,\n   \"created_by_id\": 10\n}\n"
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/waiver/campaign",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"waiver",
										"campaign"
									]
								}
							},
							"response": []
						},
						{
							"name": "[C24160] Update waiver campaign with status 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
											"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
											"}",
											"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
											" }",
											"",
											"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
											"}",
											"",
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
											"if (!dayCounter)",
											"{",
											"    // set default if not exists",
											"    dayCounter = 1;",
											"}",
											"",
											"var moment = require('moment');",
											"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
											"dayCounter += 1;",
											"pm.environment.set('DATE_COUNTER', dayCounter);",
											"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 200 OK\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Confirm campaign id is not null\", function (err, response) {",
											"    pm.expect(jsonBody.name).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign name is saved correctly\", function (err, response) {",
											"    pm.expect(jsonBody.name).to.eql(\"Campaign test name - after update\");",
											"});",
											"",
											"pm.test(\"Confirm campaign description is saved correctly\", function (err, response) {",
											"    pm.expect(jsonBody.description).to.eql(\"About a test campaign - after update\");",
											"});",
											"",
											"pm.test(\"Confirm campaign local_start_date\", function (err, response) {",
											"    pm.expect(jsonBody.local_start_date).to.eql(pm.environment.get(\"LOCAL_START_DATE\"));",
											"});",
											"",
											"pm.test(\"Confirm campaign local_end_date\", function (err, response) {",
											"    pm.expect(jsonBody.local_end_date).to.eql(pm.environment.get(\"LOCAL_END_DATE\"));",
											"});",
											"",
											"pm.test(\"Confirm campaign maximum_waived_percent\", function (err, response) {",
											"    pm.expect(jsonBody.maximum_waived_percent).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign created_by_id\", function (err, response) {",
											"    pm.expect(jsonBody.created_by_id).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign status\", function (err, response) {",
											"    pm.expect(jsonBody.status).to.not.be.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/waiver/campaign/{{CAMPAIGN_ID}}",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"waiver",
										"campaign",
										"{{CAMPAIGN_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "[C35920] Create new waiver campaign [Start waiver test] - with status 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "754697fb-912e-4290-a7c4-d1a0d11a6d6a",
										"exec": [
											"pm.environment.set(\"CAMPAIGN_ID\", pm.response.json().id);",
											"",
											"pm.test(\"Status code is 201 Created\", function() {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Confirm campaign id is not null\", function (err, response) {",
											"    pm.expect(jsonBody.name).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign name is saved correctly\", function (err, response) {",
											"    pm.expect(jsonBody.name).to.eql(\"Test for starting campaign waiver\");",
											"});",
											"",
											"pm.test(\"Confirm campaign description is saved correctly\", function (err, response) {",
											"    pm.expect(jsonBody.description).to.eql(\"This campaign description describes how to start a campaign waiver\");",
											"});",
											"",
											"pm.test(\"Confirm campaign local_start_date\", function (err, response) {",
											"    pm.expect(jsonBody.local_start_date).to.eql(pm.environment.get(\"LOCAL_START_DATE\"));",
											"});",
											"",
											"pm.test(\"Confirm campaign local_end_date\", function (err, response) {",
											"    pm.expect(jsonBody.local_end_date).to.eql(pm.environment.get(\"LOCAL_END_DATE\"));",
											"});",
											"",
											"pm.test(\"Confirm campaign maximum_waived_percent\", function (err, response) {",
											"    pm.expect(jsonBody.maximum_waived_percent).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign created_by_id\", function (err, response) {",
											"    pm.expect(jsonBody.created_by_id).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign status\", function (err, response) {",
											"    pm.expect(jsonBody.status).to.eql(2);",
											"});",
											"setTimeout(function(){}, [10000]);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e7e49317-0d2a-4e3d-95f1-f716e4b40d79",
										"exec": [
											"",
											"var token = \"non_production_non_senstive_token\";",
											"const moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											"//pm.environment.set('LOCAL_START_DATE', moment().add(1, 'days').format(\"YYYY-MM-DD\"));",
											"pm.environment.set('LOCAL_END_DATE', moment().add(3, 'days').format(\"YYYY-MM-DD\"));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/waiver/campaign",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"waiver",
										"campaign"
									]
								}
							},
							"response": []
						},
						{
							"name": "Settings for Admin and send as employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6b5c04e-fd01-464b-b5c9-ee7fb73ea9a9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const acceptanceServiceRequest = {",
											"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
											"  method: 'GET',",
											"  header: 'Content-Type:application/json'",
											"};",
											"",
											"//Acceptance service will GET response in JSON format from loans.admin_config table",
											"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
											"    console.log(response.json());",
											"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
											"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
											"    });",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "approveNewMembersUsing",
											"value": "manual",
											"type": "text"
										},
										{
											"key": "approveRepeatMembers",
											"value": "manual",
											"type": "text",
											"disabled": true
										},
										{
											"key": "blacklistFraudulentCustomersUsing",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "showReferralsButtonOnHomescreenForCustomersOn",
											"value": "TZ_TIGO, TZ_VODACOM",
											"type": "text",
											"disabled": true
										},
										{
											"key": "performKYCCheckToNewBorrowers",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "coinsOAuthFlag",
											"value": "mno_connected, phone_exists",
											"type": "text",
											"disabled": true
										},
										{
											"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "sendAllTestSMSTo",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "sendAllTestEmailTo",
											"value": "talaqamobile@gmail.com",
											"type": "text",
											"disabled": true
										},
										{
											"key": "telerivetTestPhoneID",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "cRBLowBalanceThreshold",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "organicAcquisitionSources",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "paidAcquisitionSources",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "hoverExperimentUsers",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "sendFrom",
											"value": "employee",
											"type": "text"
										},
										{
											"key": "simulateB2CSuccessResponse",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "b2CResponseCode",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "asyncB2CResponseCode",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "asyncB2CResponseMessage",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "adminIdleSignoutTimeout",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "enablePaymentAccountValidation",
											"value": "yes",
											"type": "text",
											"disabled": true
										},
										{
											"key": "autoGenerateReceipt",
											"value": "no",
											"type": "text",
											"disabled": true
										},
										{
											"key": "maximumNumberOfFetchReceiptAttempts",
											"value": "3",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"v2",
										"adminSettings"
									]
								},
								"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
							},
							"response": []
						},
						{
							"name": "Create User With Applied loan",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b5fd81a7-6011-4b5c-a334-cdc4687fc9de",
										"exec": [
											"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
											"console.log(pm.environment.get(\"PHONE_NUMBER\"));",
											"setTimeout(function(){}, [10000]);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "72410b1d-1e1d-445f-b3ea-f63177f071e9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.environment.set(\"PERSON_ID\", pm.response.json().personId);",
											"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"v2",
										"user",
										"creation",
										"userWithAppliedLoan"
									]
								}
							},
							"response": []
						},
						{
							"name": "Approve Loan via Admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "104b91da-329f-4f9b-8845-cccbed2a4446",
										"exec": [
											"setTimeout(function(){}, [10000]);",
											"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
											"    pm.environment.set(\"LOAN_TYPE\", 2);",
											"}",
											"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
											"           pm.environment.set(\"LOAN_TYPE\", 321);",
											" }",
											"",
											"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
											"           pm.environment.set(\"LOAN_TYPE\", 52);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1840ed75-db57-4ae5-9d9b-bb6ca27435f8",
										"exec": [
											"pm.test(\"Status code is 200 found\", function (err, response) {",
											"    pm.response.to.have.status(200);",
											"});   ",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Cookie",
										"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "decision",
											"value": "1",
											"type": "text"
										},
										{
											"key": "loan_limit",
											"value": "50000",
											"type": "text"
										},
										{
											"key": "notes",
											"value": "",
											"type": "text"
										},
										{
											"key": "loan_term_set",
											"value": "",
											"type": "text"
										},
										{
											"key": "eligible_loan_type_ids[]",
											"value": "{{LOAN_TYPE}}",
											"type": "text"
										},
										{
											"key": "submit",
											"value": "Submit",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID}}",
									"host": [
										"{{SERVER_API_BASE_URL}}"
									],
									"path": [
										"admin",
										"people",
										"approveReject",
										"id",
										"{{PERSON_ID}}"
									]
								},
								"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
							},
							"response": []
						},
						{
							"name": "Accept loan offer on app",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f102255a-aa39-483d-800f-c43d7f3fed32",
										"exec": [
											"setTimeout(function(){}, [1000]);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a295f63b-c1a4-4f8b-83cc-88efad5db1a5",
										"exec": [
											"pm.test(\"Status code is 200\", function (err, response) {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"v2",
										"loan",
										"user_accept_offer"
									]
								},
								"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
							},
							"response": []
						},
						{
							"name": "[AS] Mark payment as sent from admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7cc607dc-766e-4f95-ba54-194c133cf4b2",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3f40a075-eb57-4768-a015-ff4c93cb1eea",
										"exec": [
											"setTimeout(function(){}, [10000]);",
											"//Setup date",
											"var moment = require('moment');",
											"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
											"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
											"",
											"//Set the correct rails provider that match the country",
											"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
											"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
											"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
											"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
											"   ",
											"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
											"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
											"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
											"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
											"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
											"  ",
											"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
											"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
											"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
											"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
											"   ",
											"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
											"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
											"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
											"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
											"   ",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Cookie",
										"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "transaction_amount",
											"value": "3000",
											"type": "text"
										},
										{
											"key": "confirmation_number",
											"value": "{{CONFIRMATION_NUMBER}}",
											"type": "text"
										},
										{
											"key": "transaction_date",
											"value": "{{TIME_NOW_SEND_PAYMENT}}",
											"description": "10/11/2018, 11:25 AM",
											"type": "text"
										},
										{
											"key": "mno_provider_name",
											"value": "{{MNO-PROVIDER}}",
											"type": "text"
										},
										{
											"key": "submit",
											"value": "Submitting...",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID}}",
									"host": [
										"{{SERVER_API_BASE_URL}}"
									],
									"path": [
										"admin",
										"people",
										"addDisbursement",
										"id",
										"{{PERSON_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "[AS] Insert record in Loan Collection History Table",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a607514b-408e-467f-8cb9-59e62cc15345",
										"exec": [
											"setTimeout(function(){}, [20000]);",
											"",
											"var moment = require('moment');",
											"pm.environment.set(\"COLLECTION_DATE\", moment().subtract('days', 10).format(\"YYYY-MM-DD\"));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4889177a-d1e1-490e-94f0-d97ef781c343",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"LOAN_COLLECTION_ID\", jsonBody.id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"loan_collection_history"
									]
								}
							},
							"response": []
						},
						{
							"name": "[AS] Insert record in Loan Collection Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56abe220-dd5f-4317-98c2-e1abf5d70c68",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d75c9f0c-dde8-4aa6-a96f-59100213745b",
										"exec": [
											"setTimeout(function(){}, [20000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"loan_collection"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Test step] - Trigger account processing",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "835f412b-4b8d-42b7-bdc5-4548100ee049",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify response returned is New Process started\", function() {",
											"    pm.expect(responseBody).to.eql(\"New process started\\n\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{AUTHORIZATION_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/account_processing/run",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"account_processing",
										"run"
									]
								}
							},
							"response": []
						},
						{
							"name": "[C35920]  Start waiver test",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify response returned is New Process started\", function() {",
											"    pm.expect(responseBody).to.eql(\"Campaign started\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "multipart/form-data"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/waiver/start",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"waiver",
										"start"
									]
								}
							},
							"response": []
						},
						{
							"name": "[AS]  Retrieve latest account process - validate it's done - isActive [0]",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2d36a9d3-2a96-493e-a680-0cc50076c58c",
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ff1cbe07-90aa-4a8e-918b-3bca07714c70",
										"exec": [
											"pm.test(\"Status code is 200 OK\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Confirm account process is in status done\", function (err, response) {",
											"    pm.expect(jsonBody.stage).to.eql(\"done\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing/latest",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"account_processing",
										"latest"
									]
								}
							},
							"response": []
						},
						{
							"name": "[AS]  Retrieve campaign by Id - validate campaign is running",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
											"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
											"}",
											"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
											" }",
											"",
											"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
											"}",
											"",
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
											"if (!dayCounter)",
											"{",
											"    // set default if not exists",
											"    dayCounter = 1;",
											"}",
											"",
											"var moment = require('moment');",
											"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
											"dayCounter += 1;",
											"pm.environment.set('DATE_COUNTER', dayCounter);",
											"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 200 OK\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Confirm campaign waiver is in status 3\", function (err, response) {",
											"    pm.expect(jsonBody.status).to.eql(3);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/waiver_campaign/{{CAMPAIGN_ID}}",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"waiver_campaign",
										"{{CAMPAIGN_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Test]  Sms should be on outgoing message table in db",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Message reminder exists\", function () ",
											"{",
											"    pm.expect(pm.response.text()).to.include(\"Tala’s offering you a chance to clear your loan\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "multipart/form-data"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "fi",
											"value": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/otp/to/{{PHONE_NUMBER}}/template/632",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"v2",
										"otp",
										"to",
										"{{PHONE_NUMBER}}",
										"template",
										"632"
									]
								}
							},
							"response": []
						},
						{
							"name": "Admin: Mark repayment as received",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "447cb9be-5119-4ca0-bef2-f7db35ac67c7",
										"exec": [
											"var moment = require('moment');",
											"",
											"",
											"//Set the correct rails provider that match the country",
											"if(pm.environment.get(\"COUNTRY\") === (\"MX\")) { //If in MX",
											"    pm.environment.set(\"MNO_PROVIDER_REPAY\", \"MX_STP\");",
											"    pm.environment.set(\"TIME_NOW_RECEIVE_REPAYMENT\",moment().subtract(9, 'hours').format(\"YYYY-MM-DDTHH:MM\"));",
											"} else if(pm.environment.get(\"COUNTRY\") === (\"PH\")) { //If in  PH",
											"    pm.environment.set(\"MNO_PROVIDER_REPAY\", \"PH_COINS\");",
											"    pm.environment.set(\"TIME_NOW_RECEIVE_REPAYMENT\",moment().subtract(2, 'minutes').format(\"YYYY-MM-DDTHH:MM\"));",
											"} else if(pm.environment.get(\"COUNTRY\") === (\"TZ\")) { //If in TZ",
											"    pm.environment.set(\"MNO_PROVIDER_REPAY\", \"TZ_TIGO\");",
											"    pm.environment.set(\"TIME_NOW_RECEIVE_REPAYMENT\",moment().subtract(1, 'minutes').format(\"YYYY-MM-DDTHH:MM\"));",
											"} else if(pm.environment.get(\"COUNTRY\") === (\"KE\")) { //If in Kenya",
											"    pm.environment.set(\"MNO_PROVIDER_REPAY\",\"KE_SAFARICOM\" );",
											"    pm.environment.set(\"TIME_NOW_RECEIVE_REPAYMENT\",moment().subtract(10, 'minutes').format(\"YYYY-MM-DDTHH:MM\"));",
											"}",
											"",
											"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
											"",
											"",
											"",
											"var loanAmount = pm.environment.get(\"LOAN_AMOUNT_DISBURSED\");",
											"var interestRate = pm.environment.get(\"INTEREST_RATE\");",
											"var interestAmount = (interestRate * loanAmount);",
											"var amountOwed = (parseInt(interestAmount) + parseInt(loanAmount));",
											"",
											"console.log(\"intereset amount : \", pm.environment.get(\"INTEREST_RATE\"));",
											"console.log(\"interest rate : \", interestRate);",
											"console.log(\"amount owed : \", amountOwed);",
											"",
											"pm.environment.set(\"AMOUNT_OWED\", amountOwed);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "449f9e12-3c34-408e-a342-28f26ddd49db",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Cookie",
										"type": "text",
										"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "transaction_amount",
											"value": "{{AMOUNT_OWED}}",
											"type": "text"
										},
										{
											"key": "confirmation_number",
											"value": "{{CONFIRMATION_NUMBER}}",
											"type": "text"
										},
										{
											"key": "transaction_date",
											"value": "{{TIME_NOW_RECEIVE_REPAYMENT}}",
											"type": "text"
										},
										{
											"key": "transaction_account_reference_number",
											"value": "\"\"",
											"type": "text"
										},
										{
											"key": "mno_provider_name",
											"value": "{{MNO_PROVIDER_REPAY}}",
											"type": "text"
										},
										{
											"key": "submit",
											"value": "Submitting...",
											"type": "text"
										}
									],
									"options": {
										"urlencoded": {}
									}
								},
								"url": {
									"raw": "{{SERVER_API_BASE_URL}}/admin/people/addRepayment/id/{{PERSON_ID}}",
									"host": [
										"{{SERVER_API_BASE_URL}}"
									],
									"path": [
										"admin",
										"people",
										"addRepayment",
										"id",
										"{{PERSON_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "SOAP Request:- Confirm the details of the person making the payment on behalf of tala customer.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1ae2c9dd-861f-4e49-988d-88335092e8fb",
										"exec": [
											"setTimeout(function(){}, [10000]);",
											"",
											"//Setup the amount to be paid for the unassigned payments transaction",
											"pm.environment.set(\"AMOUNT\", 1000);",
											"",
											"//Setup sender phone number based on the country",
											"pm.environment.set(\"SENDER_PHONE\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
											"",
											"//Setup confirmation number",
											"pm.environment.set(\"CONFIRMATION_NUMBER_1\", \"KE_C2B_\" + Math.random().toString(36).substr(2, 6));",
											"",
											"////Setup date",
											"var moment = require('moment');",
											"pm.environment.set(\"TIME_NOW\",moment().format(\"YYYY-MM-DD H:m\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a0df936a-1bd3-43bf-8c6b-4c1bbb57e172",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test wether transaction was successful.\", function(err, response){",
											"    if(err){",
											"        console.log(err);",
											"    } else {",
											"        pm.expect(pm.response.text()).to.include(\"Success\");",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://payments-staging.inventureaccess.com:8410/api/mno/c2b/ke/saf/validate",
									"protocol": "https",
									"host": [
										"payments-staging",
										"inventureaccess",
										"com"
									],
									"port": "8410",
									"path": [
										"api",
										"mno",
										"c2b",
										"ke",
										"saf",
										"validate"
									]
								}
							},
							"response": []
						},
						{
							"name": "SOAP Request:- Validate the details of the person making the payment on behalf of tala customer.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dadadd69-2f2e-4419-81fc-e30c3abb648a",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test wether transaction was successful.\", function(err, response){",
											"    if(err){",
											"        console.log(err);",
											"    } else {",
											"        pm.expect(pm.response.text()).to.include(\"Success\");",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "700a82f8-0545-479b-b3ab-1293eda2a501",
										"exec": [
											"setTimeout(function(){}, [10000]);",
											"",
											"//Setup confirmation number",
											"pm.environment.set(\"CONFIRMATION_NUMBER_2\", \"KE_C2B_\" + Math.random().toString(36).substr(2, 6));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:c2b=\"http://cps.huawei.com/cpsinterface/c2bpayment\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <c2b:C2BPaymentValidationRequest>\n         <TransType>PayBill</TransType>\n         <TransID>{{CONFIRMATION_NUMBER_2}}</TransID>\n         <TransTime>{{TIME_NOW}}</TransTime>\n         <TransAmount>{{AMOUNT}}</TransAmount>\n         <BusinessShortCode>851900</BusinessShortCode>\n         <BillRefNumber>{{SENDER_PHONE}}</BillRefNumber>\n         <InvoiceNumber></InvoiceNumber>\n         <MSISDN>{{SENDER_PHONE}}</MSISDN>\n         <KYCInfo>\n            <KYCName>[Personal Details][First Name]</KYCName>\n            <KYCValue>PAUL JOHN BANAL</KYCValue>\n         </KYCInfo>\n         <KYCInfo>\n            <KYCName>[Personal Details][Last Name]</KYCName>\n            <KYCValue>FOJAS</KYCValue>\n         </KYCInfo>\n      </c2b:C2BPaymentValidationRequest>\n   </soapenv:Body>\n</soapenv:Envelope>",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://payments-staging.inventureaccess.com:8410/api/mno/c2b/ke/saf/validate",
									"protocol": "https",
									"host": [
										"payments-staging",
										"inventureaccess",
										"com"
									],
									"port": "8410",
									"path": [
										"api",
										"mno",
										"c2b",
										"ke",
										"saf",
										"validate"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Non existent campign retrieval",
					"item": [
						{
							"name": "[C34165]  Retrieve a non-existent waiver result by waiver_result_id should return 404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
											"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
											"}",
											"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
											" }",
											"",
											"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
											"}",
											"",
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
											"if (!dayCounter)",
											"{",
											"    // set default if not exists",
											"    dayCounter = 1;",
											"}",
											"",
											"var moment = require('moment');",
											"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
											"dayCounter += 1;",
											"pm.environment.set('DATE_COUNTER', dayCounter);",
											"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 404 Not Found\", function() {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Error should be waiver_result matching id: {id} not found\", function (err, response) {",
											"    pm.expect(jsonBody.errors).to.eql(\"waiver_result matching id: 10000 not found\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/waiver/result/10000",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"waiver",
										"result",
										"10000"
									]
								}
							},
							"response": []
						},
						{
							"name": "[C34161]  Retrieve non existent waiver campaign record returns 404 not found",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
											"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
											"}",
											"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
											" }",
											"",
											"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
											"}",
											"",
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
											"if (!dayCounter)",
											"{",
											"    // set default if not exists",
											"    dayCounter = 1;",
											"}",
											"",
											"var moment = require('moment');",
											"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
											"dayCounter += 1;",
											"pm.environment.set('DATE_COUNTER', dayCounter);",
											"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 404 Not found\", function() {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Error should be waiver_campaign matching id: {id} not found\", function (err, response) {",
											"    pm.expect(jsonBody.errors).to.eql(\"waiver_campaign matching id: 10000 not found\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/waiver/campaign/10000",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"waiver",
										"campaign",
										"10000"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Retrieving waiver campaigns",
					"item": [
						{
							"name": "[C34163]  Retrieve all waiver campaign records",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
											"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
											"}",
											"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
											" }",
											"",
											"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
											"}",
											"",
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
											"if (!dayCounter)",
											"{",
											"    // set default if not exists",
											"    dayCounter = 1;",
											"}",
											"",
											"var moment = require('moment');",
											"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
											"dayCounter += 1;",
											"pm.environment.set('DATE_COUNTER', dayCounter);",
											"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 200 OK\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Confirm campaign resultsCount is greater than 2 records\", function (err, response) {",
											"    pm.expect(jsonBody.resultsCount) > 2;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/waiver/campaign",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"waiver",
										"campaign"
									]
								}
							},
							"response": []
						},
						{
							"name": "[C29873]  Retrieve all waiver result records",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
											"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
											"}",
											"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
											" }",
											"",
											"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
											"}",
											"",
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
											"if (!dayCounter)",
											"{",
											"    // set default if not exists",
											"    dayCounter = 1;",
											"}",
											"",
											"var moment = require('moment');",
											"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
											"dayCounter += 1;",
											"pm.environment.set('DATE_COUNTER', dayCounter);",
											"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 200 OK\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Confirm waiver results resultsCount is not null\", function (err, response) {",
											"    pm.expect(jsonBody.resultsCount).to.not.be.null;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/waiver/result",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"waiver",
										"result"
									]
								}
							},
							"response": []
						},
						{
							"name": "[C29885]  Retrieve particular waiver campaign record",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
											"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
											"}",
											"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
											" }",
											"",
											"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
											"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
											"}",
											"",
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
											"if (!dayCounter)",
											"{",
											"    // set default if not exists",
											"    dayCounter = 1;",
											"}",
											"",
											"var moment = require('moment');",
											"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
											"dayCounter += 1;",
											"pm.environment.set('DATE_COUNTER', dayCounter);",
											"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 200 OK\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Confirm campaign id is not null\", function (err, response) {",
											"    pm.expect(jsonBody.name).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign name is saved correctly\", function (err, response) {",
											"    pm.expect(jsonBody.name).to.eql(\"Campaign test name - after update\");",
											"});",
											"",
											"pm.test(\"Confirm campaign description is saved correctly\", function (err, response) {",
											"    pm.expect(jsonBody.description).to.eql(\"About a test campaign - after update\");",
											"});",
											"",
											"pm.test(\"Confirm campaign local_start_date\", function (err, response) {",
											"    pm.expect(jsonBody.local_start_date).to.eql(pm.environment.get(\"LOCAL_START_DATE\"));",
											"});",
											"",
											"pm.test(\"Confirm campaign local_end_date\", function (err, response) {",
											"    pm.expect(jsonBody.local_end_date).to.eql(pm.environment.get(\"LOCAL_END_DATE\"));",
											"});",
											"",
											"pm.test(\"Confirm campaign maximum_waived_percent\", function (err, response) {",
											"    pm.expect(jsonBody.maximum_waived_percent).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign created_by_id\", function (err, response) {",
											"    pm.expect(jsonBody.created_by_id).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Confirm campaign status\", function (err, response) {",
											"    pm.expect(jsonBody.status).to.not.be.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/waiver/campaign/{{CAMPAIGN_ID}}",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"waiver",
										"campaign",
										"{{CAMPAIGN_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Invalid token on loan collection",
					"item": [
						{
							"name": "[C29871] Invalid token should return 400 Bad Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"pm.environment.set(\"HASH_TOKEN_LOAN_COLLECTIONS\", \"invalid-token-value\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"pm.test(\"Status code is 400 Bad Request\", function() {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Error should be Auth token is not valid\", function (err, response) {",
											"    pm.expect(jsonBody.error).to.eql(\"Auth token is not valid\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/waiver/campaign",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"waiver",
										"campaign"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "[AS] Append to CSV for waiver results upload",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
								"exec": [
									"",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
								"exec": [
									"pm.test(\"Status code is 200 Ok\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonBody = JSON.parse(responseBody);",
									"",
									"pm.test(\"Confirm response is true\", function (err, response) {",
									"    pm.expect(jsonBody.response) === true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"type": "text",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"group_type\": \"treatment\",\n    \"person_id\": \"{{PERSON_ID}}\",\n    \"loan_application_id\": \"{{LOAN_APPLICATION_ID}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loancollection/automatewaiver/appendToCsv",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"utility",
								"v2",
								"loancollection",
								"automatewaiver",
								"appendToCsv"
							]
						}
					},
					"response": []
				},
				{
					"name": "[AS] Attach accounts to waiver campaign",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
								"exec": [
									"",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
								"exec": [
									"pm.test(\"Status code is 201 Created\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonBody = JSON.parse(responseBody);",
									"",
									"pm.test(\"Confirm resposne is true\", function (err, response) {",
									"    pm.expect(jsonBody.response) === true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loancollection/automatewaiver/campaignId/{{CAMPAIGN_ID}}/uploadCsv",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"utility",
								"v2",
								"loancollection",
								"automatewaiver",
								"campaignId",
								"{{CAMPAIGN_ID}}",
								"uploadCsv"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "[Global]Account processing UI Tests",
			"item": [
				{
					"name": "[C4376]Partner functionality on admin",
					"item": [
						{
							"name": "setup data first",
							"item": [
								{
									"name": "Truncate data",
									"item": [
										{
											"name": "[Util] - Truncate data on all partner_segmentation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a6857e75-0975-49c8-93f2-bfc6eff5da6d",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"partner_segmentation_config"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket_segmetation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9120eb1a-8124-42c7-ac8d-dfd1824a188c",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket_segmentation_config"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on delivery_channel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1241f7e0-6ba1-438d-be52-665f9f601947",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"delivery_channel"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on collection_partner",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "20d10f3a-0706-4710-ad3a-ef4df8f39dee",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"collection_partner"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7b0380fa-9762-4e8b-9a28-d3d3ec3059d3",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a02295fa-6740-479d-bc73-267faf04f2a9",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection_history",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eff838d2-ade5-4287-9dfe-d9265509ca2e",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection_history"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3c46dabd-4409-40e6-96d7-0706064a0769",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e967c388-ccd9-4602-8810-3e04b9830a2b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e58de94c-73d8-47aa-a0b4-425bf1b6ff59",
										"exec": [
											"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
											"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
											"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0ecbacad-ac17-4450-8a38-8e988ed7fac5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{ADMIN_LOGIN_USERNAME}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{ADMIN_LOGIN_PASSWORD}}",
											"type": "text"
										}
									],
									"options": {
										"urlencoded": {}
									}
								},
								"url": {
									"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
									"host": [
										"{{SERVER_API_BASE_URL}}"
									],
									"path": [
										"site",
										"authQA"
									]
								},
								"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
							},
							"response": []
						},
						{
							"name": "Create an active and inhouse partner on admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "90ea2dc8-5752-4e2f-8afd-45468140dd98",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d47f14e4-69da-4394-ab07-a0e0a3a92d41",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"Partner_UI_Tests234\",\"inhouse\":true,\"active\":true,\"entrance_amount\":0,\"exit_amount\":0,\"days_threshold\":24,\"days_max_threshold\":36,\"description\":\"Create partner through loan-collections.\"}"
								},
								"url": {
									"raw": "https://stage-ke-loancollection.inventureaccess.com/api/v1/collection_partner",
									"protocol": "https",
									"host": [
										"stage-ke-loancollection",
										"inventureaccess",
										"com"
									],
									"path": [
										"api",
										"v1",
										"collection_partner"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a collection partner",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "90ea2dc8-5752-4e2f-8afd-45468140dd98",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d47f14e4-69da-4394-ab07-a0e0a3a92d41",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"Partner_UI_Tests234\",\"inhouse\":true,\"active\":true,\"entrance_amount\":0,\"exit_amount\":0,\"days_threshold\":24,\"days_max_threshold\":36,\"description\":\"Create partner through loan-collections. Update test\",\"id\":1}"
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"collection_partner"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a list of all created active partners ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "90ea2dc8-5752-4e2f-8afd-45468140dd98",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d47f14e4-69da-4394-ab07-a0e0a3a92d41",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var jsonBody = JSON.parse(responseBody);",
											"pm.test(\"Verify active status is true.\", function (err, response) {",
											"    pm.expect(jsonBody[0].active).to.eql(true);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/list/active",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"collection_partner",
										"list",
										"active"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a list of all created partners",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "90ea2dc8-5752-4e2f-8afd-45468140dd98",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d47f14e4-69da-4394-ab07-a0e0a3a92d41",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/list",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"collection_partner",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a partner delivery config",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "90ea2dc8-5752-4e2f-8afd-45468140dd98",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d47f14e4-69da-4394-ab07-a0e0a3a92d41",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"collection_partner_id\":1,\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"collection_partner",
										"delivery_channel"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a particular delivery config",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "90ea2dc8-5752-4e2f-8afd-45468140dd98",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d47f14e4-69da-4394-ab07-a0e0a3a92d41",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    var jsonData = pm.response.json();",
											"    tests[\"Collection partner is 1\"] = jsonData.collection_partner_id == 1;",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/1/delivery_channel",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"collection_partner",
										"1",
										"delivery_channel"
									]
								}
							},
							"response": []
						}
					],
					"description": "https://talamobile.testrail.io/index.php?/suites/view/2&group_by=cases:section_id&group_order=asc&group_id=347",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5565d848-e980-4f0b-98bb-0e6148190159",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "da8fb1cd-4ba1-4971-8725-320f50dfe974",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Bucket Functionality",
					"item": [
						{
							"name": "setup data first",
							"item": [
								{
									"name": "Truncate data",
									"item": [
										{
											"name": "[Util] - Truncate data on all partner_segmentation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b8706d49-f10c-4f29-a560-d7016e70a0d6",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"partner_segmentation_config"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket_segmetation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "43c455ca-ebc7-49bd-9650-b0249e0d5036",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket_segmentation_config"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on delivery_channel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b16f451f-eb99-4351-a8e8-055fa25c6d9a",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"delivery_channel"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on collection_partner",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d79d2e98-2cf3-4142-a4ab-1213ba063145",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"collection_partner"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1971fe61-78d8-4fb3-9afb-abf92b595cc2",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b4f410c-4a3b-4554-956b-1be1ce48577a",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection_history",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f09b6209-844d-4750-be46-bfb4dd0efa78",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection_history"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "create a partner with 0 entrance and exit amounts",
									"item": [
										{
											"name": "[Helper] - Create a collection partner 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "94d2d65a-17a9-4d62-986e-e92081d3afeb",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "a4ad1a3d-b436-48ec-9448-dd1ef6f53f38",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"PARTNER_1\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"collection_partner"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create a partner delivery config partner 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "f46684be-0b3f-4f82-bdf3-b33c72beb554",
														"exec": [
															"var token = \"non_production_non_senstive_token\";",
															"var moment = require('moment');",
															"var timeStamp = moment().unix() ;",
															"",
															"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
															"",
															"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
															"var hash = MD5(token + userId + (timeStamp * 1000));",
															"",
															"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "d947db36-7290-464b-941f-350f7bdd5994",
														"exec": [
															"pm.test(\"Status code is 201\", function () {",
															"    pm.response.to.have.status(201);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-Authorization",
														"type": "text",
														"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
													"options": {}
												},
												"url": {
													"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
													"host": [
														"{{LOAN_COLLECTIONS_BASE_URL}}"
													],
													"path": [
														"api",
														"v1",
														"collection_partner",
														"delivery_channel"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b5bd6a1a-f6a3-412a-b9b1-044c9b67a508",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ccf22a8a-d71d-44b7-ac59-7c43b7c49a99",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "create partner_segmentation_config",
									"item": [
										{
											"name": "Create a partner_segmentation for  bucket",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "71fdb6da-80e2-472c-a0e4-99a6b1073d66",
														"exec": [
															"var token = \"non_production_non_senstive_token\";",
															"var moment = require('moment');",
															"var timeStamp = moment().unix() ;",
															"",
															"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
															"",
															"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
															"var hash = MD5(token + userId + (timeStamp * 1000));",
															"",
															"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "cc1a2592-1706-4f74-8fe1-fb14dda7a298",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-Authorization",
														"type": "text",
														"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\":\"partner_seg_for_partner_1\"\n    ,\"description\":\"Create a partner segmentation with type Partner\",\n    \"config\":{\"type\":\"Partner\",\"id\":1}\n}",
													"options": {}
												},
												"url": {
													"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
													"host": [
														"{{LOAN_COLLECTIONS_BASE_URL}}"
													],
													"path": [
														"api",
														"v1",
														"partner_segmentation"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "70bff56f-d104-4452-9ff5-f52f3ccd7a07",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "bb31b787-eb56-4a21-8f28-6b7c5a243173",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cbc6bd96-4165-4830-b176-483ec8888c8e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b53ecfe3-e9dc-408d-b083-5e467ac97633",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e58de94c-73d8-47aa-a0b4-425bf1b6ff59",
										"exec": [
											"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
											"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
											"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0ecbacad-ac17-4450-8a38-8e988ed7fac5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{ADMIN_LOGIN_USERNAME}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{ADMIN_LOGIN_PASSWORD}}",
											"type": "text"
										}
									],
									"options": {
										"urlencoded": {}
									}
								},
								"url": {
									"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
									"host": [
										"{{SERVER_API_BASE_URL}}"
									],
									"path": [
										"site",
										"authQA"
									]
								},
								"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
							},
							"response": []
						},
						{
							"name": "Create a bucket",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"config_id\": 1,\n\"description\": \"Test_Bucket_1\",\n\"name\": \"Test_Bucket_1\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"segmentation",
										"bucket"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a particular bucket id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"        var jsonData = pm.response.json();",
											"    tests[\"Bucket id is = 1\"] = jsonData.id == 1;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket/1",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"segmentation",
										"bucket",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a list of all buckets created",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket/list",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"segmentation",
										"bucket",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a bucket",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"config_id\": 1,\n\"description\": \"Update a bucket\",\n\"id\": 1,\n\"name\": \"Bucket_2\"\n}\n"
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"segmentation",
										"bucket"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "26d6f2c9-fd17-404e-aa78-9bfd177e9877",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bc39bdb5-7431-4a31-ba7c-70931f9a5910",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "[C4380] Bucket Segmentation Functionality",
					"item": [
						{
							"name": "setup data first",
							"item": [
								{
									"name": "Truncate data",
									"item": [
										{
											"name": "[Util] - Truncate data on all partner_segmentation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0e244293-1b25-4034-bb7b-09559520f36d",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"partner_segmentation_config"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket_segmetation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6137cf0a-87ac-4ea5-bd6d-bd1be7ba4092",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket_segmentation_config"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on delivery_channel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4a1c13ea-b31a-4c22-83d9-23ba1906e269",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"delivery_channel"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on collection_partner",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c7b8c6f4-112b-4fd4-9510-e86ef1664f9d",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"collection_partner"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b3d53973-9d08-40f3-a3e1-824ffa45cd12",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b92555b8-bfea-4f52-82f9-6cb256c0b56b",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection_history",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d202e88c-8695-4dc3-8978-e1fb49b21479",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection_history"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "create a partner with 0 entrance and exit amounts",
									"item": [
										{
											"name": "[Helper] - Create a collection partner 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "84bb0882-1e89-42ed-8ee1-2fca14dd6749",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "5901a9a6-b296-4f3e-89f2-38ae6a480d19",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"PARTNER_1\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"collection_partner"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create a partner delivery config partner 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "ebf95825-1d39-4086-8859-eaf3efffaf8e",
														"exec": [
															"var token = \"non_production_non_senstive_token\";",
															"var moment = require('moment');",
															"var timeStamp = moment().unix() ;",
															"",
															"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
															"",
															"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
															"var hash = MD5(token + userId + (timeStamp * 1000));",
															"",
															"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "7c0ed3b8-3124-43ba-b81b-37b21851c337",
														"exec": [
															"pm.test(\"Status code is 201\", function () {",
															"    pm.response.to.have.status(201);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-Authorization",
														"type": "text",
														"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
													"options": {}
												},
												"url": {
													"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
													"host": [
														"{{LOAN_COLLECTIONS_BASE_URL}}"
													],
													"path": [
														"api",
														"v1",
														"collection_partner",
														"delivery_channel"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f8b10b81-1e2e-4be5-8918-c6ad9506fec0",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3978cc2e-b4a8-4193-8463-88cd6895eb4b",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "create partner_segmentation_config",
									"item": [
										{
											"name": "Create a partner_segmentation for  bucket",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "bc7b3a72-b903-43f3-9214-d28d59d1baf4",
														"exec": [
															"var token = \"non_production_non_senstive_token\";",
															"var moment = require('moment');",
															"var timeStamp = moment().unix() ;",
															"",
															"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
															"",
															"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
															"var hash = MD5(token + userId + (timeStamp * 1000));",
															"",
															"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "f46c9a61-5934-45a0-b21b-98e12fe9f855",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-Authorization",
														"type": "text",
														"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\":\"partner_seg_for_partner_1\"\n    ,\"description\":\"Create a partner segmentation with type Partner\",\n    \"config\":{\"type\":\"Partner\",\"id\":1}\n}",
													"options": {}
												},
												"url": {
													"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
													"host": [
														"{{LOAN_COLLECTIONS_BASE_URL}}"
													],
													"path": [
														"api",
														"v1",
														"partner_segmentation"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "134f1222-b005-4870-8226-4658eedcea00",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "320deac0-12e7-4430-8366-6ac744008239",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "create bucket",
									"item": [
										{
											"name": "Create a bucket 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "822fd73d-4ba0-4404-8515-081be3c57def",
														"exec": [
															"var token = \"non_production_non_senstive_token\";",
															"var moment = require('moment');",
															"var timeStamp = moment().unix() ;",
															"",
															"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
															"",
															"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
															"var hash = MD5(token + userId + (timeStamp * 1000));",
															"",
															"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "be3b4960-b8a2-43ff-9b84-8c898ffe0a9c",
														"exec": [
															"pm.test(\"Status code is 201\", function () {",
															"    pm.response.to.have.status(201);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-Authorization",
														"type": "text",
														"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\"config_id\":1,\n\"description\": \"Test_Bucket_1\",\n\"name\": \"Test_Bucket_1\"\n}",
													"options": {}
												},
												"url": {
													"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
													"host": [
														"{{LOAN_COLLECTIONS_BASE_URL}}"
													],
													"path": [
														"api",
														"v1",
														"segmentation",
														"bucket"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Helper] Get bucket 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "0a8919e1-a90d-499f-8d31-bb7bb86d2c75",
														"exec": [
															"setTimeout(function(){}, [10000]);",
															"",
															"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
															"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ee37461f-c2ee-4f75-94b1-20b512d52c09",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"pm.environment.set(\"BUCKET_1\", pm.response.json().id);",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket",
														"latest"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b7f401e8-be2b-4338-be7d-389925bf8c67",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "264e89f9-46f3-4dfb-9c3a-3fc2cf81b117",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a727e13f-6121-428d-bff5-163138d456ae",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "59d49539-a8bc-485e-9073-47b803474a65",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e58de94c-73d8-47aa-a0b4-425bf1b6ff59",
										"exec": [
											"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
											"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
											"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0ecbacad-ac17-4450-8a38-8e988ed7fac5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{ADMIN_LOGIN_USERNAME}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{ADMIN_LOGIN_PASSWORD}}",
											"type": "text"
										}
									],
									"options": {
										"urlencoded": {}
									}
								},
								"url": {
									"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
									"host": [
										"{{SERVER_API_BASE_URL}}"
									],
									"path": [
										"site",
										"authQA"
									]
								},
								"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
							},
							"response": []
						},
						{
							"name": "Create a Bucket Segmentation with bucket as the type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"config\": {\"type\": \"Bucket\", \"id\": 1},\n\"description\": \"Create a bucket segmentation with type bucket\"\n}"
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"bucket_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get bucket Segmentation with type Bucket",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"        var jsonData = pm.response.json();",
											"            pm.expect((jsonData.config.type)).to.eql(\"Bucket\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"bucket_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Bucket Segmentation with percent as the type ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"description\":\"testing\",\"config\":{\"type\":\"PercentSegment\",\"cases\":[{\"condition\":100,\"output\":{\"type\":\"Bucket\",\"id\":1}}]}}"
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"bucket_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get bucket Segmentation with type percent",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"        var jsonData = pm.response.json();",
											"            pm.expect((jsonData.config.type)).to.eql(\"PercentSegment\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"bucket_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Bucket Segmentation with DPD as the type ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"description\":\"Create a bucket segmentation with type DPD\",\"config\":{\"type\":\"DpdSegment\",\"cases\":[{\"condition\":{\"from\":0,\"to\":22},\"output\":{\"type\":\"Bucket\",\"id\":1}},{\"condition\":{\"from\":22,\"to\":null},\"output\":{\"type\":\"Bucket\",\"id\":1}}]}}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"bucket_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get bucket Segmentation with DPD as type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"        var jsonData = pm.response.json();",
											"            pm.expect((jsonData.config.type)).to.eql(\"DpdSegment\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"bucket_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Bucket Segmentation with LoanNumber as the type  ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"description\":\"Create a bucket segmentation with loan_number\",\"config\":{\"type\":\"LoanNumberSegment\",\"cases\":[{\"condition\":{\"from\":0,\"to\":2},\"output\":{\"type\":\"Bucket\",\"id\":1}},{\"condition\":{\"from\":2,\"to\":null},\"output\":{\"type\":\"Bucket\",\"id\":1}}]}}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"bucket_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get bucket Segmentation with Loan Number as type ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"        var jsonData = pm.response.json();",
											"            pm.expect((jsonData.config.type)).to.eql(\"LoanNumberSegment\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"bucket_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Bucket Segmentation with AmountOwed as the type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"description\":\"Create a Bucket Segmentation with AmountOwed as the type\",\"config\":{\"type\":\"AmountOwnedSegment\",\"cases\":[{\"condition\":{\"from\":0,\"to\":null},\"output\":{\"type\":\"Bucket\",\"id\":1}}]}}"
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"bucket_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get bucket Segmentation with Amount Owed as type as type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"        var jsonData = pm.response.json();",
											"            pm.expect((jsonData.config.type)).to.eql(\"AmountOwnedSegment\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"bucket_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get avaialble bucket Segments list",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"        var jsonData = pm.response.json();",
											"            pm.expect((jsonData[0])).to.eql(\"PercentSegment\");",
											"            pm.expect((jsonData[1])).to.eql(\"Bucket\");",
											"            pm.expect((jsonData[2])).to.eql(\"LoanNumberSegment\");",
											"            pm.expect((jsonData[3])).to.eql(\"DpdSegment\");",
											"            pm.expect((jsonData[4])).to.eql(\"AmountOwnedSegment\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket_segments/list ",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"segmentation",
										"bucket_segments",
										"list "
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "26d6f2c9-fd17-404e-aa78-9bfd177e9877",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bc39bdb5-7431-4a31-ba7c-70931f9a5910",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "[C4380] Partner Segmentation Functionality ",
					"item": [
						{
							"name": "setup data first",
							"item": [
								{
									"name": "Truncate data",
									"item": [
										{
											"name": "[Util] - Truncate data on all partner_segmentation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1286efcb-520c-43a5-9d9e-ec7237e6d29b",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"partner_segmentation_config"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket_segmetation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "679699b8-1a48-4067-8785-eafd2e92612f",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket_segmentation_config"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on delivery_channel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "20e13933-2421-400b-9d85-097131a730ec",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"delivery_channel"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on collection_partner",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d38cbac4-0337-4bbf-92c5-9483a0d5b3e5",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"collection_partner"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8ab1e3ad-45ba-4d9f-96b9-057f57025507",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "83bd8b6d-18c4-48b5-b521-b5214edbc325",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection_history",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bf451dda-4977-4124-b9b7-f362e6231990",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection_history"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "create a partner with 0 entrance and exit amounts",
									"item": [
										{
											"name": "[Helper] - Create a collection partner 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3882da3d-ae4d-466a-a967-615e51344afd",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "9bf6ff54-4f69-47b8-b938-5870f44ea43a",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"PARTNER_1\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"collection_partner"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create a partner delivery config partner 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "96bd7e15-a307-4822-bb5d-3236910f3211",
														"exec": [
															"var token = \"non_production_non_senstive_token\";",
															"var moment = require('moment');",
															"var timeStamp = moment().unix() ;",
															"",
															"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
															"",
															"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
															"var hash = MD5(token + userId + (timeStamp * 1000));",
															"",
															"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "7fb6f06e-01ef-43c1-9bc2-470ac2b22e76",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-Authorization",
														"type": "text",
														"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
													"options": {}
												},
												"url": {
													"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
													"host": [
														"{{LOAN_COLLECTIONS_BASE_URL}}"
													],
													"path": [
														"api",
														"v1",
														"collection_partner",
														"delivery_channel"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fbc53ec6-d0e6-4662-bb05-19c24126583b",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "61c8dd89-df66-4fdb-8ae1-fe8abbcda96b",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "978a3b59-ccce-4159-bd5c-a77c66644043",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9384a0d0-c96c-4f74-9059-af3eaf053943",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e58de94c-73d8-47aa-a0b4-425bf1b6ff59",
										"exec": [
											"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
											"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
											"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0ecbacad-ac17-4450-8a38-8e988ed7fac5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{ADMIN_LOGIN_USERNAME}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{ADMIN_LOGIN_PASSWORD}}",
											"type": "text"
										}
									],
									"options": {
										"urlencoded": {}
									}
								},
								"url": {
									"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
									"host": [
										"{{SERVER_API_BASE_URL}}"
									],
									"path": [
										"site",
										"authQA"
									]
								},
								"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
							},
							"response": []
						},
						{
							"name": "Create a partner_segmentation with partner as the type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"Partner_Seg\",\"description\":\"Create a partner_segmentation with partner as the type\",\"config\":{\"type\":\"Partner\",\"id\":1}}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"partner_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get partner_segmentation with type partner",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"        var jsonData = pm.response.json();",
											"    tests[\"Segmentation type is partner\"] = jsonData.config.type == \"Partner\";",
											"    tests[\"Segmentation id is what was created earlier (1)\"] = jsonData.id == 1;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation/1",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"partner_segmentation",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a partner_segmentation with percent as the type ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"name\":\"partner_segmentation1\",\n\"description\":\"Create partner_segmentation with type percent\",\n\"config\":\n{\"type\":\"PercentSegment\",\n\"cases\":[{\"condition\":100,\n\"output\":{\"type\":\"Partner\",\"id\":1}}]}}"
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"partner_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get partner_segmentation with type percent",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"        var jsonData = pm.response.json();",
											"    var testFlag = false;",
											"    for(i=0; i < jsonData.length; i++)",
											"    {",
											"        if(jsonData[i].name === \"partner_segmentation1\" && jsonData[i].config.type === \"PercentSegment\")",
											"        {",
											"            testFlag = true;",
											"            break;",
											"        }",
											"    }",
											"    pm.expect((testFlag).toString()).to.eql(\"true\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation/list",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"partner_segmentation",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a partner_segmentation with DPD as the type ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"Partner_Segmentation_DPD\",\"description\":\"Partner Segmentation type as DPD\",\"config\":{\"type\":\"DpdSegment\",\"cases\":[{\"condition\":{\"from\":0,\"to\":null},\"output\":{\"type\":\"Partner\",\"id\":1}}]}}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"partner_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get partner_segmentation with DPD as type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"        var jsonData = pm.response.json();",
											"    var testFlag = false;",
											"    for(i=0; i < jsonData.length; i++)",
											"    {",
											"        if(jsonData[i].name === \"Partner_Segmentation_DPD\" && jsonData[i].config.type === \"DpdSegment\")",
											"        {",
											"            testFlag = true;",
											"            break;",
											"        }",
											"    }",
											"    pm.expect((testFlag).toString()).to.eql(\"true\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation/list",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"partner_segmentation",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a partner_segmentation with LoanNumber as the type  ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"partner_segmentation4\",\"description\":\"Create partner_segmentation with type loan number\",\"config\":{\"type\":\"LoanNumberSegment\",\"cases\":[{\"condition\":{\"from\":0,\"to\":5000},\"output\":{\"type\":\"Partner\",\"id\":1}},{\"condition\":{\"from\":5000,\"to\":null},\"output\":{\"type\":\"Partner\",\"id\":1}}]}}"
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"partner_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get partner_segmentation with Loan Number as type ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"        var jsonData = pm.response.json();",
											"    var testFlag = false;",
											"    for(i=0; i < jsonData.length; i++)",
											"    {",
											"        if(jsonData[i].name === \"partner_segmentation4\" && jsonData[i].config.type === \"LoanNumberSegment\")",
											"        {",
											"            testFlag = true;",
											"            break;",
											"        }",
											"    }",
											"    pm.expect((testFlag).toString()).to.eql(\"true\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation/list",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"partner_segmentation",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a partner_segmentation with AmountOwed as the type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"Partner_segmentation5\",\n\"description\":\"Create partner_segmentation with type amountOwed\",\n\"config\":{\"type\":\"AmountOwnedSegment\",\n\"cases\":[{\"condition\":{\"from\":0,\"to\":null},\"output\":{\"type\":\"Partner\",\"id\":1}}]}}"
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"partner_segmentation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get partner_segmentation with Amount Owed as type as type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74836792-e64e-49b2-b6d3-5c5b322594b2",
										"exec": [
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "724ccef8-b255-4927-8c81-b2b028f76f6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"        var jsonData = pm.response.json();",
											"    var testFlag = false;",
											"    for(i=0; i < jsonData.length; i++)",
											"    {",
											"        if(jsonData[i].name === \"Partner_segmentation5\" && jsonData[i].config.type === \"AmountOwnedSegment\")",
											"        {",
											"            testFlag = true;",
											"            break;",
											"        }",
											"    }",
											"    pm.expect((testFlag).toString()).to.eql(\"true\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation/list",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"partner_segmentation",
										"list"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "26d6f2c9-fd17-404e-aa78-9bfd177e9877",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bc39bdb5-7431-4a31-ba7c-70931f9a5910",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ec171d84-b081-425a-9b25-00e1786bc51f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b350a474-6a3c-46fa-8633-ea68d915b9e9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "[Global] PTP With DNC ON",
			"item": [
				{
					"name": "Create User from Mobile App",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4837c126-94d8-4ca3-a676-296d5521b9ba",
								"exec": [
									"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
									"console.log(pm.environment.get(\"PHONE_NUMBER\"));",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1470f2ff-f790-4934-a1d8-9e7e0e939842",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"PERSON_ID\", pm.response.json().data.personId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"utility",
								"v2",
								"user",
								"creation"
							]
						},
						"description": "Create a new user:\n      This is what happens when the user signs up via the Android app\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, KE, TZ, MX\n     \n       @return [Map] which is converted to JSON by Spring"
					},
					"response": []
				},
				{
					"name": "Admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e58de94c-73d8-47aa-a0b4-425bf1b6ff59",
								"exec": [
									"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
									"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
									"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0ecbacad-ac17-4450-8a38-8e988ed7fac5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{ADMIN_LOGIN_USERNAME}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{ADMIN_LOGIN_PASSWORD}}",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"site",
								"authQA"
							]
						},
						"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
					},
					"response": []
				},
				{
					"name": "Add custom loan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6b657fc-3e43-4079-9e06-56b17667befc",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "eebf4273-ab56-4b42-833d-f418b7f33bcb",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "amount",
									"value": "3000",
									"type": "text"
								},
								{
									"key": "interest_rate",
									"value": "15",
									"type": "text"
								},
								{
									"key": "repayment_frequency",
									"value": "21",
									"type": "text"
								},
								{
									"key": "repayment_counts",
									"value": "1",
									"type": "text"
								},
								{
									"key": "submit",
									"value": "Submit",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/admin/people/addCustomLoan/id/{{PERSON_ID}}",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"admin",
								"people",
								"addCustomLoan",
								"id",
								"{{PERSON_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm loan is sent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56abe220-dd5f-4317-98c2-e1abf5d70c68",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm the payment is sent to customer.\", function (err, response) {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.expect(jsonBody[0].status).to.eql(8);",
									"});",
									"",
									"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json()[0].id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5e90791d-5033-4d4f-b89c-89c3fa621b67",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loans/loan_application/person_id/{{PERSON_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loans",
								"loan_application",
								"person_id",
								"{{PERSON_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submit DNC Form (TC-9230)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66be015f-02b7-4d03-83d8-835b450a2bc8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"<b style=\\\"color: green\\\">Do Not Contact : ON</b>\");",
									"    pm.expect(pm.response.text()).to.include(\"<a href=\\\"/admin/people/turnOffDoNotContact/id/\" + pm.environment.get(\"PERSON_ID\") + \"\\\" class=\\\"btn btn-success\\\">Switch\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "reason",
									"value": "{{PEOPLE_DO_NOT_CONTACT_MSG}}",
									"type": "text"
								},
								{
									"key": "yes",
									"value": "Submit",
									"type": "text"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/admin/people/doNotContact/id/{{PERSON_ID}}",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"admin",
								"people",
								"doNotContact",
								"id",
								"{{PERSON_ID}}"
							]
						},
						"description": "Happy path for DNC Form Submission (<a href='https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=24480754'>TC-9230</a>)"
					},
					"response": []
				},
				{
					"name": "DNC data captured in the People_do_not_contact table (TC-9210)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60744472-62e9-499b-a272-2c53f9a19617",
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"   pm.response.to.have.status(200); ",
									"});",
									"",
									"pm.test(\"Verify people_do_not_contact table is updated with the correct message\", function(err, response){",
									"   if(err){",
									"       console.log(err);",
									"   } else {",
									"       var jsonBody = JSON.parse(responseBody);",
									"       pm.expect(jsonBody.reason).to.eql(pm.environment.get(\"PEOPLE_DO_NOT_CONTACT_MSG\"));",
									"   }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loans/people_do_not_contact/person_id/{{PERSON_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loans",
								"people_do_not_contact",
								"person_id",
								"{{PERSON_ID}}"
							]
						},
						"description": "DNC data captured in the People_do_not_contact table (<a href='https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=24453571'>TC-9210</a>)"
					},
					"response": []
				},
				{
					"name": "Backdate active Loan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7cc607dc-766e-4f95-ba54-194c133cf4b2",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3f40a075-eb57-4768-a015-ff4c93cb1eea",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									"//Setup date",
									"var moment = require('moment');",
									"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
									"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
									"",
									"//Set the correct rails provider that match the country",
									"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
									"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
									"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
									"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
									"   ",
									"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
									"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
									"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
									"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
									"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
									"  ",
									"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
									"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
									"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
									"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
									"   ",
									"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
									"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
									"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
									"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
									"   ",
									"}",
									"var moment = require('moment');",
									"var backDatedDay = moment().subtract(22, 'day').format(\"YYYY-MM-DD\");",
									"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "disbursement_date",
									"value": "{{DATE_TO_BACKDATE_TO}}",
									"type": "text"
								},
								{
									"key": "submit",
									"value": "Submitting...",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"admin",
								"people",
								"changeDisbursement",
								"id",
								"{{PERSON_ID}}",
								"loan_application_id",
								"{{LOAN_APPLICATION_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Util] - Truncate all tables [Snowflake] Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6378760b-d082-4113-834d-4393e5fcc802",
								"exec": [
									" pm.test(\"Status code is 200\", function () {",
									"     pm.response.to.have.status(200);",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/truncate_all",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"snowflake",
								"truncate_all"
							]
						},
						"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
					},
					"response": []
				},
				{
					"name": "[Util] - Migrate user to snowflake by personId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "59cbe5f4-35b1-44be-a42f-b36d4a6baaa1",
								"exec": [
									" pm.test(\"Status code is 200\", function () {",
									"     pm.response.to.have.status(200);",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"utility",
								"loancollections",
								"uploadUserDataToSnowflake",
								"personId",
								"{{PERSON_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Helper] - Truncate all from account_processing_log",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"account_processing_log"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE all entries in the loan_collection table",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14b62a37-1af5-427d-aef2-e7ced1fbda05",
								"exec": [
									" pm.test(\"Status code is 204 No Content\", function () {",
									"     pm.response.to.have.status(204);",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Helper] - Truncate all from account_processing_log",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f3bb231e-451a-44ef-8073-1cb36608d417",
								"exec": [
									" pm.test(\"Status code is 204 No Content\", function () {",
									"     pm.response.to.have.status(204);",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"account_processing"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Helper] DELETE all entries in the  loan collection history table",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eddcbb53-0d15-40ee-84b8-32c23f7cf7ee",
								"exec": [
									" pm.test(\"Status code is 204 No Content\", function () {",
									"     pm.response.to.have.status(204);",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection_history"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Helper] DELETE all entries in the generated file table",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a57ec9c7-95e3-4f4f-add4-a440e92751fe",
								"exec": [
									" pm.test(\"Status code is 204 No Content\", function () {",
									"     pm.response.to.have.status(204);",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/generated_file",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"generated_file"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Test] - Trigger account processing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "835f412b-4b8d-42b7-bdc5-4548100ee049",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonBody = JSON.parse(responseBody);",
									"",
									"pm.test(\"Verify response returned is New Process started\", function() {",
									"    var response = pm.response.json();",
									"    pm.expect(jsonBody).to.eql(\"New process started\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "87a9269c-a823-4e09-b8a3-79e0bc1d6e6a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Authorization",
								"value": "{{AUTHORIZATION_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/account_processing/run",
							"host": [
								"{{LOAN_COLLECTIONS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"account_processing",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if user is added to in-house collections ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "532ed563-6738-4dc6-bd69-303713fe413a",
								"exec": [
									" pm.test(\"Status code is 200\", function () {",
									"     pm.response.to.have.status(200);",
									" });",
									" ",
									" //Check if the person has gone into loan collections and assigned to bucket id 2.",
									"pm.test(\"Verify customer has entered in house collections and bucket id is 2\", function () {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.expect(jsonBody[0].bucketId).to.eql(2);",
									"}); ",
									" //Check if the person has gone into loan collections and partner id is null.",
									"pm.test(\"Verify customer has entered in house collections and partner id is null\", function () {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.expect(jsonBody[0].partnerId).to.eql(null);",
									"}); ",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a0b40464-017a-48e0-9a45-f1c81077c703",
								"exec": [
									"setTimeout(function(){}, [20000]);",
									"",
									"    ",
									"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
									"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
									"}",
									"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
									" }",
									"",
									"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
									"}",
									"",
									"var loanAmount = pm.environment.get(\"LOAN_AMOUNT_DISBURSED\");",
									"var interestRate = pm.environment.get(\"INTEREST_RATE\");",
									"var interestAmount = (interestRate * loanAmount);",
									"var amountOwed = (parseInt(interestAmount) + parseInt(loanAmount));",
									"",
									"console.log(\"amount owed : \", amountOwed);",
									"console.log(\"intereset amount : \", interestAmount);",
									"console.log(\"interest rate : \", interestRate);",
									"console.log(\"amount owed : \", amountOwed);",
									"",
									"pm.environment.set(\"AMOUNT_OWED\", amountOwed);",
									"",
									"//create the authorisation token",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"var moment = require('moment');",
									"var dt = moment().format(\"YYYY-MM-DD\");",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection",
								"person_id",
								"{{PERSON_ID}}"
							]
						},
						"description": "Validates that added user is added to in-house collections queue. \nhttps://talamobile.testrail.io/index.php?/cases/view/26429\nhttps://talamobile.testrail.io/index.php?/cases/view/26430"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a27b1d40-938a-4a48-8e19-fa72e9306ab9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9d163886-a939-4697-b237-9f9155f05be1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "[Global] PTP",
			"item": [
				{
					"name": "setup data first",
					"item": [
						{
							"name": "Truncate data",
							"item": [
								{
									"name": "[Util] - Truncate data on all partner_segmentation_configs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1d79a250-20af-4a3a-bf81-1681f8c7e8f4",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"partner_segmentation_config"
											]
										},
										"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all bucket_segmetation_configs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f9c1b0a5-0224-4af2-8806-2c20dd03c296",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"bucket_segmentation_config"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on delivery_channel",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aaaa8f37-3ad4-4b76-8500-56b8c9bace2c",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"delivery_channel"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on collection_partner",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "08639a56-c6af-43d8-89a3-7fb6ba3ba343",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"collection_partner"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all bucket",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8c2e6cab-817c-4a76-8a44-9ad06bc1ec85",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all loan_collection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c683a291-c5ad-4209-a111-077daee612be",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection"
											]
										},
										"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all loan_collection_history",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8693ac63-386a-41b3-8aba-58437f29c5d3",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection_history"
											]
										},
										"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create a partner with 0 entrance and exit amounts",
							"item": [
								{
									"name": "[Helper] - Create a collection partner 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67e4df65-0364-4102-a10d-790a1dff4e36",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7bc8bf71-f943-49d8-95d7-fc5a186cde58",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"PARTNER_1\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"collection_partner"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a partner delivery config partner 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f34276f0-193a-41a1-b2ff-441ddc86091a",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "012d1b15-d500-48fc-a553-f29fbd7bea92",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"collection_partner",
												"delivery_channel"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f31d8249-ed77-4b2a-bd85-3ec5f3c55484",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "04f1cee6-b0d8-4ec4-805c-ef5026c4532b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create partner_segmentation_config",
							"item": [
								{
									"name": "Create a partner_segmentation for  bucket",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e30979ec-ee11-4216-8fe4-52610d0d3adb",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "47b3c76f-0819-4348-b1a3-39fbc1f85ac2",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"partner_seg_for_partner_1\"\n    ,\"description\":\"Create a partner segmentation with type Partner\",\n    \"config\":{\"type\":\"Partner\",\"id\":1}\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"partner_segmentation"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0d42e959-dba8-4b16-aa85-963e417c3881",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4ebeedae-05ac-4edd-8a58-ea72b9f2ebf1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create bucket",
							"item": [
								{
									"name": "Create a bucket cured",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e36d28e3-d658-4055-ae75-fb15ad7b0e02",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7c6889a8-4707-454b-9c2a-b906204c62e9",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"cured\",\n    \"config_id\":1,\n    \"description\":\"Cured accounts\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"segmentation",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a bucket DoNotWork",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f3c024aa-1112-45b7-b9c9-8268f24012db",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b52ee68c-e9ab-43d2-8398-650bec40446a",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"config_id\":1,\n    \"description\": \"Irremediable accounts'\",\n    \"name\": \"DoNotWork\"\n}\n",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"segmentation",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a bucket 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b241c838-ceb8-4bb7-9a14-a2349cb32ad7",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5f702d29-2091-4d47-867d-516412303e3c",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"config_id\": 1,\n\"description\": \"Test_Bucket_1\",\n\"name\": \"Test_Bucket_1\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"segmentation",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Helper] Get bucket 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "622b0432-553d-4018-93e9-03faa270d4c2",
												"exec": [
													"setTimeout(function(){}, [10000]);",
													"",
													"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
													"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "78a43aa3-eb11-44ce-884d-c0e4f64ecae5",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.environment.set(\"BUCKET_1\", pm.response.json().id);",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"bucket",
												"latest"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a bucket_segmentation",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "171ba980-0d01-482f-955f-4307ce64adbb",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "662f0bb1-282e-40d6-baf4-cc44914eb15a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\":\"PTP Test\",\"config\":{\"type\":\"Bucket\",\"id\":3}\n\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"bucket_segmentation"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "80f6b5d1-aa5b-4761-afba-f0e89299b965",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4f2f6860-d233-461a-af48-073fe745b5f4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "38bd844d-44b1-43e2-b640-b701740efb61",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "52027fe6-88be-4784-86f5-10082f12cdac",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create User from Mobile App",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "41077241-283d-4cf9-ab7c-cdea335ccd61",
								"exec": [
									"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
									"console.log(pm.environment.get(\"PHONE_NUMBER\"));",
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "36ac4e39-8f4a-4b67-ae07-f8833ece1b99",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"PERSON_ID\", pm.response.json().data.personId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"utility",
								"v2",
								"user",
								"creation"
							]
						},
						"description": "Create a new user:\n      This is what happens when the user signs up via the Android app\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, KE, TZ, MX\n     \n       @return [Map] which is converted to JSON by Spring"
					},
					"response": []
				},
				{
					"name": "Admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e58de94c-73d8-47aa-a0b4-425bf1b6ff59",
								"exec": [
									"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
									"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
									"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0ecbacad-ac17-4450-8a38-8e988ed7fac5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{ADMIN_LOGIN_USERNAME}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{ADMIN_LOGIN_PASSWORD}}",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"site",
								"authQA"
							]
						},
						"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
					},
					"response": []
				},
				{
					"name": "Confirm loan is sent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56abe220-dd5f-4317-98c2-e1abf5d70c68",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm the payment is sent to customer.\", function (err, response) {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.expect(jsonBody[0].status).to.eql(8);",
									"});",
									"",
									"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json()[0].id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5e90791d-5033-4d4f-b89c-89c3fa621b67",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loans/loan_application/person_id/{{PERSON_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loans",
								"loan_application",
								"person_id",
								"{{PERSON_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert record in Loan Collection Table",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56abe220-dd5f-4317-98c2-e1abf5d70c68",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d75c9f0c-dde8-4aa6-a96f-59100213745b",
								"exec": [
									"setTimeout(function(){}, [20000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"loanApplicationId\": {{LOAN_APPLICATION_ID}},\n    \"personId\": {{PERSON_ID}},\n    \"partnerId\": 1,\n    \"amountOwed\": {{AMOUNT_OWED}},\n    \"bucketSegmentationConfigId\": 1,\n    \"partnerSegmentationConfigId\": 1,\n    \"bucketId\": 3,\n    \"active\": 1\n}\n",
							"options": {}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert record in Loan Collection History Table",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a607514b-408e-467f-8cb9-59e62cc15345",
								"exec": [
									"setTimeout(function(){}, [20000]);",
									"",
									"var moment = require('moment');",
									"pm.environment.set(\"COLLECTION_DATE\", moment().subtract('days', 10).format(\"YYYY-MM-DD\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4889177a-d1e1-490e-94f0-d97ef781c343",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonBody = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"LOAN_COLLECTION_ID\", jsonBody.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"loanApplicationId\": {{LOAN_APPLICATION_ID}},\n    \"personId\": {{PERSON_ID}},\n    \"partnerId\": 1,\n    \"amountOwed\": {{AMOUNT_OWED}},\n    \"bucketSegmentationConfigId\": 1,\n    \"collectionDate\": \"{{COLLECTION_DATE}}\",\n    \"partnerSegmentationConfigId\": 1,\n    \"bucketId\": 3,\n    \"active\": 1\n}\n",
							"options": {}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection_history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if user is added to in-house collections ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "532ed563-6738-4dc6-bd69-303713fe413a",
								"exec": [
									" pm.test(\"Status code is 200\", function () {",
									"     pm.response.to.have.status(200);",
									" });",
									" ",
									" //Check if the person has gone into loan collections.",
									"pm.test(\"Verify customer has entered in house collections\", function () {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.expect(jsonBody[0].partnerId).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a0b40464-017a-48e0-9a45-f1c81077c703",
								"exec": [
									"setTimeout(function(){}, [20000]);",
									"",
									"    ",
									"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
									"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
									"}",
									"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
									" }",
									"",
									"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
									"}",
									"",
									"var loanAmount = pm.environment.get(\"LOAN_AMOUNT_DISBURSED\");",
									"var interestRate = pm.environment.get(\"INTEREST_RATE\");",
									"var interestAmount = (interestRate * loanAmount);",
									"var amountOwed = (parseInt(interestAmount) + parseInt(loanAmount));",
									"",
									"console.log(\"amount owed : \", amountOwed);",
									"console.log(\"intereset amount : \", interestAmount);",
									"console.log(\"interest rate : \", interestRate);",
									"console.log(\"amount owed : \", amountOwed);",
									"",
									"pm.environment.set(\"AMOUNT_OWED\", amountOwed);",
									"",
									"//create the authorisation token",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"var moment = require('moment');",
									"var dt = moment().format(\"YYYY-MM-DD\");",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection",
								"person_id",
								"{{PERSON_ID}}"
							]
						},
						"description": "Validates that added user is added to in-house collections queue. \nhttps://talamobile.testrail.io/index.php?/cases/view/26429\nhttps://talamobile.testrail.io/index.php?/cases/view/26430"
					},
					"response": []
				},
				{
					"name": "Create a call result",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "438206e3-0402-4ff9-8f4c-3791eebff3fa",
								"exec": [
									"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
									"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
									"}",
									"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
									" }",
									"",
									"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
									"}",
									"",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"",
									"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
									"if (!dayCounter)",
									"{",
									"    // set default if not exists",
									"    dayCounter = 1;",
									"}",
									"",
									"var moment = require('moment');",
									"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
									"dayCounter += 1;",
									"pm.environment.set('DATE_COUNTER', dayCounter);",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									"setTimeout(function(){}, [10000]);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "eee7990d-c275-4edc-9bcc-436640f705c2",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.environment.set(\"CALL_RESULT_ID\", jsonBody.id);",
									"});",
									"",
									"const acceptanceServiceRequest = {",
									"    url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString() + \"/loancollections/call_result/\" +  pm.environment.get(\"CALL_RESULT_ID\"),",
									"    method: 'GET',",
									"    header: 'Content-Type:application/json',",
									"};",
									"",
									"//Perform verifications using entries in the DB",
									"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
									"    if(err) {",
									"        console.log(err);",
									"    } else {",
									"        pm.test(\"Call result table has been updated with the customers data.\", function () {",
									"            pm.expect(response.json().id).to.eql(pm.environment.get(\"CALL_RESULT_ID\"));",
									"            pm.expect(response.json().dispositionId).to.eql(3);",
									"            pm.expect(response.json().loanApplicationId).to.eql(parseInt(pm.environment.get(\"LOAN_APPLICATION_ID\")));",
									"",
									"    });",
									"    }});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"type": "text",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"agent_user_id\": {{ADMIN_USER_ID}},\n\"comment\": \"test\",\n\"disposition_id\": 3,\n\"is_active\": true,\n\"loan_application_id\": {{LOAN_APPLICATION_ID}},\n\"loan_still_owed_amount\": {{AMOUNT_OWED}},\n\"local_ptp_date\": {{TIME_LOAN_COLLECTIONS_PTP}},\n\"nonpay_reason_id\": 2,\n\"ptp_amount\": {{PTP_AMOUNT}}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/loan_application/{{LOAN_APPLICATION_ID}}/call_result",
							"host": [
								"{{LOAN_COLLECTIONS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"loan_application",
								"{{LOAN_APPLICATION_ID}}",
								"call_result"
							]
						},
						"description": "https://talamobile.testrail.io/index.php?/cases/view/26431"
					},
					"response": []
				},
				{
					"name": "Verify entries in the call_result table",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75f473fd-1f4a-4108-b7bf-ef6f5503b7c5",
								"exec": [
									" pm.test(\"Status code is 200\", function () {",
									"     pm.response.to.have.status(200);",
									" });",
									"",
									"var jsonBody = JSON.parse(responseBody);",
									"",
									"pm.test(\"Verify call_result updated with the correct disposition id equals 3.\", function () {",
									"    pm.expect(jsonBody.dispositionId).to.eql(3);",
									"});",
									"pm.test(\"Verify call_result updated with the correct loan application id.\", function () {",
									"    pm.expect(jsonBody.loanApplicationId).to.eql(parseInt(pm.environment.get(\"LOAN_APPLICATION_ID\")));",
									"});",
									"pm.test(\"Verify call_result updated with the correct ptp amount.\", function () {",
									"    pm.expect(jsonBody.ptpAmount).to.eql(parseInt(pm.environment.get(\"PTP_AMOUNT\")));",
									"});",
									"pm.test(\"Verify call_result updated with the correct ptp amount.\", function () {",
									"    pm.expect(jsonBody.nonpayReasonId).to.eql(2);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a98a9fa8-be76-4af9-87e6-aa3e0b140c1f",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/call_result/{{CALL_RESULT_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"call_result",
								"{{CALL_RESULT_ID}}"
							]
						},
						"description": "<li>KE: <a href=\"https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=23914817\">TC-8986</a></li>\n<li>PH: <a href=\"https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=24539054\">TC-9456</a></li>\n<li>TZ: <a href=\"https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=24558549\">TC-9466</a></li>\n<li>MX: <a href=\"https://tala.qtestnet.com/p/26927/portal/project#tab=testdesign&object=1&id=24709545\">TC-9521</a></li>"
					},
					"response": []
				},
				{
					"name": "Create a duplicate call result",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fa47195b-9b2d-4a6f-b7cf-ef138ca09558",
								"exec": [
									"if (pm.environment.get(\"COUNTRY\") == \"KE\") {",
									"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
									"}",
									"else if (pm.environment.get(\"COUNTRY\") == \"PH\") {",
									"    pm.environment.set(\"ADMIN_USER_ID\", 213);",
									"}",
									"else if (pm.environment.get(\"COUNTRY\") == \"MX\") {",
									"    pm.environment.set(\"ADMIN_USER_ID\", 215);",
									"}",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix();",
									"var MD5 = function (d) { result = M(V(Y(X(d), 8 * d.length))); return result.toLowerCase() }; function M(d) { for (var _, m = \"0123456789ABCDEF\", f = \"\", r = 0; r < d.length; r++)_ = d.charCodeAt(r), f += m.charAt(_ >>> 4 & 15) + m.charAt(15 & _); return f } function X(d) { for (var _ = Array(d.length >> 2), m = 0; m < _.length; m++)_[m] = 0; for (m = 0; m < 8 * d.length; m += 8)_[m >> 5] |= (255 & d.charCodeAt(m / 8)) << m % 32; return _ } function V(d) { for (var _ = \"\", m = 0; m < 32 * d.length; m += 8)_ += String.fromCharCode(d[m >> 5] >>> m % 32 & 255); return _ } function Y(d, _) { d[_ >> 5] |= 128 << _ % 32, d[14 + (_ + 64 >>> 9 << 4)] = _; for (var m = 1732584193, f = -271733879, r = -1732584194, i = 271733878, n = 0; n < d.length; n += 16) { var h = m, t = f, g = r, e = i; f = md5_ii(f = md5_ii(f = md5_ii(f = md5_ii(f = md5_hh(f = md5_hh(f = md5_hh(f = md5_hh(f = md5_gg(f = md5_gg(f = md5_gg(f = md5_gg(f = md5_ff(f = md5_ff(f = md5_ff(f = md5_ff(f, r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 0], 7, -680876936), f, r, d[n + 1], 12, -389564586), m, f, d[n + 2], 17, 606105819), i, m, d[n + 3], 22, -1044525330), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 4], 7, -176418897), f, r, d[n + 5], 12, 1200080426), m, f, d[n + 6], 17, -1473231341), i, m, d[n + 7], 22, -45705983), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 8], 7, 1770035416), f, r, d[n + 9], 12, -1958414417), m, f, d[n + 10], 17, -42063), i, m, d[n + 11], 22, -1990404162), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 12], 7, 1804603682), f, r, d[n + 13], 12, -40341101), m, f, d[n + 14], 17, -1502002290), i, m, d[n + 15], 22, 1236535329), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 1], 5, -165796510), f, r, d[n + 6], 9, -1069501632), m, f, d[n + 11], 14, 643717713), i, m, d[n + 0], 20, -373897302), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 5], 5, -701558691), f, r, d[n + 10], 9, 38016083), m, f, d[n + 15], 14, -660478335), i, m, d[n + 4], 20, -405537848), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 9], 5, 568446438), f, r, d[n + 14], 9, -1019803690), m, f, d[n + 3], 14, -187363961), i, m, d[n + 8], 20, 1163531501), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 13], 5, -1444681467), f, r, d[n + 2], 9, -51403784), m, f, d[n + 7], 14, 1735328473), i, m, d[n + 12], 20, -1926607734), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 5], 4, -378558), f, r, d[n + 8], 11, -2022574463), m, f, d[n + 11], 16, 1839030562), i, m, d[n + 14], 23, -35309556), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 1], 4, -1530992060), f, r, d[n + 4], 11, 1272893353), m, f, d[n + 7], 16, -155497632), i, m, d[n + 10], 23, -1094730640), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 13], 4, 681279174), f, r, d[n + 0], 11, -358537222), m, f, d[n + 3], 16, -722521979), i, m, d[n + 6], 23, 76029189), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 9], 4, -640364487), f, r, d[n + 12], 11, -421815835), m, f, d[n + 15], 16, 530742520), i, m, d[n + 2], 23, -995338651), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 0], 6, -198630844), f, r, d[n + 7], 10, 1126891415), m, f, d[n + 14], 15, -1416354905), i, m, d[n + 5], 21, -57434055), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 12], 6, 1700485571), f, r, d[n + 3], 10, -1894986606), m, f, d[n + 10], 15, -1051523), i, m, d[n + 1], 21, -2054922799), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 8], 6, 1873313359), f, r, d[n + 15], 10, -30611744), m, f, d[n + 6], 15, -1560198380), i, m, d[n + 13], 21, 1309151649), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 4], 6, -145523070), f, r, d[n + 11], 10, -1120210379), m, f, d[n + 2], 15, 718787259), i, m, d[n + 9], 21, -343485551), m = safe_add(m, h), f = safe_add(f, t), r = safe_add(r, g), i = safe_add(i, e) } return Array(m, f, r, i) } function md5_cmn(d, _, m, f, r, i) { return safe_add(bit_rol(safe_add(safe_add(_, d), safe_add(f, i)), r), m) } function md5_ff(d, _, m, f, r, i, n) { return md5_cmn(_ & m | ~_ & f, d, _, r, i, n) } function md5_gg(d, _, m, f, r, i, n) { return md5_cmn(_ & f | m & ~f, d, _, r, i, n) } function md5_hh(d, _, m, f, r, i, n) { return md5_cmn(_ ^ m ^ f, d, _, r, i, n) } function md5_ii(d, _, m, f, r, i, n) { return md5_cmn(m ^ (_ | ~f), d, _, r, i, n) } function safe_add(d, _) { var m = (65535 & d) + (65535 & _); return (d >> 16) + (_ >> 16) + (m >> 16) << 16 | 65535 & m } function bit_rol(d, _) { return d << _ | d >>> 32 - _ }",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS', hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
									"//var dayCounter = 1;",
									"if (!dayCounter) {",
									"    // set default if not exists",
									"    dayCounter = 1;",
									"}",
									"var moment = require('moment');",
									"var dt = moment().format(\"YYYY-MM-DD\");",
									"dayCounter += 1;",
									"pm.environment.set('DATE_COUNTER', dayCounter);",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									"setTimeout(function () { }, [10000]);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "471e3217-879f-469a-a485-bd94f33ab500",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"var jsonData = pm.response.json();",
									"pm.test(\"Verify error of duplicate call result.\", function (err, response) {",
									"    var tlcp = pm.environment.get(\"TIME_LOAN_COLLECTIONS_PTP\");",
									"    tlcp = tlcp.substr(1, tlcp.length - 2);",
									"    pm.expect(jsonData.errors.local_ptp_date[0]).to.eql(\"There already exists a call result for loanApplicationId: \" + pm.environment.get(\"LOAN_APPLICATION_ID\") + \" on the provided PTP Date: \" + tlcp);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"type": "text",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"agent_user_id\": {{ADMIN_USER_ID}},\n\"comment\": \"test\",\n\"disposition_id\": 3,\n\"is_active\": true,\n\"loan_application_id\": {{LOAN_APPLICATION_ID}},\n\"loan_still_owed_amount\": {{AMOUNT_OWED}},\n\"local_ptp_date\": {{TIME_LOAN_COLLECTIONS_PTP}},\n\"nonpay_reason_id\": 2,\n\"ptp_amount\": {{PTP_AMOUNT}}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/loan_application/{{LOAN_APPLICATION_ID}}/call_result",
							"host": [
								"{{LOAN_COLLECTIONS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"loan_application",
								"{{LOAN_APPLICATION_ID}}",
								"call_result"
							]
						},
						"description": "https://talamobile.testrail.io/index.php?/cases/view/26431"
					},
					"response": []
				},
				{
					"name": "Collections agent edits PTP Details for a user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "438206e3-0402-4ff9-8f4c-3791eebff3fa",
								"exec": [
									"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
									"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
									"}",
									"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
									" }",
									"",
									"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
									"}",
									"",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"   ",
									"   ",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
									"if (!dayCounter)",
									"{",
									"    // set default if not exists",
									"    dayCounter = 1;",
									"}",
									"",
									"var moment = require('moment');",
									"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
									"dayCounter += 1;",
									"pm.environment.set('DATE_COUNTER', dayCounter);",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP_EDIT', \"\\\"\" + dt + \"\\\"\");",
									"pm.environment.set(\"PTP_AMOUNT_EDITED\", 400);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "eee7990d-c275-4edc-9bcc-436640f705c2",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"type": "text",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"agent_user_id\": {{ADMIN_USER_ID}},\n\"comment\": \"testing update\",\n\"disposition_id\": 3,\n\"is_active\": true,\n\"loan_application_id\": {{LOAN_APPLICATION_ID}},\n\"nonpay_reason_id\": 2,\n\"ptp_amount\": {{PTP_AMOUNT}}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/call_result/{{CALL_RESULT_ID}}",
							"host": [
								"{{LOAN_COLLECTIONS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"call_result",
								"{{CALL_RESULT_ID}}"
							]
						},
						"description": "https://talamobile.testrail.io/index.php?/cases/view/26432"
					},
					"response": []
				},
				{
					"name": "Verify entries in the call_result_history table",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f474fb3-73c7-4911-969c-e569e6ef0e73",
								"exec": [
									" pm.test(\"Status code is 200\", function () {",
									"     pm.response.to.have.status(200);",
									" });",
									"",
									"var jsonBody = JSON.parse(responseBody);",
									"",
									"pm.test(\"Verify call_result_history updated with disposition id equals 3.\", function (err, response) {",
									"    pm.expect(jsonBody[0].dispositionId).to.eql(\"3\");",
									"});",
									"pm.test(\"Verify call_result_history updated with the correct loan application id.\", function () {",
									"    pm.expect(jsonBody[0].loanApplicationId).to.eql(parseInt(pm.environment.get(\"LOAN_APPLICATION_ID\")));",
									"});",
									"pm.test(\"Verify call_result_history updated with the correct ptp amount.\", function () {",
									"    pm.expect(jsonBody[0].ptpAmount).to.eql(500);",
									"});",
									"pm.test(\"Verify call_result_history updated with the correct nonPayResonId.\", function () {",
									"    pm.expect(jsonBody[0].nonPayReasonId).to.eql(\"2\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1ebeaf8c-fc25-45ee-b025-d9ed6c3ce0e9",
								"exec": [
									"setTimeout(function(){}, [5000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/call_result_history/loan_application_id/{{LOAN_APPLICATION_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"call_result_history",
								"loan_application_id",
								"{{LOAN_APPLICATION_ID}}"
							]
						},
						"description": "https://talamobile.testrail.io/index.php?/cases/view/26435"
					},
					"response": []
				},
				{
					"name": "Retrieve users PTP",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e03bc9b9-a681-4fa2-91e6-c8717ea11d7b",
								"exec": [
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"",
									"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
									"if (!dayCounter)",
									"{",
									"    // set default if not exists",
									"    dayCounter = 1;",
									"}",
									"",
									"var moment = require('moment');",
									"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
									"dayCounter += 1;",
									"pm.environment.set('DATE_COUNTER', dayCounter);",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Authorization",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/call_results/{{PERSON_ID}}",
							"host": [
								"{{LOAN_COLLECTIONS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"call_results",
								"{{PERSON_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add custom loan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df843731-f5a5-43bb-9e37-495a1cafbd10",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ddf7bc85-30be-4079-b239-36ee1a79d747",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "amount",
									"value": "3000",
									"type": "text"
								},
								{
									"key": "interest_rate",
									"value": "15",
									"type": "text"
								},
								{
									"key": "repayment_frequency",
									"value": "21",
									"type": "text"
								},
								{
									"key": "repayment_counts",
									"value": "1",
									"type": "text"
								},
								{
									"key": "submit",
									"value": "Submit",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/admin/people/addCustomLoan/id/{{PERSON_ID}}",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"admin",
								"people",
								"addCustomLoan",
								"id",
								"{{PERSON_ID}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "https://talamobile.testrail.io/index.php?/suites/view/2&group_by=cases:section_id&group_order=asc&group_id=1585",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Payment Plan",
			"item": [
				{
					"name": "Segmentation",
					"item": [
						{
							"name": "PaymentPlanStatusSegment",
							"item": [
								{
									"name": "paymentPlanStatus - ACTIVE",
									"item": [
										{
											"name": "[Test] - Trigger account processing",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8d2739ef-1a1b-4c57-bdcb-7a543ff8ce0e",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Verify response returned is New Process started\", function () {",
															"    pm.response.to.have.body(\"New process started\\n\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Authorization",
														"value": "{{AUTHORIZATION_TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/account_processing/run",
													"host": [
														"{{LOAN_COLLECTIONS_BASE_URL}}"
													],
													"path": [
														"api",
														"v1",
														"account_processing",
														"run"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get authentication token",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9b3b9536-ac1e-41e6-9adf-a06cc1dab3da",
														"exec": [
															"pm.environment.set(\"AUTHORIZATION_TOKEN\", pm.response.json().tokenValue);",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f0479d60-f6e8-4c35-9995-569413afae5c",
														"exec": [
															"setTimeout(function(){}, [8000]);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-Authorization",
														"value": "{{AUTHORIZATION_TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/getAuthToken/personId/450",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"utility",
														"loancollections",
														"getAuthToken",
														"personId",
														"450"
													]
												}
											},
											"response": []
										},
										{
											"name": "Trigger payment_plan - updates plans",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d5b6688b-8d1d-4605-a546-22151c684e80",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Payment plan processing started\", function () {",
															"    pm.response.to.have.body(\"{\\\"message\\\":\\\"Payment plan processing started\\\"}\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Authorization",
														"value": "{{AUTHORIZATION_TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan/cron",
													"host": [
														"{{LOAN_COLLECTIONS_BASE_URL}}"
													],
													"path": [
														"api",
														"v1",
														"payment_plan",
														"cron"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Test] - Verify accounts are in loan_collections",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d412a79-1a9b-4951-892d-77f27ce15a3d",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Verify account has been placed in loan collection with correct loanApplicationId\", function () {",
															"        var response = pm.response.json()[0];",
															"    pm.expect(response.loanApplicationId.toString()).to.eql(pm.environment.get(\"LOAN_APPLICATION_ID\"));",
															"});",
															"",
															"pm.test(\"Verify account has been placed in loan collection with correct personId\", function () {",
															"        var response = pm.response.json()[0];",
															"    pm.expect(response.personId).to.eql(pm.environment.get(\"PERSON_ID_1\"));",
															"});",
															"",
															"pm.test(\"Verify account has been placed in loan collection with correct bucketId\", function () {",
															"        var response = pm.response.json()[0];",
															"    pm.expect(response.bucketId).to.eql(pm.environment.get(\"BUCKET_1\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID_1}}",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection",
														"person_id",
														"{{PERSON_ID_1}}"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "paymentPlanStatus - LATE",
									"item": [
										{
											"name": "[Util] - Setup payment_plan data by personId",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4954feb0-e517-424a-b095-4fac1be65a57",
														"exec": [
															" pm.test(\"Status code is 200\", function () {",
															"     pm.response.to.have.status(200);",
															" });"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "be133cfb-3cd6-4201-88d9-597b5d8ee001",
														"exec": [
															"setTimeout(function(){}, [30000]);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID_1}}",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"utility",
														"loancollections",
														"uploadUserDataToSnowflake",
														"personId",
														"{{PERSON_ID_1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "update paymentPlanColumn on payment_plan_table",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3c2b9068-22a3-4171-8604-7d06d31a05d4",
														"exec": [
															"pm.test(\"Status code is 200 Bad Request\", function (err, response) {",
															"    pm.response.to.have.status(200);",
															"});   ",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "1a38c350-672c-439a-a71b-3f8ff1de81d4",
														"exec": [
															"//Setup date",
															"var moment = require('moment');",
															"var day = moment().add(3, 'day').format(\"YYYY-MM-DD\");",
															"",
															"//Since payment plan first payment date was 'tommorow' 3 days ago should be a late PP date.",
															"var late = moment().subtract(3, 'day').format(\"YYYY-MM-DD\");",
															"",
															"pm.environment.set(\"LATE_INSTALLMENT_DATE\", late);",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "X-Authorization",
														"type": "text",
														"value": "{{AUTHORIZATION_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_installment_start_date\" : \"{{LATE_INSTALLMENT_DATE}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/payment_plan/person_id/{{PERSON_ID_1}}",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"payment_plan",
														"person_id",
														"{{PERSON_ID_1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "update paymentPlanColumn on payment_plan_table",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f02e337e-f6b5-452c-b8b0-feaaf7ae5cf2",
														"exec": [
															"pm.test(\"Status code is 200 Bad Request\", function (err, response) {",
															"    pm.response.to.have.status(200);",
															"});   ",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "f0e17387-b11d-47e9-be86-47e98c2eaa38",
														"exec": [
															"//Setup date",
															"var moment = require('moment');",
															"var day = moment().add(3, 'day').format(\"YYYY-MM-DD\");",
															"",
															"//Since payment plan first payment date was 'tommorow' 3 days ago should be a late PP date.",
															"var late = moment().subtract(3, 'day').format(\"YYYY-MM-DD\");",
															"",
															"pm.environment.set(\"LATE_INSTALLMENT_DATE\", late);",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Authorization",
														"type": "text",
														"value": "{{AUTHORIZATION_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{       \"dbName\" : \"LOAN_COLLECTION\",\n        \"columnName\" : \"FIRST_INSTALLMENT_START_DATE\",\n        \"columnValue\" : \"{{LATE_INSTALLMENT_DATE}}\",\n        \"whereClauseColumn\" : \"loan_application_id\",\n        \"whereClauseValue\": {{LOAN_APPLICATION_ID}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/payment_plan/update",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"snowflake",
														"payment_plan",
														"update"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all account_processing",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f7269d13-6fc5-4258-8aff-51b861738063",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "Trigger payment_plan - updates plans",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "01512683-5dcb-4902-b808-19dcc39f3141",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Payment plan processing started\", function () {",
															"    pm.response.to.have.body(\"{\\\"message\\\":\\\"Payment plan processing started\\\"}\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-Authorization",
														"type": "text",
														"value": "{{AUTHORIZATION_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan/cron",
													"host": [
														"{{LOAN_COLLECTIONS_BASE_URL}}"
													],
													"path": [
														"api",
														"v1",
														"payment_plan",
														"cron"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Test] - Trigger account processing",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "58151b60-875b-4946-8e48-438c522ea2ac",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Verify response returned is New Process started\", function () {",
															"    pm.response.to.have.body(\"New process started\\n\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Authorization",
														"value": "{{AUTHORIZATION_TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/account_processing/run",
													"host": [
														"{{LOAN_COLLECTIONS_BASE_URL}}"
													],
													"path": [
														"api",
														"v1",
														"account_processing",
														"run"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get authentication token",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e2597c57-4a64-4952-b83f-05c1585b90c8",
														"exec": [
															"pm.environment.set(\"AUTHORIZATION_TOKEN\", pm.response.json().tokenValue);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "X-Authorization",
														"value": "{{AUTHORIZATION_TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/getAuthToken/personId/450",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"utility",
														"loancollections",
														"getAuthToken",
														"personId",
														"450"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Test] - Verify accounts are in loan_collections",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "221eeff4-65a3-4ee6-ab4c-ccba6733d00b",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Verify account has been placed in loan collection with correct loanApplicationId\", function () {",
															"        var response = pm.response.json()[0];",
															"    pm.expect(response.loanApplicationId.toString()).to.eql(pm.environment.get(\"LOAN_APPLICATION_ID\"));",
															"});",
															"",
															"pm.test(\"Verify account has been placed in loan collection with correct personId\", function () {",
															"        var response = pm.response.json()[0];",
															"    pm.expect(response.personId).to.eql(pm.environment.get(\"PERSON_ID_1\"));",
															"});",
															"",
															"pm.test(\"Verify account has been placed in loan collection with correct bucketId\", function () {",
															"        var response = pm.response.json()[0];",
															"    pm.expect(response.bucketId).to.eql(pm.environment.get(\"BUCKET_1\"));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID_1}}",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection",
														"person_id",
														"{{PERSON_ID_1}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "67b473a4-67ed-4d96-ac9a-96144264eff8",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8bf63605-42c7-4712-91f3-0e3a747bd0fa",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "clear required data",
									"item": [
										{
											"name": "[Util] - Truncate data on all partner_segmentation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "613009dc-2bd7-48a7-97bd-5436b4888aa5",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"partner_segmentation_config"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all delivery_channel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "971ac2ba-4cc7-4db8-b1f8-099da86f8241",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"delivery_channel"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b85e99d5-e36b-4aef-b8a7-a034e003348a",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection_history",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ddf07b29-9873-4095-ba3e-a794a10aaf29",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection_history"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all partner",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "389e0aae-f18f-4812-83a0-bfec1e727d0f",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"collection_partner"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all account_processing_log",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c0537aa9-3bd3-40eb-8f15-bfb16c0cec64",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing_log"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all account_processing",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6791bd32-d4e0-4025-814d-89ca37e73dc4",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket_segmetation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a284dd83-cd7c-4928-a0e7-4d8385a2c20f",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket_segmentation_config"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "03394695-f2fb-46ff-8b6c-2d06df5e031d",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all generated_file",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "db17971f-34a3-45b7-89a5-f6bb63f2042e",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/generated_file",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"generated_file"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate all tables [Snowflake] Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7b762c85-8381-405c-975e-c3f22cfbb8f6",
														"exec": [
															" pm.test(\"Status code is 200\", function () {",
															"     pm.response.to.have.status(200);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/truncate_all",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"snowflake",
														"truncate_all"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4cfc8320-4d6f-4221-89e4-a8ef30cbacad",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "191597e3-3507-4e29-9d9e-32c99a5ad8b7",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "setup",
									"item": [
										{
											"name": "upload account 1 with payment plan to snowflake",
											"item": [
												{
													"name": "Admin login",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "1033b748-04e2-4b44-aa31-2df226d98246",
																"exec": [
																	"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
																	"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
																	"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "06afda33-e847-4d29-8384-a52a997e5cee",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "username",
																	"value": "{{ADMIN_LOGIN_USERNAME}}",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "{{ADMIN_LOGIN_PASSWORD}}",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"site",
																"authQA"
															]
														},
														"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
													},
													"response": []
												},
												{
													"name": "[AS] Settings for Admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "b2ab8d82-dbf5-4b3e-8599-49c95dcc1b2f",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"const acceptanceServiceRequest = {",
																	"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
																	"  method: 'GET',",
																	"  header: 'Content-Type:application/json'",
																	"};",
																	"",
																	"//Acceptance service will GET response in JSON format from loans.admin_config table",
																	"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
																	"    console.log(response.json());",
																	"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
																	"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
																	"    });",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "approveNewMembersUsing",
																	"value": "manual",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "approveRepeatMembers",
																	"value": "manual",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "publishPaymentAfterLoanRepayment",
																	"value": "yes",
																	"type": "text"
																},
																{
																	"key": "publishPaymentAfterSuccessfulLoanDisbursement",
																	"value": "yes",
																	"type": "text"
																},
																{
																	"key": "enablePaymentPlans",
																	"value": "yes",
																	"type": "text"
																},
																{
																	"key": "firstPaymentDate",
																	"value": "4",
																	"type": "text"
																},
																{
																	"key": "paymentPlanMinimumNumberOfInstallments",
																	"value": "4",
																	"type": "text"
																},
																{
																	"key": "paymentPlanMaximumNumberOfInstallments",
																	"value": "4",
																	"type": "text"
																},
																{
																	"key": "paymentPlanTotalDurationDays",
																	"value": "31",
																	"type": "text"
																},
																{
																	"key": "blacklistFraudulentCustomersUsing",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "showReferralsButtonOnHomescreenForCustomersOn",
																	"value": "TZ_TIGO, TZ_VODACOM",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "performKYCCheckToNewBorrowers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "coinsOAuthFlag",
																	"value": "mno_connected, phone_exists",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestSMSTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestEmailTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "telerivetTestPhoneID",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "cRBLowBalanceThreshold",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "organicAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "paidAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "hoverExperimentUsers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendFrom",
																	"value": "employee",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "simulateB2CSuccessResponse",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "b2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseMessage",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "adminIdleSignoutTimeout",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "enablePaymentAccountValidation",
																	"value": "yes",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "autoGenerateReceipt",
																	"value": "no",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "maximumNumberOfFetchReceiptAttempts",
																	"value": "3",
																	"type": "text",
																	"disabled": true
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"adminSettings"
															]
														},
														"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
													},
													"response": []
												},
												{
													"name": "[AS] Create User With Applied loan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "ac95f4ff-2c6d-45c3-9419-fe28cb223c2d",
																"exec": [
																	"setTimeout(function () { }, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\") + (Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "e81ecac1-a9e9-4679-b2be-39fa4baa1c6d",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PERSON_ID_1\", pm.response.json().personId);",
																	"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"user",
																"creation",
																"userWithAppliedLoan"
															]
														}
													},
													"response": []
												},
												{
													"name": "[AS] Approve Loan via Admin",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "1832a646-927f-4d4c-83d0-d8dd6f9ba061",
																"exec": [
																	"setTimeout(function () { }, [10000]);",
																	"if (pm.environment.get(\"COUNTRY\") == \"KE\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 2);",
																	"}",
																	"else if (pm.environment.get(\"COUNTRY\") == \"PH\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 321);",
																	"}",
																	"",
																	"else if (pm.environment.get(\"COUNTRY\") == \"MX\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 52);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "9f8d5e6c-72a0-4cec-b7d6-504165649d05",
																"exec": [
																	"pm.test(\"Status code is 200 found\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});   ",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "decision",
																	"value": "1",
																	"type": "text"
																},
																{
																	"key": "loan_limit",
																	"value": "50000",
																	"type": "text"
																},
																{
																	"key": "notes",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "loan_term_set",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "eligible_loan_type_ids[]",
																	"value": "{{LOAN_TYPE}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submit",
																	"type": "text"
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID_1}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"approveReject",
																"id",
																"{{PERSON_ID_1}}"
															]
														},
														"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
													},
													"response": []
												},
												{
													"name": "[AS] Accept loan offer on app",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "46d0bc60-a2ac-4931-9daa-760db0a5b815",
																"exec": [
																	"setTimeout(function(){}, [5000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "db7157bd-cc03-4811-8eef-2de52dbba830",
																"exec": [
																	"pm.test(\"Status code is 200\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"loan",
																"user_accept_offer"
															]
														},
														"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
													},
													"response": []
												},
												{
													"name": "Mark payment as sent from admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "f9c7fbb4-d273-442f-81cc-94fa16ca496b",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "b5c562c5-b69b-498a-80a8-4aee06a74cde",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
																	"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
																	"",
																	"//Set the correct rails provider that match the country",
																	"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
																	"   ",
																	"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
																	"  ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
																	"   ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
																	"   ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "transaction_amount",
																	"value": "3000",
																	"type": "text"
																},
																{
																	"key": "confirmation_number",
																	"value": "{{CONFIRMATION_NUMBER}}",
																	"type": "text"
																},
																{
																	"key": "transaction_date",
																	"value": "{{TIME_NOW_SEND_PAYMENT}}",
																	"description": "10/11/2018, 11:25 AM",
																	"type": "text"
																},
																{
																	"key": "mno_provider_name",
																	"value": "{{MNO-PROVIDER}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID_1}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"addDisbursement",
																"id",
																"{{PERSON_ID_1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Backdate active Loan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "4ee3d62c-16b7-4876-a9d6-1a1439b13449",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"var backDatedDay = moment().subtract(22, 'day').format(\"YYYY-MM-DD\");",
																	"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "5ee1f5af-d185-4890-a0b5-aa2544a1f7b2",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "disbursement_date",
																	"value": "{{DATE_TO_BACKDATE_TO}}",
																	"description": "{{DATE_TO_BACKDATE_TO}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID_1}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"changeDisbursement",
																"id",
																"{{PERSON_ID_1}}",
																"loan_application_id",
																"{{LOAN_APPLICATION_ID}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Get authentication token",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "6b54acec-bdd0-4de3-9eb5-ab302fbc8bc7",
																"exec": [
																	"pm.environment.set(\"AUTHORIZATION_TOKEN\", pm.response.json().tokenValue);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "X-Authorization",
																"value": "{{AUTHORIZATION_TOKEN}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/getAuthToken/personId/450",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"loancollections",
																"getAuthToken",
																"personId",
																"450"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create active payment plan",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "6235e39f-24d6-4d6e-bfe5-64887539b7e7",
																"exec": [
																	"pm.test(\"Status code is 200 Bad Request\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});   ",
																	"var jsonBody = JSON.parse(responseBody);",
																	"",
																	"pm.test(\"Verify response returned is 200 - Payment plan accepted for processing\", function () {",
																	"    pm.expect(jsonBody.OK).to.eql(\"Payment plan accepted for processing\");",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "c764e0f0-996f-4413-ab33-a9f2b190a817",
																"exec": [
																	"//Setup date",
																	"var moment = require('moment');",
																	"var day = moment().add(1, 'day').format(\"YYYY-MM-DD\");",
																	"",
																	"pm.environment.set(\"FIRST_REPAYMENT_DATE\", day);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{AUTHORIZATION_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"loan_application_id\": {{LOAN_APPLICATION_ID}},\n    \"installment_period\": {{INSTALLMENT_PERIOD}},\n    \"number_of_installments\": {{NUMBER_OF_INSTALLMENTS}},\n    \"first_installment_start_date\": \"{{FIRST_REPAYMENT_DATE}}\",\n    \"installment_amount\": \"{{INSTALLMENT_AMOUNT}}\",\n    \"agent_id\": 777\n}\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"payment_plan"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Util] - Setup user data by personId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "7d533150-bf27-411f-a62f-82c17e4ac757",
																"exec": [
																	" pm.test(\"Status code is 200\", function () {",
																	"     pm.response.to.have.status(200);",
																	" });"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "23ef9d17-3069-4bea-acee-4d66d426c6f5",
																"exec": [
																	"setTimeout(function(){}, [30000]);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID_1}}",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"loancollections",
																"uploadUserDataToSnowflake",
																"personId",
																"{{PERSON_ID_1}}"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create 5 partners",
											"item": [
												{
													"name": "[Helper] - Create a collection partner",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "6aadc4ab-451d-4ebb-94a4-331ea482608d",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_1\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_1\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config partner 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "7b1b26a1-d84b-4ac4-b98c-499ee9dce9c3",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "17960c1d-141b-4039-8551-23e9a0c81c4a",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] - Create a collection partner 2",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "03c36f9a-7c18-4ca3-b93e-3fd3bc6e5e88",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_2\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_2\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config partner 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "2b012871-e053-4037-b2e8-a9fe2a6e3fff",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "58306744-ea4e-4a23-9c90-b0921a9bcb29",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] - Create a collection partner 3",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "5bfce8df-fd3a-4633-b303-749fe74a4c97",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_3\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_3\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config partner 3",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "605fc447-f050-43ce-ab8a-003f80ad1b9c",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "3c49c91a-7e16-4bd5-9d95-e7c77cdc4c38",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_3}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] - Create a collection partner 4",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "65d66e37-f3de-4196-8779-c64bae78783c",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_4\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_4\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config partner 4",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "e600f429-1a3f-4a1c-a529-0fe56052a6e7",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "65f9e2fa-1f17-492c-884e-467a55da6cbf",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_4}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] - Create a collection partner 5",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "4a907ca7-10d3-4052-81a4-f7a748aebb71",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_5\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_5\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config partner 5",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "164ef56a-48be-4c72-b81a-cb104c311b7b",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "e823536e-11a6-43e9-abca-51a16d850448",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_5}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create 5 partner_segmentation_config",
											"item": [
												{
													"name": "Create a partner_segmentation with partner 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "0377702c-e036-4bd7-94ed-25043d09ee3c",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "81ce9141-1d07-43d3-99e3-aa03ed55a47f",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_1\",\n\t\"config\": {\"type\":\"Partner\",\"id\":{{PARTNER_ID_1}}},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type Partner\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "1f64793f-658d-44d2-8f1b-d9b9ad048fca",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "28331ecd-73cd-406c-b39a-b27c3f7123ac",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_1\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation with partner 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "94f3bf00-f021-4095-97f8-7de5e2974dfb",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "f332bd90-6934-4528-b115-5820e14a52c1",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_2\",\n\t\"config\": {\"type\":\"Partner\",\"id\":{{PARTNER_ID_2}}},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type Partner\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "fc4e06f1-ac20-4f60-b823-1a3d10cd0cab",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "40328965-4780-431f-8e72-d0b8c584dedb",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_2\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation with partner 3",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "d8a6371e-5ecd-45b3-983f-54f761232753",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "4ba562db-94d4-482a-a24c-59c92fd2762a",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_3\",\n\t\"config\": {\"type\":\"Partner\",\"id\":{{PARTNER_ID_3}}},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type Partner\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id 3",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "c8c4cb21-cc8e-412d-9a23-65fcd34171a5",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "3f70a810-d459-476d-9260-c3a0bbc1648c",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_3\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation with partner 4",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "cd127fd6-730e-4dea-a6a3-73c57855ae94",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "27ccdd85-7faa-4717-b998-2ff25167b560",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_4\",\n\t\"config\": {\"type\":\"Partner\",\"id\":{{PARTNER_ID_4}}},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type Partner\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id 4",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "25c5f53e-00c2-43b0-86eb-3b6d82e7145c",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "a49eb4b4-dda4-49d8-8619-139eb9721c26",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_4\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation with partner 5",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "a1f29e16-7dd1-465c-9491-75d22cd649c4",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "29add648-0bea-4190-9221-1c05c5a0eadb",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_5\",\n\t\"config\": {\"type\":\"Partner\",\"id\":{{PARTNER_ID_5}}},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type Partner\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id 5",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "add3627d-6fb7-4ae0-8f68-a828b8c82f1e",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "27fa3d46-669a-4a05-8551-3d943cdd65e3",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_5\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "d85331b3-2666-4980-a77d-56aa60cb0057",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "046a16fc-29b6-48fd-ad2a-4ee953b8988e",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create 5 buckets",
											"item": [
												{
													"name": "Create a bucket cured",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "f41b5c99-08d4-48aa-ab6e-2abd4224c457",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "e0e3c70a-b803-4441-b6b3-53b2e8eff88a",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"description\": \"Cured account\",\n\"name\": \"Cured\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket DoNotWork",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "2ef24e8a-b507-4c8a-a156-90d72a7de5a0",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "e6365bc6-3f38-4244-abd6-473835705d09",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"description\": \"Irremediable accounts'\",\n\"name\": \"DoNotWork\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "21293c51-f3b0-4ec5-8cac-9b9a311972f0",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "71029b4d-3cca-4564-b067-cc4dff032142",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_1}},\n\"description\": \"Payment Plan Bucket\",\n\"name\": \"ACTIVE_Bucket_1\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get bucket 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "cabc4fbd-143a-43cb-8d66-ae132e3a1c08",
																"exec": [
																	"setTimeout(function(){}, [3000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "24b88a80-0d26-4cd3-ba90-32948427631f",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"BUCKET_1\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "00cd511e-8af6-49dd-8249-484ab374b695",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "3f0533a6-4aa7-4ac9-93db-1479ccd4fc55",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_2}},\n\"description\": \"Payment Plan Bucket\",\n\"name\": \"DUE_TODAY_Test_Payment_Plan_Bucket_1\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get bucket 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "99dc6efa-41a0-447b-beed-02fe6fe34b42",
																"exec": [
																	"setTimeout(function(){}, [3000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "f81a4d52-ee70-4426-acce-2b6c18df8033",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"BUCKET_2\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 3",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "8cf7b081-711a-4db2-8391-0b30562062e2",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "ac1d1f25-0b7d-416c-9b84-6dba85406657",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_3}},\n\"description\": \"Payment Plan Bucket\",\n\"name\": \"LATE_Test_Payment_Plan_Bucket_1\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get bucket 3",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "a6d020ff-1dda-4008-a630-a6f889bbe62f",
																"exec": [
																	"setTimeout(function(){}, [3000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "1c78cf66-9517-4889-87c5-d910cb0c7d26",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"BUCKET_3\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 4",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "64a1f982-d6e2-4a85-a22a-843154a18245",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "23abd74b-7428-46d3-bd2b-54d6d927ee61",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_4}},\n\"description\": \"Payment Plan Bucket\",\n\"name\": \"BROKEN_Test_Payment_Plan_Bucket_1\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get bucket 4",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "f0afa313-1f3c-449c-b023-1ddc923b7820",
																"exec": [
																	"setTimeout(function(){}, [3000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "65149dc2-caeb-49d8-bf5f-964787cf93aa",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"BUCKET_4\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 5",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "0c5906fc-aa9e-4b43-82c7-e69cdf77173c",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "c2117a38-f8ad-4968-b265-15af3ab765e9",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_5}},\n\"description\": \"Payment Plan Bucket\",\n\"name\": \"NORMAL_Test_Payment_Plan_Bucket_1\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get bucket 5",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "f4111d6d-89b9-47ce-9943-73badc87b968",
																"exec": [
																	"setTimeout(function(){}, [3000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "cba334da-b26a-4d14-8ebc-a248fdb5601b",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"BUCKET_5\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket_segmentation  for bucket_1 -- bucket_5",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "57749248-14c7-4b6c-8d99-398d3460a77e",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "0d7b8d58-1ef6-45bf-a758-b4183012d41e",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"config\": {\n        \"type\": \"PaymentPlanDpdSegment\",\n        \"cases\": [\n            {\n                \"condition\": {\n                    \"from\": 1,\n                    \"to\": 2\n                },\n                \"output\": {\n                    \"type\": \"Bucket\",\n                    \"id\": 5\n                }\n            },\n            {\n                \"condition\": {\n                    \"from\": 3,\n                    \"to\": 4\n                },\n                \"output\": {\n                    \"type\": \"Bucket\",\n                    \"id\": 7\n                }\n            },\n            {\n                \"condition\": {\n                    \"from\": 2,\n                    \"to\": 3\n                },\n                \"output\": {\n                    \"type\": \"Bucket\",\n                    \"id\": 6\n                }\n            },\n            {\n                \"condition\": {\n                    \"from\": 0,\n                    \"to\": 1\n                },\n                \"output\": {\n                    \"type\": \"Bucket\",\n                    \"id\": 4\n                }\n            },\n            {\n                \"condition\": {\n                    \"from\": -30,\n                    \"to\": 0\n                },\n                \"output\": {\n                    \"type\": \"Bucket\",\n                    \"id\": 3\n                }\n            }\n        ]\n    },\n    \"description\": \"Create a bucket segmentation with type bucket\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"bucket_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Util] - Truncate data on all loan_collection",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "9c8eeea4-65d7-4695-92a5-46f3f9032e39",
																"exec": [
																	" pm.test(\"Status code is 204 No Content\", function () {",
																	"     pm.response.to.have.status(204);",
																	" });"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"loan_collection"
															]
														},
														"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "setup",
							"item": [
								{
									"name": "create user - backdate loan",
									"item": [
										{
											"name": "Admin login",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e9772b41-e876-4325-b48f-f366916e097c",
														"exec": [
															"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
															"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
															"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
															"",
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "7e7cfe49-1485-473c-8284-af9cb1ef684d",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "username",
															"value": "{{ADMIN_LOGIN_USERNAME}}",
															"type": "text"
														},
														{
															"key": "password",
															"value": "{{ADMIN_LOGIN_PASSWORD}}",
															"type": "text"
														}
													],
													"options": {
														"urlencoded": {}
													}
												},
												"url": {
													"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
													"host": [
														"{{SERVER_API_BASE_URL}}"
													],
													"path": [
														"site",
														"authQA"
													]
												},
												"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
											},
											"response": []
										},
										{
											"name": "[AS] Settings for Admin",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "72b687f7-53bc-41bb-a363-a2bbb1d3a138",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"const acceptanceServiceRequest = {",
															"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
															"  method: 'GET',",
															"  header: 'Content-Type:application/json'",
															"};",
															"",
															"//Acceptance service will GET response in JSON format from loans.admin_config table",
															"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
															"    console.log(response.json());",
															"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
															"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
															"    });",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "approveNewMembersUsing",
															"value": "manual",
															"type": "text",
															"disabled": true
														},
														{
															"key": "approveRepeatMembers",
															"value": "manual",
															"type": "text",
															"disabled": true
														},
														{
															"key": "publishPaymentAfterLoanRepayment",
															"value": "yes",
															"type": "text",
															"disabled": true
														},
														{
															"key": "publishPaymentAfterSuccessfulLoanDisbursement",
															"value": "yes",
															"type": "text",
															"disabled": true
														},
														{
															"key": "enablePaymentPlans",
															"value": "yes",
															"type": "text"
														},
														{
															"key": "firstPaymentDate",
															"value": "5",
															"type": "text",
															"disabled": true
														},
														{
															"key": "paymentPlanMinimumNumberOfInstallments",
															"value": "10",
															"type": "text",
															"disabled": true
														},
														{
															"key": "paymentPlanMaximumNumberOfInstallments",
															"value": "10",
															"type": "text",
															"disabled": true
														},
														{
															"key": "paymentPlanTotalDurationDays",
															"value": "30",
															"type": "text",
															"disabled": true
														},
														{
															"key": "blacklistFraudulentCustomersUsing",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "showReferralsButtonOnHomescreenForCustomersOn",
															"value": "TZ_TIGO, TZ_VODACOM",
															"type": "text",
															"disabled": true
														},
														{
															"key": "performKYCCheckToNewBorrowers",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "coinsOAuthFlag",
															"value": "mno_connected, phone_exists",
															"type": "text",
															"disabled": true
														},
														{
															"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "sendAllTestSMSTo",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "sendAllTestEmailTo",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "telerivetTestPhoneID",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "cRBLowBalanceThreshold",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "organicAcquisitionSources",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "paidAcquisitionSources",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "hoverExperimentUsers",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "sendFrom",
															"value": "employee",
															"type": "text",
															"disabled": true
														},
														{
															"key": "simulateB2CSuccessResponse",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "b2CResponseCode",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "asyncB2CResponseCode",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "asyncB2CResponseMessage",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "adminIdleSignoutTimeout",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "enablePaymentAccountValidation",
															"value": "yes",
															"type": "text",
															"disabled": true
														},
														{
															"key": "autoGenerateReceipt",
															"value": "no",
															"type": "text",
															"disabled": true
														},
														{
															"key": "maximumNumberOfFetchReceiptAttempts",
															"value": "3",
															"type": "text",
															"disabled": true
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"utility",
														"v2",
														"adminSettings"
													]
												},
												"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
											},
											"response": []
										},
										{
											"name": "[AS] Create User With Applied loan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "1a20dbfd-530f-487d-9a13-f321a26ac743",
														"exec": [
															"setTimeout(function(){}, [10000]);",
															"",
															"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
															"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "879464d2-faf1-448c-b957-cd8b9ed7ed52",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"pm.environment.set(\"PERSON_ID_1\", pm.response.json().personId);",
															"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"utility",
														"v2",
														"user",
														"creation",
														"userWithAppliedLoan"
													]
												}
											},
											"response": []
										},
										{
											"name": "[AS] Approve Loan via Admin",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "32184c15-9685-49f3-bddf-90a2c9ffb782",
														"exec": [
															"setTimeout(function(){}, [15000]);",
															"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
															"    pm.environment.set(\"LOAN_TYPE\", 2);",
															"}",
															"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
															"           pm.environment.set(\"LOAN_TYPE\", 321);",
															" }",
															"",
															"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
															"           pm.environment.set(\"LOAN_TYPE\", 52);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "5910316d-284e-4f64-a72f-04abc76cf538",
														"exec": [
															"pm.test(\"Status code is 200 found\", function (err, response) {",
															"    pm.response.to.have.status(200);",
															"});   ",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Cookie",
														"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "decision",
															"value": "1",
															"type": "text"
														},
														{
															"key": "loan_limit",
															"value": "50000",
															"type": "text"
														},
														{
															"key": "notes",
															"value": "",
															"type": "text"
														},
														{
															"key": "loan_term_set",
															"value": "",
															"type": "text"
														},
														{
															"key": "eligible_loan_type_ids[]",
															"value": "{{LOAN_TYPE}}",
															"type": "text"
														},
														{
															"key": "submit",
															"value": "Submit",
															"type": "text"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID_1}}",
													"host": [
														"{{SERVER_API_BASE_URL}}"
													],
													"path": [
														"admin",
														"people",
														"approveReject",
														"id",
														"{{PERSON_ID_1}}"
													]
												},
												"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
											},
											"response": []
										},
										{
											"name": "[AS] Accept loan offer on app",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "5289679c-3207-4876-896c-adec5cb0addd",
														"exec": [
															"setTimeout(function(){}, [5000]);",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "0e67a522-d1fc-4cd7-a0e9-aa7e1acf8762",
														"exec": [
															"pm.test(\"Status code is 200\", function (err, response) {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"utility",
														"v2",
														"loan",
														"user_accept_offer"
													]
												},
												"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
											},
											"response": []
										},
										{
											"name": "Mark payment as sent from admin",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "382d3905-09e0-427c-847e-a6d117a042bd",
														"exec": [
															"pm.test(\"Status code is 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d0b19746-9928-4bbf-9b11-dd4543510b08",
														"exec": [
															"setTimeout(function(){}, [10000]);",
															"//Setup date",
															"var moment = require('moment');",
															"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
															"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
															"",
															"//Set the correct rails provider that match the country",
															"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
															"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
															"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
															"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
															"   ",
															"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
															"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
															"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
															"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
															"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
															"  ",
															"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
															"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
															"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
															"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
															"   ",
															"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
															"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
															"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
															"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
															"   ",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Cookie",
														"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "transaction_amount",
															"value": "3000",
															"type": "text"
														},
														{
															"key": "confirmation_number",
															"value": "{{CONFIRMATION_NUMBER}}",
															"type": "text"
														},
														{
															"key": "transaction_date",
															"value": "{{TIME_NOW_SEND_PAYMENT}}",
															"description": "10/11/2018, 11:25 AM",
															"type": "text"
														},
														{
															"key": "mno_provider_name",
															"value": "{{MNO-PROVIDER}}",
															"type": "text"
														},
														{
															"key": "submit",
															"value": "Submitting...",
															"type": "text"
														}
													],
													"options": {
														"urlencoded": {}
													}
												},
												"url": {
													"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID_1}}",
													"host": [
														"{{SERVER_API_BASE_URL}}"
													],
													"path": [
														"admin",
														"people",
														"addDisbursement",
														"id",
														"{{PERSON_ID_1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Backdate active Loan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "181901c0-ce3b-4eb7-b918-8d461bcd52c3",
														"exec": [
															"pm.test(\"Status code is 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "15ebaf11-dc23-4b13-b829-f2af9cee59c2",
														"exec": [
															"setTimeout(function(){}, [10000]);",
															"//Setup date",
															"var moment = require('moment');",
															"var backDatedDay = moment().subtract(22, 'day').format(\"YYYY-MM-DD\");",
															"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Cookie",
														"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "disbursement_date",
															"value": "{{DATE_TO_BACKDATE_TO}}",
															"description": "{{DATE_TO_BACKDATE_TO}}",
															"type": "text"
														},
														{
															"key": "submit",
															"value": "Submitting...",
															"type": "text"
														}
													],
													"options": {}
												},
												"url": {
													"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID_1}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
													"host": [
														"{{SERVER_API_BASE_URL}}"
													],
													"path": [
														"admin",
														"people",
														"changeDisbursement",
														"id",
														"{{PERSON_ID_1}}",
														"loan_application_id",
														"{{LOAN_APPLICATION_ID}}"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "bddd6cdb-a7ef-49ee-98ea-810f1ccb4bec",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a768ba4a-5df6-4dc3-9875-f7ef3cffed81",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PaymentPlan Creation - No Segmentation",
					"item": [
						{
							"name": "setup",
							"item": [
								{
									"name": "create user - backdate loan",
									"item": [
										{
											"name": "Admin login",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "76af7ae9-d2ba-43cb-9387-75a650b09b44",
														"exec": [
															"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
															"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
															"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
															"",
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "a8ab6b16-d154-41f2-b0d4-ff53e15c9131",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "username",
															"value": "{{ADMIN_LOGIN_USERNAME}}",
															"type": "text"
														},
														{
															"key": "password",
															"value": "{{ADMIN_LOGIN_PASSWORD}}",
															"type": "text"
														}
													],
													"options": {
														"urlencoded": {}
													}
												},
												"url": {
													"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
													"host": [
														"{{SERVER_API_BASE_URL}}"
													],
													"path": [
														"site",
														"authQA"
													]
												},
												"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
											},
											"response": []
										},
										{
											"name": "[AS] Settings for Admin",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "031fc9e2-d001-4683-9aa4-d5c319e01a89",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"const acceptanceServiceRequest = {",
															"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
															"  method: 'GET',",
															"  header: 'Content-Type:application/json'",
															"};",
															"",
															"//Acceptance service will GET response in JSON format from loans.admin_config table",
															"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
															"    console.log(response.json());",
															"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
															"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
															"    });",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "approveNewMembersUsing",
															"value": "manual",
															"type": "text",
															"disabled": true
														},
														{
															"key": "approveRepeatMembers",
															"value": "manual",
															"type": "text",
															"disabled": true
														},
														{
															"key": "publishPaymentAfterLoanRepayment",
															"value": "yes",
															"type": "text",
															"disabled": true
														},
														{
															"key": "publishPaymentAfterSuccessfulLoanDisbursement",
															"value": "yes",
															"type": "text",
															"disabled": true
														},
														{
															"key": "enablePaymentPlans",
															"value": "yes",
															"type": "text"
														},
														{
															"key": "firstPaymentDate",
															"value": "5",
															"type": "text",
															"disabled": true
														},
														{
															"key": "paymentPlanMinimumNumberOfInstallments",
															"value": "10",
															"type": "text",
															"disabled": true
														},
														{
															"key": "paymentPlanMaximumNumberOfInstallments",
															"value": "10",
															"type": "text",
															"disabled": true
														},
														{
															"key": "paymentPlanTotalDurationDays",
															"value": "30",
															"type": "text",
															"disabled": true
														},
														{
															"key": "blacklistFraudulentCustomersUsing",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "showReferralsButtonOnHomescreenForCustomersOn",
															"value": "TZ_TIGO, TZ_VODACOM",
															"type": "text",
															"disabled": true
														},
														{
															"key": "performKYCCheckToNewBorrowers",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "coinsOAuthFlag",
															"value": "mno_connected, phone_exists",
															"type": "text",
															"disabled": true
														},
														{
															"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "sendAllTestSMSTo",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "sendAllTestEmailTo",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "telerivetTestPhoneID",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "cRBLowBalanceThreshold",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "organicAcquisitionSources",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "paidAcquisitionSources",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "hoverExperimentUsers",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "sendFrom",
															"value": "employee",
															"type": "text",
															"disabled": true
														},
														{
															"key": "simulateB2CSuccessResponse",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "b2CResponseCode",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "asyncB2CResponseCode",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "asyncB2CResponseMessage",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "adminIdleSignoutTimeout",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "enablePaymentAccountValidation",
															"value": "yes",
															"type": "text",
															"disabled": true
														},
														{
															"key": "autoGenerateReceipt",
															"value": "no",
															"type": "text",
															"disabled": true
														},
														{
															"key": "maximumNumberOfFetchReceiptAttempts",
															"value": "3",
															"type": "text",
															"disabled": true
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"utility",
														"v2",
														"adminSettings"
													]
												},
												"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
											},
											"response": []
										},
										{
											"name": "[AS] Create User With Applied loan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "3e91e753-5034-40c4-95d6-ad01752ffcd4",
														"exec": [
															"setTimeout(function(){}, [10000]);",
															"",
															"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
															"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "26108cd3-19b6-48b1-b28a-34820b44e7bc",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"pm.environment.set(\"PERSON_ID_1\", pm.response.json().personId);",
															"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"utility",
														"v2",
														"user",
														"creation",
														"userWithAppliedLoan"
													]
												}
											},
											"response": []
										},
										{
											"name": "[AS] Approve Loan via Admin",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "9ef81911-b093-4273-81ab-395b9f23ffd2",
														"exec": [
															"setTimeout(function(){}, [15000]);",
															"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
															"    pm.environment.set(\"LOAN_TYPE\", 2);",
															"}",
															"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
															"           pm.environment.set(\"LOAN_TYPE\", 321);",
															" }",
															"",
															"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
															"           pm.environment.set(\"LOAN_TYPE\", 52);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "3eb99b74-5910-465b-bc80-6388181c8fba",
														"exec": [
															"pm.test(\"Status code is 200 found\", function (err, response) {",
															"    pm.response.to.have.status(200);",
															"});   ",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Cookie",
														"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "decision",
															"value": "1",
															"type": "text"
														},
														{
															"key": "loan_limit",
															"value": "50000",
															"type": "text"
														},
														{
															"key": "notes",
															"value": "",
															"type": "text"
														},
														{
															"key": "loan_term_set",
															"value": "",
															"type": "text"
														},
														{
															"key": "eligible_loan_type_ids[]",
															"value": "{{LOAN_TYPE}}",
															"type": "text"
														},
														{
															"key": "submit",
															"value": "Submit",
															"type": "text"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID_1}}",
													"host": [
														"{{SERVER_API_BASE_URL}}"
													],
													"path": [
														"admin",
														"people",
														"approveReject",
														"id",
														"{{PERSON_ID_1}}"
													]
												},
												"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
											},
											"response": []
										},
										{
											"name": "[AS] Accept loan offer on app",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "685b756e-245f-44e7-ab18-ac98e8b6e9bc",
														"exec": [
															"setTimeout(function(){}, [5000]);",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "544a4f0b-b5e1-4328-b2cf-5b69c234d79a",
														"exec": [
															"pm.test(\"Status code is 200\", function (err, response) {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"utility",
														"v2",
														"loan",
														"user_accept_offer"
													]
												},
												"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
											},
											"response": []
										},
										{
											"name": "Mark payment as sent from admin",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e0b2517a-f5f4-4101-9ead-97e02250234a",
														"exec": [
															"pm.test(\"Status code is 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "44fd5de8-db61-4dcc-8f69-21ec25a4f3c1",
														"exec": [
															"setTimeout(function(){}, [10000]);",
															"//Setup date",
															"var moment = require('moment');",
															"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
															"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
															"",
															"//Set the correct rails provider that match the country",
															"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
															"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
															"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
															"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
															"   ",
															"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
															"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
															"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
															"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
															"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
															"  ",
															"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
															"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
															"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
															"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
															"   ",
															"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
															"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
															"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
															"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
															"   ",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Cookie",
														"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "transaction_amount",
															"value": "3000",
															"type": "text"
														},
														{
															"key": "confirmation_number",
															"value": "{{CONFIRMATION_NUMBER}}",
															"type": "text"
														},
														{
															"key": "transaction_date",
															"value": "{{TIME_NOW_SEND_PAYMENT}}",
															"description": "10/11/2018, 11:25 AM",
															"type": "text"
														},
														{
															"key": "mno_provider_name",
															"value": "{{MNO-PROVIDER}}",
															"type": "text"
														},
														{
															"key": "submit",
															"value": "Submitting...",
															"type": "text"
														}
													],
													"options": {
														"urlencoded": {}
													}
												},
												"url": {
													"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID_1}}",
													"host": [
														"{{SERVER_API_BASE_URL}}"
													],
													"path": [
														"admin",
														"people",
														"addDisbursement",
														"id",
														"{{PERSON_ID_1}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Backdate active Loan",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0084595a-590d-4de1-b8d3-035a018ee281",
														"exec": [
															"pm.test(\"Status code is 200\", function() {",
															"    pm.response.to.have.status(200);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "828f1270-7934-4c0b-b154-6a09f3d4b012",
														"exec": [
															"setTimeout(function(){}, [10000]);",
															"//Setup date",
															"var moment = require('moment');",
															"var backDatedDay = moment().subtract(22, 'day').format(\"YYYY-MM-DD\");",
															"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Cookie",
														"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "disbursement_date",
															"value": "{{DATE_TO_BACKDATE_TO}}",
															"description": "{{DATE_TO_BACKDATE_TO}}",
															"type": "text"
														},
														{
															"key": "submit",
															"value": "Submitting...",
															"type": "text"
														}
													],
													"options": {}
												},
												"url": {
													"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID_1}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
													"host": [
														"{{SERVER_API_BASE_URL}}"
													],
													"path": [
														"admin",
														"people",
														"changeDisbursement",
														"id",
														"{{PERSON_ID_1}}",
														"loan_application_id",
														"{{LOAN_APPLICATION_ID}}"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "25834a6a-eca5-42cb-9e8d-f7e22309bf83",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7857282b-bcf5-4829-be6f-f6fc28ab4386",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get authentication token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "55abf939-35e2-4088-a73b-637102445989",
										"exec": [
											"pm.environment.set(\"AUTHORIZATION_TOKEN\", pm.response.json().tokenValue);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Authorization",
										"value": "{{AUTHORIZATION_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/getAuthToken/personId/450",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"loancollections",
										"getAuthToken",
										"personId",
										"450"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create active payment plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7dd7fc14-da7c-40b4-865c-c4cefc8839db",
										"exec": [
											"pm.test(\"Status code is 200 Bad Request\", function (err, response) {",
											"    pm.response.to.have.status(200);",
											"});   ",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Verify response returned is 200 - Payment plan accepted for processing\", function () {",
											"    pm.expect(jsonBody.OK).to.eql(\"Payment plan accepted for processing\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d294cb23-b5fe-45c1-bf09-32da6f36127b",
										"exec": [
											"//Setup date",
											"var moment = require('moment');",
											"var day = moment().add(3, 'day').format(\"YYYY-MM-DD\");",
											"",
											"pm.environment.set(\"FIRST_REPAYMENT_DATE\", day);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{AUTHORIZATION_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"loan_application_id\": {{LOAN_APPLICATION_ID}},\n    \"installment_period\": {{INSTALLMENT_PERIOD}},\n    \"number_of_installments\": {{NUMBER_OF_INSTALLMENTS}},\n    \"first_installment_start_date\": {{FIRST_REPAYMENT_DATE}},\n    \"installment_amount\": {{INSTALLMENT_AMOUNT}},\n    \"agent_id\": 777\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"payment_plan"
									]
								}
							},
							"response": []
						},
						{
							"name": "Duplicate active payment plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "41f0c9c2-b8d6-424d-b77e-99517b8a214a",
										"exec": [
											"pm.test(\"Status code is 400 bad request\", function (err, response) {",
											"    pm.response.to.have.status(400);",
											"});   ",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Verify response returned is Bad Request\", function () {",
											"    pm.expect(jsonBody.errors.existing_active_payment_plan[0]).to.eql(\"There is an existing payment plan\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e884a600-35d3-4c87-9d34-d997d9c7613d",
										"exec": [
											"//Setup date",
											"var moment = require('moment');",
											"var day = moment().add(3, 'day').format(\"YYYY-MM-DD\");",
											"",
											"pm.environment.set(\"FIRST_REPAYMENT_DATE\", day);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{AUTHORIZATION_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"loan_application_id\": {{LOAN_APPLICATION_ID}},\n    \"installment_period\": {{INSTALLMENT_PERIOD}},\n    \"number_of_installments\": {{NUMBER_OF_INSTALLMENTS}},\n    \"first_installment_start_date\": \"{{FIRST_REPAYMENT_DATE}}\",\n    \"installment_amount\": {{INSTALLMENT_AMOUNT}},\n    \"agent_id\": 777\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"payment_plan"
									]
								}
							},
							"response": []
						},
						{
							"name": "[200 Ok] - Get active payment plan by loanApplicationId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae2b0fe2-dc11-4165-94b7-8477d5c46421",
										"exec": [
											"pm.test(\"Status code is 200 Bad Request\", function (err, response) {",
											"    pm.response.to.have.status(200);",
											"});   ",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Verify LOAN_APPLICATION_ID returned is correct - for exisitng payment plan\", function () {",
											"    pm.expect(jsonBody.loan_application_id.toString()).to.eql(pm.environment.get(\"LOAN_APPLICATION_ID\"));",
											"",
											"});",
											"pm.test(\"Verify INSTALLMENT_AMOUNT returned is correct - for exisitng payment plan\", function () {",
											"    pm.expect(jsonBody.installment_amount.toString()).to.eql(pm.environment.get(\"INSTALLMENT_AMOUNT\"));",
											"",
											"});",
											"pm.test(\"Verify INSTALMENT_PERIOD returned is correct - for exisitng payment plan\", function () {",
											"    pm.expect(jsonBody.installment_period.toString()).to.eql(pm.environment.get(\"INSTALMENT_PERIOD\"));",
											"",
											"});",
											"pm.test(\"Verify NUMBER_OF_INSTALLMENTS returned is correct - for exisitng payment plan\", function () {",
											"    pm.expect(jsonBody.number_of_installments.toString()).to.eql(pm.environment.get(\"NUMBER_OF_INSTALLMENTS\"));",
											"",
											"});",
											"pm.test(\"Verify FIRST_REPAYMENT_DATE returned is correct - for exisitng payment plan\", function () {",
											"    pm.expect(jsonBody.first_installment_start_date.toString()).to.eql(pm.environment.get(\"FIRST_REPAYMENT_DATE\"));",
											"",
											"});",
											"pm.test(\"Verify next_due_date returned is correct - for exisitng payment plan\", function () {",
											"    pm.expect(jsonBody.next_due_date.toString()).to.eql(pm.environment.get(\"FIRST_REPAYMENT_DATE\"));",
											"",
											"});",
											"pm.test(\"Verify agent_id returned is correct - for exisitng payment plan\", function () {",
											"    pm.expect(jsonBody.agent_id.toString()).to.eql(\"777\");",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{AUTHORIZATION_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan/{{LOAN_APPLICATION_ID}}",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"payment_plan",
										"{{LOAN_APPLICATION_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "[404] Get non-existent payment plan by loanApplicationId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "888de7cb-eacd-4fd7-84aa-74d48b048e4f",
										"exec": [
											"pm.test(\"Status code is 404 not found\", function (err, response) {",
											"    pm.response.to.have.status(404);",
											"});",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Verify non existent plan returns 404\", function () {",
											"    pm.expect(jsonBody.errors.loan_application_id[0]).to.eql(\"payment_plan matching loan_application_id: 9934532 not found\");",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "{{AUTHORIZATION_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan/9934532",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"payment_plan",
										"9934532"
									]
								}
							},
							"response": []
						},
						{
							"name": "[400] Invalid request - payment plan by invalid loanApplicationId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71e0d31c-ec3d-46fb-b308-c22e8ea35b36",
										"exec": [
											"pm.test(\"Status code is 400 bad request\", function (err, response) {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Authorization",
										"value": "{{AUTHORIZATION_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan/hdyh",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"payment_plan",
										"hdyh"
									]
								}
							},
							"response": []
						},
						{
							"name": "[401] Invalid XAuthorizationHeader - payment plan by invalid loanApplicationId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1798b133-884b-47fa-8994-f0f502daf90e",
										"exec": [
											"pm.test(\"Status code is 400 bad request\", function (err, response) {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Verify 400 Bad request\", function () {",
											"    pm.expect(jsonBody.error).to.eql(\"Auth token is not valid\");",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Authorization",
										"type": "text",
										"value": "RandomHEader"
									}
								],
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan/364565",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"payment_plan",
										"364565"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "[Global] Account_processing",
			"item": [
				{
					"name": "[Util] setup-bulk",
					"item": [
						{
							"name": "setup[utility]",
							"item": [
								{
									"name": "Admin login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fbefc59b-00c4-4df0-a303-782338752bd5",
												"exec": [
													"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
													"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
													"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ae4bd379-424b-4418-b9d0-95d9c01b73e9",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{ADMIN_LOGIN_USERNAME}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{ADMIN_LOGIN_PASSWORD}}",
													"type": "text"
												}
											],
											"options": {
												"urlencoded": {}
											}
										},
										"url": {
											"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
											"host": [
												"{{SERVER_API_BASE_URL}}"
											],
											"path": [
												"site",
												"authQA"
											]
										},
										"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
									},
									"response": []
								},
								{
									"name": "[AS] Settings for Admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e4985acb-9889-4e73-b9b1-0b509aacdde5",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const acceptanceServiceRequest = {",
													"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
													"  method: 'GET',",
													"  header: 'Content-Type:application/json'",
													"};",
													"",
													"//Acceptance service will GET response in JSON format from loans.admin_config table",
													"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
													"    console.log(response.json());",
													"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
													"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
													"    });",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "approveNewMembersUsing",
													"value": "manual",
													"type": "text"
												},
												{
													"key": "approveRepeatMembers",
													"value": "manual",
													"type": "text",
													"disabled": true
												},
												{
													"key": "blacklistFraudulentCustomersUsing",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "showReferralsButtonOnHomescreenForCustomersOn",
													"value": "TZ_TIGO, TZ_VODACOM",
													"type": "text",
													"disabled": true
												},
												{
													"key": "performKYCCheckToNewBorrowers",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "coinsOAuthFlag",
													"value": "mno_connected, phone_exists",
													"type": "text",
													"disabled": true
												},
												{
													"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "sendAllTestSMSTo",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "sendAllTestEmailTo",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "telerivetTestPhoneID",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "cRBLowBalanceThreshold",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "organicAcquisitionSources",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "paidAcquisitionSources",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "hoverExperimentUsers",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "sendFrom",
													"value": "employee",
													"type": "text"
												},
												{
													"key": "simulateB2CSuccessResponse",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "b2CResponseCode",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "asyncB2CResponseCode",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "asyncB2CResponseMessage",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "adminIdleSignoutTimeout",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "enablePaymentAccountValidation",
													"value": "yes",
													"type": "text",
													"disabled": true
												},
												{
													"key": "autoGenerateReceipt",
													"value": "no",
													"type": "text",
													"disabled": true
												},
												{
													"key": "maximumNumberOfFetchReceiptAttempts",
													"value": "3",
													"type": "text",
													"disabled": true
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"utility",
												"v2",
												"adminSettings"
											]
										},
										"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
									},
									"response": []
								},
								{
									"name": "[AS] Create User With Applied loan",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "bd5483be-ae79-46ad-8f68-4ed8e9bfb525",
												"exec": [
													"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
													"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "700d6a3d-5726-4b16-9e26-995bdec0dfcc",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.environment.set(\"PERSON_ID\", pm.response.json().personId);",
													"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"utility",
												"v2",
												"user",
												"creation",
												"userWithAppliedLoan"
											]
										}
									},
									"response": []
								},
								{
									"name": "[AS] Approve Loan via Admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "435e49b4-a9e4-452e-8bcd-afd8c7d101e2",
												"exec": [
													"setTimeout(function(){}, [10000]);",
													"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
													"    pm.environment.set(\"LOAN_TYPE\", 2);",
													"}",
													"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
													"           pm.environment.set(\"LOAN_TYPE\", 321);",
													" }",
													"",
													"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
													"           pm.environment.set(\"LOAN_TYPE\", 52);",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2e0679da-9e63-4d3a-96b0-4a03640886a5",
												"exec": [
													"pm.test(\"Status code is 200 found\", function (err, response) {",
													"    pm.response.to.have.status(200);",
													"});   ",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Cookie",
												"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "decision",
													"value": "1",
													"type": "text"
												},
												{
													"key": "loan_limit",
													"value": "50000",
													"type": "text"
												},
												{
													"key": "notes",
													"value": "",
													"type": "text"
												},
												{
													"key": "loan_term_set",
													"value": "",
													"type": "text"
												},
												{
													"key": "eligible_loan_type_ids[]",
													"value": "{{LOAN_TYPE}}",
													"type": "text"
												},
												{
													"key": "submit",
													"value": "Submit",
													"type": "text"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID}}",
											"host": [
												"{{SERVER_API_BASE_URL}}"
											],
											"path": [
												"admin",
												"people",
												"approveReject",
												"id",
												"{{PERSON_ID}}"
											]
										},
										"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
									},
									"response": []
								},
								{
									"name": "[AS] Accept loan offer on app",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "900c4d2a-d51c-4a76-8166-3489d174eb6a",
												"exec": [
													"setTimeout(function(){}, [5000]);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "9a6c89a1-2c95-486b-9b55-61e9aacf7455",
												"exec": [
													"pm.test(\"Status code is 200\", function (err, response) {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"utility",
												"v2",
												"loan",
												"user_accept_offer"
											]
										},
										"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
									},
									"response": []
								},
								{
									"name": "Mark payment as sent from admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4aa7df53-ed6d-40e7-9dc2-620b94c4b631",
												"exec": [
													"pm.test(\"Status code is 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e68183df-d7aa-4eb7-8c2f-62f01e918cad",
												"exec": [
													"setTimeout(function(){}, [10000]);",
													"//Setup date",
													"var moment = require('moment');",
													"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
													"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
													"",
													"//Set the correct rails provider that match the country",
													"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
													"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
													"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
													"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
													"   ",
													"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
													"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
													"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
													"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
													"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
													"  ",
													"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
													"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
													"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
													"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
													"   ",
													"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
													"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
													"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
													"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
													"   ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Cookie",
												"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "transaction_amount",
													"value": "3000",
													"type": "text"
												},
												{
													"key": "confirmation_number",
													"value": "{{CONFIRMATION_NUMBER}}",
													"type": "text"
												},
												{
													"key": "transaction_date",
													"value": "{{TIME_NOW_SEND_PAYMENT}}",
													"description": "10/11/2018, 11:25 AM",
													"type": "text"
												},
												{
													"key": "mno_provider_name",
													"value": "{{MNO-PROVIDER}}",
													"type": "text"
												},
												{
													"key": "submit",
													"value": "Submitting...",
													"type": "text"
												}
											],
											"options": {
												"urlencoded": {}
											}
										},
										"url": {
											"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID}}",
											"host": [
												"{{SERVER_API_BASE_URL}}"
											],
											"path": [
												"admin",
												"people",
												"addDisbursement",
												"id",
												"{{PERSON_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Insert record in Loan Collection History Table",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "02315653-b8b7-4613-932a-629aecf892b1",
												"exec": [
													"pm.test(\"Status code is 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"LOAN_COLLECTION_ID\", jsonBody.id);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3f4cc40-a171-40bf-87fb-ffe2b09688b8",
												"exec": [
													"setTimeout(function(){}, [20000]);",
													"",
													"var moment = require('moment');",
													"pm.environment.set(\"COLLECTION_DATE\", moment().subtract('days', 10).format(\"YYYY-MM-DD\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"loanApplicationId\": {{LOAN_APPLICATION_ID}},\n    \"personId\": {{PERSON_ID}},\n    \"partnerId\": 6,\n    \"amountOwed\": {{AMOUNT_OWED}},\n    \"bucketSegmentationConfigId\": 1,\n    \"collectionDate\": \"{{COLLECTION_DATE}}\",\n    \"partnerSegmentationConfigId\": 1,\n    \"bucketId\": 3,\n    \"active\": 1\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection_history"
											]
										}
									},
									"response": []
								},
								{
									"name": "Insert record in Loan Collection Table",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "57dc798e-4d55-4656-892f-01f2e60dd4ff",
												"exec": [
													"pm.test(\"Status code is 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c08e5af4-2c4e-4da7-aed6-427ed667fba7",
												"exec": [
													"setTimeout(function(){}, [20000]);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": {{LOAN_COLLECTION_ID}},\n    \"loanApplicationId\": {{LOAN_APPLICATION_ID}},\n    \"personId\": {{PERSON_ID}},\n    \"partnerId\": 6,\n    \"amountOwed\": {{AMOUNT_OWED}},\n    \"bucketSegmentationConfigId\": 1,\n    \"partnerSegmentationConfigId\": 1,\n    \"bucketId\": 3,\n    \"active\": 1\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Migrate user to snowflake by personId",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8be83ade-cba2-4997-a0aa-e63b88add3bf",
												"exec": [
													" pm.test(\"Status code is 200\", function () {",
													"     pm.response.to.have.status(200);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID}}",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"utility",
												"loancollections",
												"uploadUserDataToSnowflake",
												"personId",
												"{{PERSON_ID}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "[Util] - Get Authorization Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "93680deb-6781-45a1-a296-ad38413f6036",
										"exec": [
											"pm.environment.set(\"AUTHORIZATION_TOKEN\", pm.response.json().tokenValue);",
											"pm.environment.set(\"PERSON_ID\", pm.response.json().personId);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/getAuthToken/personId/909",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"loancollections",
										"getAuthToken",
										"personId",
										"909"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Util] - Truncate all tables [Snowflake]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37041056-77d6-4b68-aabb-f14d021fdf54",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/truncate_all",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"truncate_all"
									]
								},
								"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
							},
							"response": []
						},
						{
							"name": "[Util] - Truncate all tables [Snowflake] Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b28433eb-02d0-4329-b384-7bd6ff14508d",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/truncate_all",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"truncate_all"
									]
								},
								"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
							},
							"response": []
						},
						{
							"name": "[Util] - Remove staged files on all tables [Snowflake]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5bbd636a-bbd9-4403-9e69-277fcca448b6",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/remove_all_staged",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"remove_all_staged"
									]
								},
								"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
							},
							"response": []
						},
						{
							"name": "[Util] - Truncate data on all partner_segmentation_configs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f73ecd9a-ab1b-4a7e-90c6-c659a47c93c8",
										"exec": [
											" pm.test(\"Status code is 204 No Content\", function () {",
											"     pm.response.to.have.status(204);",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"partner_segmentation_config"
									]
								},
								"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
							},
							"response": []
						},
						{
							"name": "[Util] - Truncate data on all bucket_segmetation_configs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77249f8a-94c8-48c9-a7ef-6a3ad13f3297",
										"exec": [
											" pm.test(\"Status code is 204 No Content\", function () {",
											"     pm.response.to.have.status(204);",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"bucket_segmentation_config"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Util] - Truncate data on delivery_channel",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ed77e3fb-6eba-47e9-a49a-ad48ec8ac93e",
										"exec": [
											" pm.test(\"Status code is 204 No Content\", function () {",
											"     pm.response.to.have.status(204);",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"delivery_channel"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Util] - Truncate data on collection_partner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "778e7821-51ea-4eb4-92c2-3ef2b109984b",
										"exec": [
											" pm.test(\"Status code is 204 No Content\", function () {",
											"     pm.response.to.have.status(204);",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"collection_partner"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Util] - SetUp Partner Segmentation Configs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f15fc69b-1c0a-4578-a27c-90c4fe1b1588",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5939de4a-fd73-4896-864f-ce8ecb6fc08e",
										"exec": [
											"setTimeout(function(){}, [3000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/setup",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"partner_segmentation_config",
										"setup"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Util] - SetUp Collection Partner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "87c63a22-2919-4598-8c89-b0680a27e8c3",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "67372e2e-44f0-40c4-9793-22cf0a352340",
										"exec": [
											"setTimeout(function(){}, [3000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner/setup",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"collection_partner",
										"setup"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Util] - SetUp Bucket Segmentaton Configs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01fdc78e-3a76-4e07-b485-daf78328cf0d",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a0acd3d5-a1e6-412d-a1ff-07c61d8c741e",
										"exec": [
											"setTimeout(function(){}, [3000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config/setup",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"loancollections",
										"bucket_segmentation_config",
										"setup"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Util] - Stage All files to snowflake",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2825a77b-5f08-46a5-8935-194a1e13552c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/stage_all",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"stage_all"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Util] - Copy All into snowflake tables",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f663a1e0-3ced-4964-986f-8478017864d7",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/copy_all",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"copy_all"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delay 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dab15c39-53d4-4b88-bc1e-47b06cde694a",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://postman-echo.com/delay/5",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"delay",
										"5"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "bucket_segmentation",
					"item": [
						{
							"name": "dpd_segment",
							"item": [
								{
									"name": "clear required data",
									"item": [
										{
											"name": "[Util] - Truncate data on all partner_segmentation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3b15235c-6dd1-49da-bdba-e0e192403f70",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"partner_segmentation_config"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all delivery_channel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "781cc5b7-f7e6-4a58-b194-0b9682628eaf",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"delivery_channel"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all partner",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "28dbb320-f503-4e99-b97d-c158cd179614",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"collection_partner"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all account_processing_log",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fc45494e-8b67-4dec-bc85-afd329d2abd8",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing_log"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all account_processing",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c4897278-86a6-4246-a9f5-b1a310cd1d14",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "103a8da9-09c9-4f21-8994-8e50ca7a2aee",
														"exec": [
															"pm.test(\"Status code is 204 No Content\", function () {",
															"    pm.response.to.have.status(204);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection_history",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "486ace9c-b514-4c4f-82c9-73c13fea5424",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection_history"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket_segmetation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "389f6b08-eaed-4edf-9b1d-9473887f3a7e",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket_segmentation_config"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cba253b7-32a6-4a57-8320-e25b9d2245e5",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all generated_file",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1d49e27f-79d3-4cbd-8d96-4e36936d9ca3",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/generated_file",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"generated_file"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate all tables [Snowflake] Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d9f9067b-cde2-434e-b560-555ca13364b8",
														"exec": [
															" pm.test(\"Status code is 200\", function () {",
															"     pm.response.to.have.status(200);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/truncate_all",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"snowflake",
														"truncate_all"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "setup",
									"item": [
										{
											"name": "upload account 1 to snowflake",
											"item": [
												{
													"name": "Admin login",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "849f54af-c63b-4204-9f11-fa0d0054cf22",
																"exec": [
																	"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
																	"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
																	"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "f58f8c0f-d913-4528-ac41-ee6b52dfcf2b",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "username",
																	"value": "{{ADMIN_LOGIN_USERNAME}}",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "{{ADMIN_LOGIN_PASSWORD}}",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"site",
																"authQA"
															]
														},
														"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
													},
													"response": []
												},
												{
													"name": "[AS] Settings for Admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "cabb627a-c136-49af-a397-43c0d119c83b",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"const acceptanceServiceRequest = {",
																	"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
																	"  method: 'GET',",
																	"  header: 'Content-Type:application/json'",
																	"};",
																	"",
																	"//Acceptance service will GET response in JSON format from loans.admin_config table",
																	"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
																	"    console.log(response.json());",
																	"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
																	"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
																	"    });",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "approveNewMembersUsing",
																	"value": "manual",
																	"type": "text"
																},
																{
																	"key": "approveRepeatMembers",
																	"value": "manual",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "blacklistFraudulentCustomersUsing",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "showReferralsButtonOnHomescreenForCustomersOn",
																	"value": "TZ_TIGO, TZ_VODACOM",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "performKYCCheckToNewBorrowers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "coinsOAuthFlag",
																	"value": "mno_connected, phone_exists",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestSMSTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestEmailTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "telerivetTestPhoneID",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "cRBLowBalanceThreshold",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "organicAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "paidAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "hoverExperimentUsers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendFrom",
																	"value": "employee",
																	"type": "text"
																},
																{
																	"key": "simulateB2CSuccessResponse",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "b2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseMessage",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "adminIdleSignoutTimeout",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "enablePaymentAccountValidation",
																	"value": "yes",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "autoGenerateReceipt",
																	"value": "no",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "maximumNumberOfFetchReceiptAttempts",
																	"value": "3",
																	"type": "text",
																	"disabled": true
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"adminSettings"
															]
														},
														"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
													},
													"response": []
												},
												{
													"name": "[AS] Create User With Applied loan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "ca226191-eab4-48d5-bf92-9188c914ef58",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "2b07bbf9-33a0-464d-a9f6-4f8db8ede3dd",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PERSON_ID_1\", pm.response.json().personId);",
																	"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"user",
																"creation",
																"userWithAppliedLoan"
															]
														}
													},
													"response": []
												},
												{
													"name": "[AS] Approve Loan via Admin",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "fa782f20-8ecb-4b38-b466-ebd86db20da0",
																"exec": [
																	"setTimeout(function(){}, [15000]);",
																	"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 2);",
																	"}",
																	"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 321);",
																	" }",
																	"",
																	"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 52);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "8d0c0c40-b834-4e03-a142-7840b926fce5",
																"exec": [
																	"pm.test(\"Status code is 200 found\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});   ",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "decision",
																	"value": "1",
																	"type": "text"
																},
																{
																	"key": "loan_limit",
																	"value": "50000",
																	"type": "text"
																},
																{
																	"key": "notes",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "loan_term_set",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "eligible_loan_type_ids[]",
																	"value": "{{LOAN_TYPE}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submit",
																	"type": "text"
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID_1}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"approveReject",
																"id",
																"{{PERSON_ID_1}}"
															]
														},
														"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
													},
													"response": []
												},
												{
													"name": "[AS] Accept loan offer on app",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "6b27762e-ba69-40cb-8580-534eef36e3ed",
																"exec": [
																	"setTimeout(function(){}, [5000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "48914f2c-0265-44ea-b2b1-1a9ac70a0ba3",
																"exec": [
																	"pm.test(\"Status code is 200\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"loan",
																"user_accept_offer"
															]
														},
														"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
													},
													"response": []
												},
												{
													"name": "Mark payment as sent from admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "b391e8a3-9a6c-4dc0-9835-409afd9e6129",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "7823ea9a-9dc2-4a65-be5d-7840609a4e30",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
																	"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
																	"",
																	"//Set the correct rails provider that match the country",
																	"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
																	"   ",
																	"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
																	"  ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
																	"   ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
																	"   ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "transaction_amount",
																	"value": "3000",
																	"type": "text"
																},
																{
																	"key": "confirmation_number",
																	"value": "{{CONFIRMATION_NUMBER}}",
																	"type": "text"
																},
																{
																	"key": "transaction_date",
																	"value": "{{TIME_NOW_SEND_PAYMENT}}",
																	"description": "10/11/2018, 11:25 AM",
																	"type": "text"
																},
																{
																	"key": "mno_provider_name",
																	"value": "{{MNO-PROVIDER}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID_1}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"addDisbursement",
																"id",
																"{{PERSON_ID_1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Backdate active Loan",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "8906a5b1-e214-4404-84ce-b0d66b961cbc",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "4414f3e9-9e8c-4a25-9875-f510b723fef0",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"var backDatedDay = moment().subtract(22, 'day').format(\"YYYY-MM-DD\");",
																	"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "disbursement_date",
																	"value": "{{DATE_TO_BACKDATE_TO}}",
																	"description": "{{DATE_TO_BACKDATE_TO}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID_1}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"changeDisbursement",
																"id",
																"{{PERSON_ID_1}}",
																"loan_application_id",
																"{{LOAN_APPLICATION_ID}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Util] - Setup user data by personId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "93447105-b31e-4e99-be75-93c82182c68a",
																"exec": [
																	" pm.test(\"Status code is 200\", function () {",
																	"     pm.response.to.have.status(200);",
																	" });"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "113dc2f6-ece5-4425-beea-d8e8bed36ce1",
																"exec": [
																	"setTimeout(function(){}, [30000]);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID_1}}",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"loancollections",
																"uploadUserDataToSnowflake",
																"personId",
																"{{PERSON_ID_1}}"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "upload account 2 to snowflake",
											"item": [
												{
													"name": "Admin login",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "96a4ac59-9022-4f3e-9ce5-7f4fde1cbcf3",
																"exec": [
																	"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
																	"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
																	"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "2a9fa662-ec9e-4f4d-9c86-70dbdbed4aa8",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "username",
																	"value": "{{ADMIN_LOGIN_USERNAME}}",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "{{ADMIN_LOGIN_PASSWORD}}",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"site",
																"authQA"
															]
														},
														"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
													},
													"response": []
												},
												{
													"name": "[AS] Settings for Admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "26126e84-6432-408b-877b-4fd4e0bbad0e",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"const acceptanceServiceRequest = {",
																	"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
																	"  method: 'GET',",
																	"  header: 'Content-Type:application/json'",
																	"};",
																	"",
																	"//Acceptance service will GET response in JSON format from loans.admin_config table",
																	"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
																	"    console.log(response.json());",
																	"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
																	"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
																	"    });",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "approveNewMembersUsing",
																	"value": "manual",
																	"type": "text"
																},
																{
																	"key": "approveRepeatMembers",
																	"value": "manual",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "blacklistFraudulentCustomersUsing",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "showReferralsButtonOnHomescreenForCustomersOn",
																	"value": "TZ_TIGO, TZ_VODACOM",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "performKYCCheckToNewBorrowers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "coinsOAuthFlag",
																	"value": "mno_connected, phone_exists",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestSMSTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestEmailTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "telerivetTestPhoneID",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "cRBLowBalanceThreshold",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "organicAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "paidAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "hoverExperimentUsers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendFrom",
																	"value": "employee",
																	"type": "text"
																},
																{
																	"key": "simulateB2CSuccessResponse",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "b2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseMessage",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "adminIdleSignoutTimeout",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "enablePaymentAccountValidation",
																	"value": "yes",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "autoGenerateReceipt",
																	"value": "no",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "maximumNumberOfFetchReceiptAttempts",
																	"value": "3",
																	"type": "text",
																	"disabled": true
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"adminSettings"
															]
														},
														"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
													},
													"response": []
												},
												{
													"name": "[AS] Create User With Applied loan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "8f454f0b-475e-480b-8afa-3f3536ca0f17",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "fba01086-549e-4e36-8ce1-7ed2ef0ef3a3",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PERSON_ID_2\", pm.response.json().personId);",
																	"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"user",
																"creation",
																"userWithAppliedLoan"
															]
														}
													},
													"response": []
												},
												{
													"name": "[AS] Approve Loan via Admin",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "3404ca07-9beb-4fe2-97a0-f0879644cd86",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 2);",
																	"}",
																	"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 321);",
																	" }",
																	"",
																	"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 52);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "82bbe44b-e29f-4a5e-8940-0bb0ad542428",
																"exec": [
																	"pm.test(\"Status code is 200 found\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});   ",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "decision",
																	"value": "1",
																	"type": "text"
																},
																{
																	"key": "loan_limit",
																	"value": "50000",
																	"type": "text"
																},
																{
																	"key": "notes",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "loan_term_set",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "eligible_loan_type_ids[]",
																	"value": "{{LOAN_TYPE}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submit",
																	"type": "text"
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID_2}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"approveReject",
																"id",
																"{{PERSON_ID_2}}"
															]
														},
														"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
													},
													"response": []
												},
												{
													"name": "[AS] Accept loan offer on app",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "9e73bb25-4ae6-4ec7-b53d-0c642bc2fc49",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "728dd2cf-e762-4680-b6d7-97d9a919550c",
																"exec": [
																	"pm.test(\"Status code is 200\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"loan",
																"user_accept_offer"
															]
														},
														"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
													},
													"response": []
												},
												{
													"name": "Mark payment as sent from admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "4bc7ff3c-b127-40e5-9b74-bcd964b84252",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "b1a6e500-65ce-47b7-93ff-021134b92dc9",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
																	"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
																	"",
																	"//Set the correct rails provider that match the country",
																	"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
																	"   ",
																	"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
																	"  ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
																	"   ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
																	"   ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "transaction_amount",
																	"value": "3000",
																	"type": "text"
																},
																{
																	"key": "confirmation_number",
																	"value": "{{CONFIRMATION_NUMBER}}",
																	"type": "text"
																},
																{
																	"key": "transaction_date",
																	"value": "{{TIME_NOW_SEND_PAYMENT}}",
																	"description": "10/11/2018, 11:25 AM",
																	"type": "text"
																},
																{
																	"key": "mno_provider_name",
																	"value": "{{MNO-PROVIDER}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID_2}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"addDisbursement",
																"id",
																"{{PERSON_ID_2}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Backdate active Loan",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "fc1d8220-4535-4927-8f69-ad1fa55de1a8",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "7b690ced-1c58-449e-893f-00b85d0ceeec",
																"exec": [
																	"setTimeout(function () { }, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"//Backdate by 22+22+1 days",
																	"var backDatedDay = moment().subtract(45, 'day').format(\"YYYY-MM-DD\");",
																	"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "disbursement_date",
																	"value": "{{DATE_TO_BACKDATE_TO}}",
																	"description": "{{DATE_TO_BACKDATE_TO}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID_2}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"changeDisbursement",
																"id",
																"{{PERSON_ID_2}}",
																"loan_application_id",
																"{{LOAN_APPLICATION_ID}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Util] - Setup user data by personId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "b79ebbe0-27d1-41fa-92f4-1b65afbdcc8d",
																"exec": [
																	" pm.test(\"Status code is 200\", function () {",
																	"     pm.response.to.have.status(200);",
																	" });"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0e85fe92-01bc-429b-9834-eff7c08d2c69",
																"exec": [
																	"setTimeout(function(){}, [30000]);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID_2}}",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"loancollections",
																"uploadUserDataToSnowflake",
																"personId",
																"{{PERSON_ID_2}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "b7a2c6c7-656c-4fb5-834c-fa271e113d51",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "5202932f-c01b-464e-8378-3899f08df32e",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create 2 partners with 0 entrance and exit amounts",
											"item": [
												{
													"name": "[Helper] - Create a collection partner 1",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "a57ab39e-f2ee-4509-917f-8ac54b116483",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_1\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_1\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config partner 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "f7b9b029-7e36-43ab-bb73-265f4c0301fe",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "a61aff5f-b01e-430a-ae0a-99d1f9c2d8ae",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] - Create a collection partner 2",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "9966b9a0-184f-45a3-a32d-ec5262e0f692",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_2\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_2\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner 2\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config - partner 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "d902257d-79a4-41f8-b692-8ec8c4fa459b",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "150bfbdd-d3c5-44e1-b4d1-789e2911dafd",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_2}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "4bafd8b4-c35f-4d1d-ab54-5ff15a9f5f26",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "2bcfc6a3-615e-478a-8fd9-ec1f43769a65",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create partner_segmentation_config",
											"item": [
												{
													"name": "Create a partner_segmentation for  cured bucket",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "049e61cb-842e-4f55-bd0b-753c02f93cf2",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "a440d5c5-f428-4811-8bda-7071b7975243",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_1\",\n\t\"config\": {\"type\":\"Bucket\",\"id\":1},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "59906f44-05af-4195-8261-b813a6214d89",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "66a316b4-24f9-4f05-9744-298dd064758e",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_CURED\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation for  DoNotWork bucket",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "bb72c75d-4fd5-4f2b-995a-3750f2c2d04e",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "cf5cca50-16e9-4a84-9373-b876ace258d6",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_1\",\n\t\"config\": {\"type\":\"Bucket\",\"id\":2},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "dde5734e-1825-4926-86eb-c353d6df3446",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "b756e4ab-168f-4acb-948a-5c15c4c1460d",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_DO_NOT_WORK\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation with partner 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "3a881c66-8aa6-4acb-ae64-f43dab90056d",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "442faba6-c98d-48a0-aff1-a330645468ec",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_1\",\n\t\"config\": {\"type\":\"Partner\",\"id\":{{PARTNER_ID_1}}},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "791f4009-ea14-4092-adf6-1b7b3105f7e3",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "80e04d80-a1b8-4cbf-b39f-380de05c1cc4",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_1\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation with partner 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "4f3a964a-f5af-445f-8e5c-ae9af4a57e26",
																"exec": [
																	"setTimeout(function () { }, [5000]);",
																	"",
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix();",
																	"",
																	"var MD5 = function (d) { result = M(V(Y(X(d), 8 * d.length))); return result.toLowerCase() }; function M(d) { for (var _, m = \"0123456789ABCDEF\", f = \"\", r = 0; r < d.length; r++)_ = d.charCodeAt(r), f += m.charAt(_ >>> 4 & 15) + m.charAt(15 & _); return f } function X(d) { for (var _ = Array(d.length >> 2), m = 0; m < _.length; m++)_[m] = 0; for (m = 0; m < 8 * d.length; m += 8)_[m >> 5] |= (255 & d.charCodeAt(m / 8)) << m % 32; return _ } function V(d) { for (var _ = \"\", m = 0; m < 32 * d.length; m += 8)_ += String.fromCharCode(d[m >> 5] >>> m % 32 & 255); return _ } function Y(d, _) { d[_ >> 5] |= 128 << _ % 32, d[14 + (_ + 64 >>> 9 << 4)] = _; for (var m = 1732584193, f = -271733879, r = -1732584194, i = 271733878, n = 0; n < d.length; n += 16) { var h = m, t = f, g = r, e = i; f = md5_ii(f = md5_ii(f = md5_ii(f = md5_ii(f = md5_hh(f = md5_hh(f = md5_hh(f = md5_hh(f = md5_gg(f = md5_gg(f = md5_gg(f = md5_gg(f = md5_ff(f = md5_ff(f = md5_ff(f = md5_ff(f, r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 0], 7, -680876936), f, r, d[n + 1], 12, -389564586), m, f, d[n + 2], 17, 606105819), i, m, d[n + 3], 22, -1044525330), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 4], 7, -176418897), f, r, d[n + 5], 12, 1200080426), m, f, d[n + 6], 17, -1473231341), i, m, d[n + 7], 22, -45705983), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 8], 7, 1770035416), f, r, d[n + 9], 12, -1958414417), m, f, d[n + 10], 17, -42063), i, m, d[n + 11], 22, -1990404162), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 12], 7, 1804603682), f, r, d[n + 13], 12, -40341101), m, f, d[n + 14], 17, -1502002290), i, m, d[n + 15], 22, 1236535329), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 1], 5, -165796510), f, r, d[n + 6], 9, -1069501632), m, f, d[n + 11], 14, 643717713), i, m, d[n + 0], 20, -373897302), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 5], 5, -701558691), f, r, d[n + 10], 9, 38016083), m, f, d[n + 15], 14, -660478335), i, m, d[n + 4], 20, -405537848), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 9], 5, 568446438), f, r, d[n + 14], 9, -1019803690), m, f, d[n + 3], 14, -187363961), i, m, d[n + 8], 20, 1163531501), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 13], 5, -1444681467), f, r, d[n + 2], 9, -51403784), m, f, d[n + 7], 14, 1735328473), i, m, d[n + 12], 20, -1926607734), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 5], 4, -378558), f, r, d[n + 8], 11, -2022574463), m, f, d[n + 11], 16, 1839030562), i, m, d[n + 14], 23, -35309556), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 1], 4, -1530992060), f, r, d[n + 4], 11, 1272893353), m, f, d[n + 7], 16, -155497632), i, m, d[n + 10], 23, -1094730640), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 13], 4, 681279174), f, r, d[n + 0], 11, -358537222), m, f, d[n + 3], 16, -722521979), i, m, d[n + 6], 23, 76029189), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 9], 4, -640364487), f, r, d[n + 12], 11, -421815835), m, f, d[n + 15], 16, 530742520), i, m, d[n + 2], 23, -995338651), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 0], 6, -198630844), f, r, d[n + 7], 10, 1126891415), m, f, d[n + 14], 15, -1416354905), i, m, d[n + 5], 21, -57434055), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 12], 6, 1700485571), f, r, d[n + 3], 10, -1894986606), m, f, d[n + 10], 15, -1051523), i, m, d[n + 1], 21, -2054922799), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 8], 6, 1873313359), f, r, d[n + 15], 10, -30611744), m, f, d[n + 6], 15, -1560198380), i, m, d[n + 13], 21, 1309151649), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 4], 6, -145523070), f, r, d[n + 11], 10, -1120210379), m, f, d[n + 2], 15, 718787259), i, m, d[n + 9], 21, -343485551), m = safe_add(m, h), f = safe_add(f, t), r = safe_add(r, g), i = safe_add(i, e) } return Array(m, f, r, i) } function md5_cmn(d, _, m, f, r, i) { return safe_add(bit_rol(safe_add(safe_add(_, d), safe_add(f, i)), r), m) } function md5_ff(d, _, m, f, r, i, n) { return md5_cmn(_ & m | ~_ & f, d, _, r, i, n) } function md5_gg(d, _, m, f, r, i, n) { return md5_cmn(_ & f | m & ~f, d, _, r, i, n) } function md5_hh(d, _, m, f, r, i, n) { return md5_cmn(_ ^ m ^ f, d, _, r, i, n) } function md5_ii(d, _, m, f, r, i, n) { return md5_cmn(m ^ (_ | ~f), d, _, r, i, n) } function safe_add(d, _) { var m = (65535 & d) + (65535 & _); return (d >> 16) + (_ >> 16) + (m >> 16) << 16 | 65535 & m } function bit_rol(d, _) { return d << _ | d >>> 32 - _ }",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS', hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "066c453e-c04f-43e1-94f9-f09b8bfa05a6",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_2\",\n\t\"config\": {\"type\":\"Partner\",\"id\":{{PARTNER_ID_2}}},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "2cefc651-a8d8-4ac6-875a-28d26f68057d",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "d19d8315-d7b8-4ad9-94fc-ab254ef4b5c6",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_2\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "c6bc6fab-63d9-437a-9667-c1239ef3a45f",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "5cd683d0-4f79-43bc-904e-5622082db2e2",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create bucket",
											"item": [
												{
													"name": "Create a bucket cured",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "1ce84b67-61f3-497d-b186-73853d6cab46",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "00f4b754-162a-4128-8960-5f1c048ab92e",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"config_id\": {{PARTNER_SEG_CURED}},\n    \"description\": \"Cured account\",\n    \"name\": \"Cured\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket DoNotWork",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "9912b98b-db26-459d-9814-9901463141e5",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "87518186-5ec8-4d88-b8b1-9b7057dbf6cf",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"config_id\": {{PARTNER_SEG_DO_NOT_WORK}},\n    \"description\": \"Irremediable accounts'\",\n    \"name\": \"DoNotWork\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "8a0fbf89-96b0-4914-9f6d-6fa5106cbd65",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "9b1a6530-1fe0-4655-a3e5-dcc27ca5afa4",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_1}},\n\"description\": \"Test_Bucket_1\",\n\"name\": \"Test_Bucket_1\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get bucket 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "96027245-ca1b-4b96-bccb-9f95654d1a22",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "39ff0c82-ea08-4542-a6a1-5ca1a28e7a0c",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"BUCKET_1\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "1bf10864-9cf5-4a90-9b42-e8cac6831c35",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "9f809051-1e45-47c9-83d6-fa9ca74c1b3c",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_2}},\n\"description\": \"Test_Bucket_2\",\n\"name\": \"Test_Bucket_2\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get bucket 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "521244ed-24fb-4cf3-94f9-e3fd2aa75d17",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "8069eaad-6bcf-48b7-b1fa-0277c57134a3",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"BUCKET_2\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket_segmentation with dpdSegments",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "6ebdbb10-c0ba-4222-b66a-facefc22298e",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "1db30385-fdd5-49e1-b46a-554e991eb060",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config\": {\"type\":\"DpdSegment\",\"cases\":[{\"condition\":{\"from\":0,\"to\":22},\"output\":{\"type\":\"Bucket\",\"id\":{{BUCKET_1}}}},{\"condition\":{\"from\":22},\"output\":{\"type\":\"Bucket\",\"id\":{{BUCKET_2}}}}]},\n\"description\": \"Create a bucket segmentation\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"bucket_segmentation"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "aaf2c6ed-539e-4c70-b286-bdf0940e26f7",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "375ce11a-80bd-4e1a-97c3-9030096b946d",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Trigger payment_plan - updates plans",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67c9bdd2-0967-48af-b920-0fdb7f6a256a",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Payment plan processing started\", function () {",
													"    pm.response.to.have.body(\"{\\\"message\\\":\\\"Payment plan processing started\\\"}\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Authorization",
												"value": "{{AUTHORIZATION_TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan/cron",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"payment_plan",
												"cron"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Trigger account processing - bucket segmentation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c8054192-378b-4a73-a0e3-d5324232fb16",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify response returned is New Process started\", function () {",
													"    pm.response.to.have.body(\"New process started\\n\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Authorization",
												"value": "{{AUTHORIZATION_TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/account_processing/run",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"account_processing",
												"run"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing] - should be DONE",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "89137bc2-87be-47ae-bd5d-6131ce4e8c97",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.test(\"Verify account 2 was assigned to partner 2\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage).to.eql(\"done\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c91acf2c-3531-4de2-9488-c19ac27d3fb2",
												"exec": [
													"setTimeout(function(){}, 15000);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing/latest",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing",
												"latest"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Test that account 1 was assigned to partner 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "680a041c-5084-4a39-8554-d96b561fe9ad",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.test(\"Verify account 1 was assigned to partner 1\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.personId) ==  environment.PERSON_ID_1;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID_1}}",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection",
												"person_id",
												"{{PERSON_ID_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Test that account 2 was assigned to partner 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "45b0531f-d9a3-470d-a708-91122534561c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.test(\"Verify account 2 was assigned to partner 2\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.personId) == environment.PERSON_ID_2;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID_2}}",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection",
												"person_id",
												"{{PERSON_ID_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have segmentation_handover",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2f915832-040d-4860-85ee-cbf6320e3d76",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is segmentation_handover\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage).to.eql(\"segmentation_handover\");",
													"    pm.expect(response.rowCount).to.eql(2);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/1",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have segmentation_takeback",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ae28f951-5b44-4f3c-b778-1e8b203a1d2c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is segmentation_takeback\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage).to.eql(\"segmentation_takeback\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/2",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"2"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have update_loan_collections",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4b56152a-53cd-4f30-9abe-9d66cab22c0a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is segmentation_handover\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage) == \"update_loan_collections\";",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/3",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"3"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have generate_handover",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0de81314-ba47-496b-a4a0-62c07e98512a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is segmentation_handover\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage) == \"generate_handover\";",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/4",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"4"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have generate_takeback",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7e5f458a-01a8-4f57-afa2-5a978e0ac52a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is generate_takeback\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response).stage = \"generate_takeback\";",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/5",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"5"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have send_emails",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "30d3c12c-e6bd-4917-93a1-36c31d651bce",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is send_emails\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage) == \"send_emails\";",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/6",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"6"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "percent_segment",
							"item": [
								{
									"name": "clear required data",
									"item": [
										{
											"name": "[Util] - Truncate data on all partner_segmentation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "310a39be-1bca-407f-a285-5a996325d571",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"partner_segmentation_config"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all delivery_channel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1157329c-3465-4864-a092-46c61e6457e6",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"delivery_channel"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e9bd261b-05c0-4179-a512-0ce30252bbf5",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection_history",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "778b50b7-cfa8-4985-8ec6-607e3128fbb1",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection_history"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all partner",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e1f7f924-f35c-4d71-b525-17514f69a8d4",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"collection_partner"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all account_processing_log",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ac85b04b-9edd-4494-a9c5-2d5e4475bb73",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing_log"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all account_processing",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e9709731-2641-4c53-9789-a582f6941ebc",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket_segmetation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "496ec645-0c2a-436a-8cc0-ab9cbe8a3a23",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket_segmentation_config"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "105789f8-c41c-4b94-9a8c-9c90597ec90e",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all generated_file",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e6f2bf76-6eaf-49ab-ac39-a26fc8c4252e",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/generated_file",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"generated_file"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate all tables [Snowflake] Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5a62d558-3dca-472f-a7d2-de431c702893",
														"exec": [
															" pm.test(\"Status code is 200\", function () {",
															"     pm.response.to.have.status(200);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/truncate_all",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"snowflake",
														"truncate_all"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "setup",
									"item": [
										{
											"name": "upload account 1 to snowflake",
											"item": [
												{
													"name": "Admin login",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "146a3e6b-d351-4f34-af7b-540b90819e24",
																"exec": [
																	"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
																	"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
																	"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "82b7ceb1-91ec-4291-a6d2-12063c4b1e7a",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "username",
																	"value": "{{ADMIN_LOGIN_USERNAME}}",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "{{ADMIN_LOGIN_PASSWORD}}",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"site",
																"authQA"
															]
														},
														"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
													},
													"response": []
												},
												{
													"name": "[AS] Settings for Admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "cd029252-55c9-4265-a4c5-2aae84b1ce46",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"const acceptanceServiceRequest = {",
																	"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
																	"  method: 'GET',",
																	"  header: 'Content-Type:application/json'",
																	"};",
																	"",
																	"//Acceptance service will GET response in JSON format from loans.admin_config table",
																	"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
																	"    console.log(response.json());",
																	"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
																	"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
																	"    });",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "approveNewMembersUsing",
																	"value": "manual",
																	"type": "text"
																},
																{
																	"key": "approveRepeatMembers",
																	"value": "manual",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "blacklistFraudulentCustomersUsing",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "showReferralsButtonOnHomescreenForCustomersOn",
																	"value": "TZ_TIGO, TZ_VODACOM",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "performKYCCheckToNewBorrowers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "coinsOAuthFlag",
																	"value": "mno_connected, phone_exists",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestSMSTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestEmailTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "telerivetTestPhoneID",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "cRBLowBalanceThreshold",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "organicAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "paidAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "hoverExperimentUsers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendFrom",
																	"value": "employee",
																	"type": "text"
																},
																{
																	"key": "simulateB2CSuccessResponse",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "b2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseMessage",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "adminIdleSignoutTimeout",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "enablePaymentAccountValidation",
																	"value": "yes",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "autoGenerateReceipt",
																	"value": "no",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "maximumNumberOfFetchReceiptAttempts",
																	"value": "3",
																	"type": "text",
																	"disabled": true
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"adminSettings"
															]
														},
														"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
													},
													"response": []
												},
												{
													"name": "[AS] Create User With Applied loan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "de5cb89f-90ed-45bc-8471-3a631cef70a8",
																"exec": [
																	"setTimeout(function () { }, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\") + (Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "569ac241-4462-4237-91bc-de64fa292599",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PERSON_ID_1\", pm.response.json().personId);",
																	"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"user",
																"creation",
																"userWithAppliedLoan"
															]
														}
													},
													"response": []
												},
												{
													"name": "[AS] Approve Loan via Admin",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "737b9c2f-e1bb-419f-be3f-8c35a68d731a",
																"exec": [
																	"setTimeout(function () { }, [10000]);",
																	"if (pm.environment.get(\"COUNTRY\") == \"KE\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 2);",
																	"}",
																	"else if (pm.environment.get(\"COUNTRY\") == \"PH\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 321);",
																	"}",
																	"",
																	"else if (pm.environment.get(\"COUNTRY\") == \"MX\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 52);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "6dc63ff4-4d20-4679-b9c3-a264451f8322",
																"exec": [
																	"pm.test(\"Status code is 200 found\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});   ",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "decision",
																	"value": "1",
																	"type": "text"
																},
																{
																	"key": "loan_limit",
																	"value": "50000",
																	"type": "text"
																},
																{
																	"key": "notes",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "loan_term_set",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "eligible_loan_type_ids[]",
																	"value": "{{LOAN_TYPE}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submit",
																	"type": "text"
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID_1}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"approveReject",
																"id",
																"{{PERSON_ID_1}}"
															]
														},
														"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
													},
													"response": []
												},
												{
													"name": "[AS] Accept loan offer on app",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "77fd9516-3bf5-401a-acde-aaf49a2d3395",
																"exec": [
																	"setTimeout(function(){}, [5000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "37afd295-0a9f-479f-b527-10af8a33e7be",
																"exec": [
																	"pm.test(\"Status code is 200\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"loan",
																"user_accept_offer"
															]
														},
														"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
													},
													"response": []
												},
												{
													"name": "Mark payment as sent from admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "78e602d4-776f-4b50-bc52-03f785ed6d66",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "16d12971-ae6e-4957-8bb4-2dbffa6270ea",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
																	"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
																	"",
																	"//Set the correct rails provider that match the country",
																	"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
																	"   ",
																	"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
																	"  ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
																	"   ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
																	"   ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "transaction_amount",
																	"value": "3000",
																	"type": "text"
																},
																{
																	"key": "confirmation_number",
																	"value": "{{CONFIRMATION_NUMBER}}",
																	"type": "text"
																},
																{
																	"key": "transaction_date",
																	"value": "{{TIME_NOW_SEND_PAYMENT}}",
																	"description": "10/11/2018, 11:25 AM",
																	"type": "text"
																},
																{
																	"key": "mno_provider_name",
																	"value": "{{MNO-PROVIDER}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID_1}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"addDisbursement",
																"id",
																"{{PERSON_ID_1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Backdate active Loan",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "97f01eb8-39bd-464d-a0ed-0454dacf8f86",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "a7a85a52-32d3-4967-ba31-70daf49bbd51",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"var backDatedDay = moment().subtract(22, 'day').format(\"YYYY-MM-DD\");",
																	"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "disbursement_date",
																	"value": "{{DATE_TO_BACKDATE_TO}}",
																	"description": "{{DATE_TO_BACKDATE_TO}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID_1}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"changeDisbursement",
																"id",
																"{{PERSON_ID_1}}",
																"loan_application_id",
																"{{LOAN_APPLICATION_ID}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Util] - Setup user data by personId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "e06dab3e-8932-4955-93e7-b87529d869d4",
																"exec": [
																	" pm.test(\"Status code is 200\", function () {",
																	"     pm.response.to.have.status(200);",
																	" });"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "a2f0a0cc-8a75-44bf-a31d-024aac454788",
																"exec": [
																	"setTimeout(function(){}, [30000]);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID_1}}",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"loancollections",
																"uploadUserDataToSnowflake",
																"personId",
																"{{PERSON_ID_1}}"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "upload account 2 to snowflake",
											"item": [
												{
													"name": "Admin login",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "93103e39-534c-4a22-a3a3-a8409ba910ed",
																"exec": [
																	"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
																	"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
																	"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "b64f2714-228b-49d1-9ba4-a9cd0a1707f8",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "username",
																	"value": "{{ADMIN_LOGIN_USERNAME}}",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "{{ADMIN_LOGIN_PASSWORD}}",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"site",
																"authQA"
															]
														},
														"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
													},
													"response": []
												},
												{
													"name": "[AS] Settings for Admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "00fa27cc-ac5b-4e9f-b249-45fbd52f880a",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"const acceptanceServiceRequest = {",
																	"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
																	"  method: 'GET',",
																	"  header: 'Content-Type:application/json'",
																	"};",
																	"",
																	"//Acceptance service will GET response in JSON format from loans.admin_config table",
																	"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
																	"    console.log(response.json());",
																	"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
																	"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
																	"    });",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "approveNewMembersUsing",
																	"value": "manual",
																	"type": "text"
																},
																{
																	"key": "approveRepeatMembers",
																	"value": "manual",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "blacklistFraudulentCustomersUsing",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "showReferralsButtonOnHomescreenForCustomersOn",
																	"value": "TZ_TIGO, TZ_VODACOM",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "performKYCCheckToNewBorrowers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "coinsOAuthFlag",
																	"value": "mno_connected, phone_exists",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestSMSTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestEmailTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "telerivetTestPhoneID",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "cRBLowBalanceThreshold",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "organicAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "paidAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "hoverExperimentUsers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendFrom",
																	"value": "employee",
																	"type": "text"
																},
																{
																	"key": "simulateB2CSuccessResponse",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "b2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseMessage",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "adminIdleSignoutTimeout",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "enablePaymentAccountValidation",
																	"value": "yes",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "autoGenerateReceipt",
																	"value": "no",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "maximumNumberOfFetchReceiptAttempts",
																	"value": "3",
																	"type": "text",
																	"disabled": true
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"adminSettings"
															]
														},
														"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
													},
													"response": []
												},
												{
													"name": "[AS] Create User With Applied loan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "490b8cbe-8147-4c1b-b804-931e718206cf",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "d4e97f68-0e3c-429a-aabd-13c07cdba8e2",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PERSON_ID_2\", pm.response.json().personId);",
																	"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"user",
																"creation",
																"userWithAppliedLoan"
															]
														}
													},
													"response": []
												},
												{
													"name": "[AS] Approve Loan via Admin",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "bbb6d1cf-e8e3-4938-8a1b-7f15eb0e1160",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 2);",
																	"}",
																	"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 321);",
																	" }",
																	"",
																	"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 52);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "8452ffea-6870-4fd2-aabf-cca5b68fad60",
																"exec": [
																	"pm.test(\"Status code is 200 found\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});   ",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "decision",
																	"value": "1",
																	"type": "text"
																},
																{
																	"key": "loan_limit",
																	"value": "50000",
																	"type": "text"
																},
																{
																	"key": "notes",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "loan_term_set",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "eligible_loan_type_ids[]",
																	"value": "{{LOAN_TYPE}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submit",
																	"type": "text"
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID_2}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"approveReject",
																"id",
																"{{PERSON_ID_2}}"
															]
														},
														"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
													},
													"response": []
												},
												{
													"name": "[AS] Accept loan offer on app",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "673cc879-5ba7-42b2-b1d0-26c4810aa98f",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "30167dca-f962-4d73-aecb-ffecb5937a6c",
																"exec": [
																	"pm.test(\"Status code is 200\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"loan",
																"user_accept_offer"
															]
														},
														"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
													},
													"response": []
												},
												{
													"name": "Mark payment as sent from admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2665f30a-33c0-4a6e-9126-4d2f387e4cae",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "104654c7-d147-44ba-b6de-69b0f33527a3",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
																	"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
																	"",
																	"//Set the correct rails provider that match the country",
																	"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
																	"   ",
																	"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
																	"  ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
																	"   ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
																	"   ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "transaction_amount",
																	"value": "3000",
																	"type": "text"
																},
																{
																	"key": "confirmation_number",
																	"value": "{{CONFIRMATION_NUMBER}}",
																	"type": "text"
																},
																{
																	"key": "transaction_date",
																	"value": "{{TIME_NOW_SEND_PAYMENT}}",
																	"description": "10/11/2018, 11:25 AM",
																	"type": "text"
																},
																{
																	"key": "mno_provider_name",
																	"value": "{{MNO-PROVIDER}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID_2}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"addDisbursement",
																"id",
																"{{PERSON_ID_2}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Backdate active Loan",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "adf520fc-7c47-4258-bbc5-59276ec34131",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "aada246d-04a2-41b8-b2ba-f73e57f5cd9c",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"var backDatedDay = moment().subtract(22, 'day').format(\"YYYY-MM-DD\");",
																	"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "disbursement_date",
																	"value": "{{DATE_TO_BACKDATE_TO}}",
																	"description": "{{DATE_TO_BACKDATE_TO}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID_2}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"changeDisbursement",
																"id",
																"{{PERSON_ID_2}}",
																"loan_application_id",
																"{{LOAN_APPLICATION_ID}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Util] - Setup user data by personId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "abe88b80-5018-4381-a05f-b1f30bf948fb",
																"exec": [
																	" pm.test(\"Status code is 200\", function () {",
																	"     pm.response.to.have.status(200);",
																	" });"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "b6aa7d58-0000-4093-b606-e70235ca88e7",
																"exec": [
																	"setTimeout(function(){}, [30000]);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID_2}}",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"loancollections",
																"uploadUserDataToSnowflake",
																"personId",
																"{{PERSON_ID_2}}"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create 2 partners with 0 entrance and exit amounts",
											"item": [
												{
													"name": "[Helper] - Create a collection partner 1",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "65a71a95-d7ed-4c22-a6a2-41ece9288337",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_1\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_1\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config partner 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "85ba401b-664b-4240-9f88-4a41270c123e",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "3c092f43-3701-4a0d-9041-adc434164b4f",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] - Create a collection partner 2",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2df640ae-3433-441a-a475-a6a0284fa450",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_2\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_2\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner 2\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config - partner 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "f3e3ad17-31f5-439e-8fa4-0565f0a53a93",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "ba5c2182-1fee-4a1e-abf0-c2a6be5def7c",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_2}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create partner_segmentation_config",
											"item": [
												{
													"name": "Create a partner_segmentation with partner 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "31504b2c-9e70-499c-b09c-5ae2f7058709",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "b240cebf-534c-476d-a236-9c3c053e0724",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_1\",\n\t\"config\": {\"type\":\"Partner\",\"id\":{{PARTNER_ID_1}}},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "f14ab16d-7d3e-4136-8264-cf8063e3556b",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "5d239fa3-4111-46b5-8488-b6d1cc9a820f",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_1\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation with partner 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "ae465529-14c2-4a37-8b23-4498c335be8e",
																"exec": [
																	"setTimeout(function () { }, [5000]);",
																	"",
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix();",
																	"",
																	"var MD5 = function (d) { result = M(V(Y(X(d), 8 * d.length))); return result.toLowerCase() }; function M(d) { for (var _, m = \"0123456789ABCDEF\", f = \"\", r = 0; r < d.length; r++)_ = d.charCodeAt(r), f += m.charAt(_ >>> 4 & 15) + m.charAt(15 & _); return f } function X(d) { for (var _ = Array(d.length >> 2), m = 0; m < _.length; m++)_[m] = 0; for (m = 0; m < 8 * d.length; m += 8)_[m >> 5] |= (255 & d.charCodeAt(m / 8)) << m % 32; return _ } function V(d) { for (var _ = \"\", m = 0; m < 32 * d.length; m += 8)_ += String.fromCharCode(d[m >> 5] >>> m % 32 & 255); return _ } function Y(d, _) { d[_ >> 5] |= 128 << _ % 32, d[14 + (_ + 64 >>> 9 << 4)] = _; for (var m = 1732584193, f = -271733879, r = -1732584194, i = 271733878, n = 0; n < d.length; n += 16) { var h = m, t = f, g = r, e = i; f = md5_ii(f = md5_ii(f = md5_ii(f = md5_ii(f = md5_hh(f = md5_hh(f = md5_hh(f = md5_hh(f = md5_gg(f = md5_gg(f = md5_gg(f = md5_gg(f = md5_ff(f = md5_ff(f = md5_ff(f = md5_ff(f, r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 0], 7, -680876936), f, r, d[n + 1], 12, -389564586), m, f, d[n + 2], 17, 606105819), i, m, d[n + 3], 22, -1044525330), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 4], 7, -176418897), f, r, d[n + 5], 12, 1200080426), m, f, d[n + 6], 17, -1473231341), i, m, d[n + 7], 22, -45705983), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 8], 7, 1770035416), f, r, d[n + 9], 12, -1958414417), m, f, d[n + 10], 17, -42063), i, m, d[n + 11], 22, -1990404162), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 12], 7, 1804603682), f, r, d[n + 13], 12, -40341101), m, f, d[n + 14], 17, -1502002290), i, m, d[n + 15], 22, 1236535329), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 1], 5, -165796510), f, r, d[n + 6], 9, -1069501632), m, f, d[n + 11], 14, 643717713), i, m, d[n + 0], 20, -373897302), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 5], 5, -701558691), f, r, d[n + 10], 9, 38016083), m, f, d[n + 15], 14, -660478335), i, m, d[n + 4], 20, -405537848), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 9], 5, 568446438), f, r, d[n + 14], 9, -1019803690), m, f, d[n + 3], 14, -187363961), i, m, d[n + 8], 20, 1163531501), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 13], 5, -1444681467), f, r, d[n + 2], 9, -51403784), m, f, d[n + 7], 14, 1735328473), i, m, d[n + 12], 20, -1926607734), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 5], 4, -378558), f, r, d[n + 8], 11, -2022574463), m, f, d[n + 11], 16, 1839030562), i, m, d[n + 14], 23, -35309556), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 1], 4, -1530992060), f, r, d[n + 4], 11, 1272893353), m, f, d[n + 7], 16, -155497632), i, m, d[n + 10], 23, -1094730640), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 13], 4, 681279174), f, r, d[n + 0], 11, -358537222), m, f, d[n + 3], 16, -722521979), i, m, d[n + 6], 23, 76029189), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 9], 4, -640364487), f, r, d[n + 12], 11, -421815835), m, f, d[n + 15], 16, 530742520), i, m, d[n + 2], 23, -995338651), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 0], 6, -198630844), f, r, d[n + 7], 10, 1126891415), m, f, d[n + 14], 15, -1416354905), i, m, d[n + 5], 21, -57434055), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 12], 6, 1700485571), f, r, d[n + 3], 10, -1894986606), m, f, d[n + 10], 15, -1051523), i, m, d[n + 1], 21, -2054922799), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 8], 6, 1873313359), f, r, d[n + 15], 10, -30611744), m, f, d[n + 6], 15, -1560198380), i, m, d[n + 13], 21, 1309151649), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 4], 6, -145523070), f, r, d[n + 11], 10, -1120210379), m, f, d[n + 2], 15, 718787259), i, m, d[n + 9], 21, -343485551), m = safe_add(m, h), f = safe_add(f, t), r = safe_add(r, g), i = safe_add(i, e) } return Array(m, f, r, i) } function md5_cmn(d, _, m, f, r, i) { return safe_add(bit_rol(safe_add(safe_add(_, d), safe_add(f, i)), r), m) } function md5_ff(d, _, m, f, r, i, n) { return md5_cmn(_ & m | ~_ & f, d, _, r, i, n) } function md5_gg(d, _, m, f, r, i, n) { return md5_cmn(_ & f | m & ~f, d, _, r, i, n) } function md5_hh(d, _, m, f, r, i, n) { return md5_cmn(_ ^ m ^ f, d, _, r, i, n) } function md5_ii(d, _, m, f, r, i, n) { return md5_cmn(m ^ (_ | ~f), d, _, r, i, n) } function safe_add(d, _) { var m = (65535 & d) + (65535 & _); return (d >> 16) + (_ >> 16) + (m >> 16) << 16 | 65535 & m } function bit_rol(d, _) { return d << _ | d >>> 32 - _ }",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS', hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "d466ecc1-ae85-4216-9752-ebd15d5eed71",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_2\",\n\t\"config\": {\"type\":\"Partner\",\"id\":{{PARTNER_ID_2}}},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "5e1ea9ea-6677-4424-b89b-df69d52310b4",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "41ff2035-0d3d-4b2c-b1a5-810988e1e3f2",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_2\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "b61528cb-f5fd-4835-b78f-f25530771164",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ac93d00a-1a5f-4240-9a97-eb3947ba383f",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create bucket",
											"item": [
												{
													"name": "Create a bucket cured",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "fa45b207-3a3a-4522-9870-762ed0599f2b",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "6867e07e-cb00-4801-a3d0-6516f502f58d",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"description\": \"Cured account\",\n\"name\": \"Cured\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket DoNotWork",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "21bc298c-8024-4e87-a58d-1c22b900552d",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "491b993b-356e-4187-a89a-fb028fb43a6c",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"description\": \"Irremediable accounts'\",\n\"name\": \"DoNotWork\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "f5eaa06f-e401-48e4-a8f0-e2c0d860125d",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "9a2c1aa1-e806-4cc6-bec7-3b3bd8207fbe",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_1}},\n\"description\": \"Test_Bucket_1\",\n\"name\": \"Test_Bucket_1\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get bucket 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "e7b7932b-e8d6-4a8a-9563-7f381ee7d5a4",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "2a3e6a0b-3ae2-44d7-aa36-69f977bc84d8",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"BUCKET_1\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "54a329f1-49b5-4f77-98d2-f08ae94179cc",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "e6cf11ee-41fe-49ce-8d16-3e24cc0045da",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_2}},\n\"description\": \"Test_Bucket_2\",\n\"name\": \"Test_Bucket_2\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get bucket 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "6764d735-01bf-4805-883e-b52cdfdedb3e",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "2f34b1c3-81ac-419f-82db-76a1d5f40591",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"BUCKET_2\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket_segmentation with bucket_1 and bucket_2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "5c97e9d8-c5d7-4bf1-b7f1-413604e1cadf",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "9d47921b-1a4d-4075-a970-272ef1a23794",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config\": {\"type\":\"PercentSegment\",\"cases\":[{\"condition\":50,\"output\":{\"type\":\"Bucket\",\"id\":{{BUCKET_1}}}},{\"condition\":50,\"output\":{\"type\":\"Bucket\",\"id\":{{BUCKET_2}}}}]},\n\"description\": \"Create a bucket segmentation with type bucket\"\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"bucket_segmentation"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Trigger payment_plan - updates plans",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "970e3b30-51a2-4a42-90f7-2ef18de73b9d",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Payment plan processing started\", function () {",
													"    pm.response.to.have.body(\"{\\\"message\\\":\\\"Payment plan processing started\\\"}\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Authorization",
												"value": "{{AUTHORIZATION_TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan/cron",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"payment_plan",
												"cron"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Trigger account processing - percent segmentation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0a79e526-8aae-4db5-a0a8-bbaf278c5993",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify response returned is New Process started\", function () {",
													"    pm.response.to.have.body(\"New process started\\n\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Authorization",
												"value": "{{AUTHORIZATION_TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/account_processing/run",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"account_processing",
												"run"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing] - should be DONE",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "54723f9e-05b5-48ff-84ad-4ce029a2ce33",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.test(\"Verify account_processing wa DONE\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage).to.eql(\"done\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "87b8b7ae-8ff1-478f-813c-a298ae398129",
												"exec": [
													"setTimeout(function(){}, 15000);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing/latest",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing",
												"latest"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Test that an account was assigned to partner 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc30667c-3520-49ae-ab2d-e442f522bbab",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.test(\"Verify one of the accounts was assigned to partner 1\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.personId).to.not.be.null;;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID_1}}",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection",
												"person_id",
												"{{PERSON_ID_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Test that an account was assigned to partner 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c854899f-26a1-4d58-a9ba-b1f85bfb0a89",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.test(\"Verify one of the accounts was assigned to partner 2\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.personId).to.not.be.null;;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID_2}}",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection",
												"person_id",
												"{{PERSON_ID_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have segmentation_handover",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6d554b09-f864-426a-9a32-8ba4cf9ce83a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is segmentation_handover\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage).to.eql(\"segmentation_handover\");",
													"    //pm.expect(response.rowCount).to.eql(2);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/1",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have segmentation_takeback",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "166db57e-5107-4608-8d23-44e4187f6bd2",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is segmentation_takeback\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage).to.eql(\"segmentation_takeback\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/2",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"2"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have update_loan_collections",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d1ab27b8-4750-4874-aacf-d1af9639caee",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is segmentation_handover\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage) == \"update_loan_collections\";",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/3",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"3"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have generate_handover",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d14d01c9-8f4e-47f9-b61c-fdc73df71f82",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is segmentation_handover\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage) == \"generate_handover\";",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/4",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"4"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have generate_takeback",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "32320fed-4e74-4563-bff8-2475078b1728",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is generate_takeback\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response).stage = \"generate_takeback\";",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/5",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"5"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have send_emails",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba280469-70aa-4673-8412-8e1c98ca73fe",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is send_emails\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage) == \"send_emails\";",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/6",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"6"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have done",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8dbed7d5-5dfa-4ab4-9df4-a7f5cfe0bdf5",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is send_emails\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage) == \"send_emails\";",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/6",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"6"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing] - should be DONE",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0f561447-2ed4-46ed-838b-6d59678c8f8d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.test(\"Verify account 2 was assigned to partner 2\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage).to.eql(\"done\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing/latest",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing",
												"latest"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "bucket_segment",
							"item": [
								{
									"name": "clear required data",
									"item": [
										{
											"name": "[Util] - Truncate data on all partner_segmentation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "99157486-0e89-407c-af1d-dc7602098423",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"partner_segmentation_config"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all delivery_channel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "729c1fb6-6cb5-4a29-8da9-59f2ea800919",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"delivery_channel"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "01d07313-5ef1-4943-88f4-1c07fcfbf889",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection_history",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a88c6432-a7c3-4916-a157-9fee3a63244e",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"loan_collection_history"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all partner",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "80efd328-cb71-4b39-94ba-da6401a9fb8e",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"collection_partner"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all account_processing_log",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ee5d04ea-9690-409b-bb40-a687dff7deb9",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing_log"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all account_processing",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9a97b64e-3fa2-4195-be60-f156ad9c3a1b",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket_segmetation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4cd218bf-7dcc-46a6-a1b2-f2b246ed6e76",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket_segmentation_config"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "45cfd6c2-3f0c-4ae5-ae4b-d4ec7081dfd0",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all generated_file",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c7967593-8585-413d-9998-fdec7d70d4da",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/generated_file",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"generated_file"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate all tables [Snowflake] Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ce31bab9-e8f8-4762-869c-eba8f7b505b7",
														"exec": [
															" pm.test(\"Status code is 200\", function () {",
															"     pm.response.to.have.status(200);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/truncate_all",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"snowflake",
														"truncate_all"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "setup",
									"item": [
										{
											"name": "upload account 1 to snowflake",
											"item": [
												{
													"name": "Admin login",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "ea7f5734-a06a-42eb-82f8-2233fe02bc23",
																"exec": [
																	"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
																	"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
																	"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "5ae377de-e044-4ef8-a5e0-fd3f4b67ad7d",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "username",
																	"value": "{{ADMIN_LOGIN_USERNAME}}",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "{{ADMIN_LOGIN_PASSWORD}}",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"site",
																"authQA"
															]
														},
														"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
													},
													"response": []
												},
												{
													"name": "[AS] Settings for Admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "4bf38f52-6107-441f-8d7d-e596e046d86e",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"const acceptanceServiceRequest = {",
																	"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
																	"  method: 'GET',",
																	"  header: 'Content-Type:application/json'",
																	"};",
																	"",
																	"//Acceptance service will GET response in JSON format from loans.admin_config table",
																	"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
																	"    console.log(response.json());",
																	"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
																	"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
																	"    });",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "approveNewMembersUsing",
																	"value": "manual",
																	"type": "text"
																},
																{
																	"key": "approveRepeatMembers",
																	"value": "manual",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "blacklistFraudulentCustomersUsing",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "showReferralsButtonOnHomescreenForCustomersOn",
																	"value": "TZ_TIGO, TZ_VODACOM",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "performKYCCheckToNewBorrowers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "coinsOAuthFlag",
																	"value": "mno_connected, phone_exists",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestSMSTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestEmailTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "telerivetTestPhoneID",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "cRBLowBalanceThreshold",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "organicAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "paidAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "hoverExperimentUsers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendFrom",
																	"value": "employee",
																	"type": "text"
																},
																{
																	"key": "simulateB2CSuccessResponse",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "b2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseMessage",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "adminIdleSignoutTimeout",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "enablePaymentAccountValidation",
																	"value": "yes",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "autoGenerateReceipt",
																	"value": "no",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "maximumNumberOfFetchReceiptAttempts",
																	"value": "3",
																	"type": "text",
																	"disabled": true
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"adminSettings"
															]
														},
														"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
													},
													"response": []
												},
												{
													"name": "[AS] Create User With Applied loan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "e9bbf272-0ac7-483d-af7c-3fe318bde0e4",
																"exec": [
																	"setTimeout(function () { }, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\") + (Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "460a6fce-c7a3-41c0-a365-dd9327175bc4",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PERSON_ID_1\", pm.response.json().personId);",
																	"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"user",
																"creation",
																"userWithAppliedLoan"
															]
														}
													},
													"response": []
												},
												{
													"name": "[AS] Approve Loan via Admin",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "4f00b671-a195-4985-aea0-7cd4052bb0a7",
																"exec": [
																	"setTimeout(function () { }, [10000]);",
																	"if (pm.environment.get(\"COUNTRY\") == \"KE\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 2);",
																	"}",
																	"else if (pm.environment.get(\"COUNTRY\") == \"PH\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 321);",
																	"}",
																	"",
																	"else if (pm.environment.get(\"COUNTRY\") == \"MX\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 52);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "df60b942-4a12-42a2-b68a-2d964cec73da",
																"exec": [
																	"pm.test(\"Status code is 200 found\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});   ",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "decision",
																	"value": "1",
																	"type": "text"
																},
																{
																	"key": "loan_limit",
																	"value": "50000",
																	"type": "text"
																},
																{
																	"key": "notes",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "loan_term_set",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "eligible_loan_type_ids[]",
																	"value": "{{LOAN_TYPE}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submit",
																	"type": "text"
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID_1}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"approveReject",
																"id",
																"{{PERSON_ID_1}}"
															]
														},
														"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
													},
													"response": []
												},
												{
													"name": "[AS] Accept loan offer on app",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "d185ccff-4f50-42d8-8fce-b09b35537942",
																"exec": [
																	"setTimeout(function(){}, [5000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "3e418409-ba09-4b35-ae4a-da68b104042a",
																"exec": [
																	"pm.test(\"Status code is 200\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"loan",
																"user_accept_offer"
															]
														},
														"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
													},
													"response": []
												},
												{
													"name": "Mark payment as sent from admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "e9ddb2e0-2686-421a-9138-d6ae93789563",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "befaa942-5a4e-4dad-a3cb-7988c2c65aac",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
																	"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
																	"",
																	"//Set the correct rails provider that match the country",
																	"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
																	"   ",
																	"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
																	"  ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
																	"   ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
																	"   ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "transaction_amount",
																	"value": "3000",
																	"type": "text"
																},
																{
																	"key": "confirmation_number",
																	"value": "{{CONFIRMATION_NUMBER}}",
																	"type": "text"
																},
																{
																	"key": "transaction_date",
																	"value": "{{TIME_NOW_SEND_PAYMENT}}",
																	"description": "10/11/2018, 11:25 AM",
																	"type": "text"
																},
																{
																	"key": "mno_provider_name",
																	"value": "{{MNO-PROVIDER}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID_1}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"addDisbursement",
																"id",
																"{{PERSON_ID_1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Backdate active Loan",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "499ada46-7e8e-49c7-82cd-0b41e5dc33a4",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "74f40f65-ab4c-4905-8c1f-1291171550e0",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"var backDatedDay = moment().subtract(22, 'day').format(\"YYYY-MM-DD\");",
																	"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "disbursement_date",
																	"value": "{{DATE_TO_BACKDATE_TO}}",
																	"description": "{{DATE_TO_BACKDATE_TO}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID_1}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"changeDisbursement",
																"id",
																"{{PERSON_ID_1}}",
																"loan_application_id",
																"{{LOAN_APPLICATION_ID}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Util] - Setup user data by personId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "b49788d0-a8d4-482a-a1a6-3965d5c1466f",
																"exec": [
																	" pm.test(\"Status code is 200\", function () {",
																	"     pm.response.to.have.status(200);",
																	" });"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "18a2b78d-55a9-4bd2-b137-6be20eec3a54",
																"exec": [
																	"setTimeout(function(){}, [30000]);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID_1}}",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"loancollections",
																"uploadUserDataToSnowflake",
																"personId",
																"{{PERSON_ID_1}}"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "upload account 2 to snowflake",
											"item": [
												{
													"name": "Admin login",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "e4e2c145-8668-43cf-866d-adb51d0a7d4d",
																"exec": [
																	"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
																	"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
																	"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "863c7095-c1a0-4652-a255-d8af11f7d69b",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "username",
																	"value": "{{ADMIN_LOGIN_USERNAME}}",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "{{ADMIN_LOGIN_PASSWORD}}",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"site",
																"authQA"
															]
														},
														"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
													},
													"response": []
												},
												{
													"name": "[AS] Settings for Admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "8b468a63-0da1-4eeb-ae93-08bb8f332a27",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"const acceptanceServiceRequest = {",
																	"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
																	"  method: 'GET',",
																	"  header: 'Content-Type:application/json'",
																	"};",
																	"",
																	"//Acceptance service will GET response in JSON format from loans.admin_config table",
																	"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
																	"    console.log(response.json());",
																	"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
																	"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
																	"    });",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "approveNewMembersUsing",
																	"value": "manual",
																	"type": "text"
																},
																{
																	"key": "approveRepeatMembers",
																	"value": "manual",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "blacklistFraudulentCustomersUsing",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "showReferralsButtonOnHomescreenForCustomersOn",
																	"value": "TZ_TIGO, TZ_VODACOM",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "performKYCCheckToNewBorrowers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "coinsOAuthFlag",
																	"value": "mno_connected, phone_exists",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestSMSTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestEmailTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "telerivetTestPhoneID",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "cRBLowBalanceThreshold",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "organicAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "paidAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "hoverExperimentUsers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendFrom",
																	"value": "employee",
																	"type": "text"
																},
																{
																	"key": "simulateB2CSuccessResponse",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "b2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseMessage",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "adminIdleSignoutTimeout",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "enablePaymentAccountValidation",
																	"value": "yes",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "autoGenerateReceipt",
																	"value": "no",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "maximumNumberOfFetchReceiptAttempts",
																	"value": "3",
																	"type": "text",
																	"disabled": true
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"adminSettings"
															]
														},
														"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
													},
													"response": []
												},
												{
													"name": "[AS] Create User With Applied loan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "be4dbc41-bded-4ad6-a8d1-8f6cd0f13cb2",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "80675f55-4278-4f49-becc-39c8fe7259be",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PERSON_ID_2\", pm.response.json().personId);",
																	"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"user",
																"creation",
																"userWithAppliedLoan"
															]
														}
													},
													"response": []
												},
												{
													"name": "[AS] Approve Loan via Admin",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "e35eae37-8af3-4c1c-90a7-8b945b342d34",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 2);",
																	"}",
																	"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 321);",
																	" }",
																	"",
																	"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 52);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "44accd1f-f32b-4de9-a017-259b50d3d669",
																"exec": [
																	"pm.test(\"Status code is 200 found\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});   ",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "decision",
																	"value": "1",
																	"type": "text"
																},
																{
																	"key": "loan_limit",
																	"value": "50000",
																	"type": "text"
																},
																{
																	"key": "notes",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "loan_term_set",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "eligible_loan_type_ids[]",
																	"value": "{{LOAN_TYPE}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submit",
																	"type": "text"
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID_2}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"approveReject",
																"id",
																"{{PERSON_ID_2}}"
															]
														},
														"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
													},
													"response": []
												},
												{
													"name": "[AS] Accept loan offer on app",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "0901a882-7257-4e89-ba9b-a0b161f5d73f",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "e3a777dc-6c3c-4ee4-833f-8e9f91d1d12f",
																"exec": [
																	"pm.test(\"Status code is 200\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"loan",
																"user_accept_offer"
															]
														},
														"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
													},
													"response": []
												},
												{
													"name": "Mark payment as sent from admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "0408e8fd-2880-4a10-a926-c05f4609681b",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "cfcd80b3-6779-4894-8976-b970eedd1695",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
																	"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
																	"",
																	"//Set the correct rails provider that match the country",
																	"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
																	"   ",
																	"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
																	"  ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
																	"   ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
																	"   ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "transaction_amount",
																	"value": "3000",
																	"type": "text"
																},
																{
																	"key": "confirmation_number",
																	"value": "{{CONFIRMATION_NUMBER}}",
																	"type": "text"
																},
																{
																	"key": "transaction_date",
																	"value": "{{TIME_NOW_SEND_PAYMENT}}",
																	"description": "10/11/2018, 11:25 AM",
																	"type": "text"
																},
																{
																	"key": "mno_provider_name",
																	"value": "{{MNO-PROVIDER}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID_2}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"addDisbursement",
																"id",
																"{{PERSON_ID_2}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Backdate active Loan",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "932e3668-4bc9-4c07-8f8e-833b6dcb08b0",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "ddb393c4-efe6-4c74-bc97-ab09a07434e3",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"var backDatedDay = moment().subtract(22, 'day').format(\"YYYY-MM-DD\");",
																	"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "disbursement_date",
																	"value": "{{DATE_TO_BACKDATE_TO}}",
																	"description": "{{DATE_TO_BACKDATE_TO}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID_2}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"changeDisbursement",
																"id",
																"{{PERSON_ID_2}}",
																"loan_application_id",
																"{{LOAN_APPLICATION_ID}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Util] - Setup user data by personId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "59fdf872-6a4b-4945-b37a-64b2e6d8f2cd",
																"exec": [
																	" pm.test(\"Status code is 200\", function () {",
																	"     pm.response.to.have.status(200);",
																	" });"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "5cfc38ac-8521-4acb-9db6-80a2449b08c7",
																"exec": [
																	"setTimeout(function(){}, [30000]);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID_2}}",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"loancollections",
																"uploadUserDataToSnowflake",
																"personId",
																"{{PERSON_ID_2}}"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create 2 partners with 0 entrance and exit amounts",
											"item": [
												{
													"name": "[Helper] - Create a collection partner 1",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "4fe987ee-8ca3-4057-a730-46499c2eb978",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_1\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_1\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config partner 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "2f632fdf-4203-4e48-92de-34de4147fd26",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "587eca33-3d4b-4967-b112-918463dd0a40",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] - Create a collection partner 2",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "017dde26-2448-4ded-90f8-9cefc890c637",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_2\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_2\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner 2\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config - partner 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "c1b649cd-6ba2-4317-941d-8c04e79e26b4",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "9155d794-4b9d-409a-b89f-b9e90df17993",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_2}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create partner_segmentation_config",
											"item": [
												{
													"name": "Create a partner_segmentation for  cured bucket",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "0c18d829-709c-4f7d-9185-2d0b995ee5e7",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "190475f8-3d5e-4009-be57-d1e151a8a6b2",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_1\",\n\t\"config\": {\"type\":\"Bucket\",\"id\":1},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "b971fff9-9f93-4fb2-ab58-95ace2967e9b",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "07bd7d88-26cc-4129-8265-c3a58f369993",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_CURED\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation for  DoNotWork bucket",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "d0cfc016-3e1f-4dbf-beaa-eea44ea59b3b",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "3bd4861d-4419-4a23-88a7-49004d69dee2",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_1\",\n\t\"config\": {\"type\":\"Bucket\",\"id\":2},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "08e49400-a6f3-4461-b135-01aa75d5fe48",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "ff047bc0-1470-42a9-9b37-a94b83ae5ffe",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_DO_NOT_WORK\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation with partner 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "f321a0cc-bcb3-42e9-9dae-6fc7bc17dc10",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "6267bd80-21a3-4060-aeec-2b9ae8d5f9d1",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_1\",\n\t\"config\": {\"type\":\"Partner\",\"id\":{{PARTNER_ID_1}}},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "76b88e00-d123-46a9-8962-205086568dcd",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "5eb4ed80-10bf-4483-90a5-e13ffdfa3ff3",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_1\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation with partner 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "01c6cfba-075b-4f12-b45c-4bfa0f09c68e",
																"exec": [
																	"setTimeout(function () { }, [5000]);",
																	"",
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix();",
																	"",
																	"var MD5 = function (d) { result = M(V(Y(X(d), 8 * d.length))); return result.toLowerCase() }; function M(d) { for (var _, m = \"0123456789ABCDEF\", f = \"\", r = 0; r < d.length; r++)_ = d.charCodeAt(r), f += m.charAt(_ >>> 4 & 15) + m.charAt(15 & _); return f } function X(d) { for (var _ = Array(d.length >> 2), m = 0; m < _.length; m++)_[m] = 0; for (m = 0; m < 8 * d.length; m += 8)_[m >> 5] |= (255 & d.charCodeAt(m / 8)) << m % 32; return _ } function V(d) { for (var _ = \"\", m = 0; m < 32 * d.length; m += 8)_ += String.fromCharCode(d[m >> 5] >>> m % 32 & 255); return _ } function Y(d, _) { d[_ >> 5] |= 128 << _ % 32, d[14 + (_ + 64 >>> 9 << 4)] = _; for (var m = 1732584193, f = -271733879, r = -1732584194, i = 271733878, n = 0; n < d.length; n += 16) { var h = m, t = f, g = r, e = i; f = md5_ii(f = md5_ii(f = md5_ii(f = md5_ii(f = md5_hh(f = md5_hh(f = md5_hh(f = md5_hh(f = md5_gg(f = md5_gg(f = md5_gg(f = md5_gg(f = md5_ff(f = md5_ff(f = md5_ff(f = md5_ff(f, r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 0], 7, -680876936), f, r, d[n + 1], 12, -389564586), m, f, d[n + 2], 17, 606105819), i, m, d[n + 3], 22, -1044525330), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 4], 7, -176418897), f, r, d[n + 5], 12, 1200080426), m, f, d[n + 6], 17, -1473231341), i, m, d[n + 7], 22, -45705983), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 8], 7, 1770035416), f, r, d[n + 9], 12, -1958414417), m, f, d[n + 10], 17, -42063), i, m, d[n + 11], 22, -1990404162), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 12], 7, 1804603682), f, r, d[n + 13], 12, -40341101), m, f, d[n + 14], 17, -1502002290), i, m, d[n + 15], 22, 1236535329), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 1], 5, -165796510), f, r, d[n + 6], 9, -1069501632), m, f, d[n + 11], 14, 643717713), i, m, d[n + 0], 20, -373897302), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 5], 5, -701558691), f, r, d[n + 10], 9, 38016083), m, f, d[n + 15], 14, -660478335), i, m, d[n + 4], 20, -405537848), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 9], 5, 568446438), f, r, d[n + 14], 9, -1019803690), m, f, d[n + 3], 14, -187363961), i, m, d[n + 8], 20, 1163531501), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 13], 5, -1444681467), f, r, d[n + 2], 9, -51403784), m, f, d[n + 7], 14, 1735328473), i, m, d[n + 12], 20, -1926607734), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 5], 4, -378558), f, r, d[n + 8], 11, -2022574463), m, f, d[n + 11], 16, 1839030562), i, m, d[n + 14], 23, -35309556), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 1], 4, -1530992060), f, r, d[n + 4], 11, 1272893353), m, f, d[n + 7], 16, -155497632), i, m, d[n + 10], 23, -1094730640), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 13], 4, 681279174), f, r, d[n + 0], 11, -358537222), m, f, d[n + 3], 16, -722521979), i, m, d[n + 6], 23, 76029189), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 9], 4, -640364487), f, r, d[n + 12], 11, -421815835), m, f, d[n + 15], 16, 530742520), i, m, d[n + 2], 23, -995338651), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 0], 6, -198630844), f, r, d[n + 7], 10, 1126891415), m, f, d[n + 14], 15, -1416354905), i, m, d[n + 5], 21, -57434055), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 12], 6, 1700485571), f, r, d[n + 3], 10, -1894986606), m, f, d[n + 10], 15, -1051523), i, m, d[n + 1], 21, -2054922799), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 8], 6, 1873313359), f, r, d[n + 15], 10, -30611744), m, f, d[n + 6], 15, -1560198380), i, m, d[n + 13], 21, 1309151649), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 4], 6, -145523070), f, r, d[n + 11], 10, -1120210379), m, f, d[n + 2], 15, 718787259), i, m, d[n + 9], 21, -343485551), m = safe_add(m, h), f = safe_add(f, t), r = safe_add(r, g), i = safe_add(i, e) } return Array(m, f, r, i) } function md5_cmn(d, _, m, f, r, i) { return safe_add(bit_rol(safe_add(safe_add(_, d), safe_add(f, i)), r), m) } function md5_ff(d, _, m, f, r, i, n) { return md5_cmn(_ & m | ~_ & f, d, _, r, i, n) } function md5_gg(d, _, m, f, r, i, n) { return md5_cmn(_ & f | m & ~f, d, _, r, i, n) } function md5_hh(d, _, m, f, r, i, n) { return md5_cmn(_ ^ m ^ f, d, _, r, i, n) } function md5_ii(d, _, m, f, r, i, n) { return md5_cmn(m ^ (_ | ~f), d, _, r, i, n) } function safe_add(d, _) { var m = (65535 & d) + (65535 & _); return (d >> 16) + (_ >> 16) + (m >> 16) << 16 | 65535 & m } function bit_rol(d, _) { return d << _ | d >>> 32 - _ }",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS', hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "9cdc62e5-94b3-472f-adca-9e9016445641",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_2\",\n\t\"config\": {\"type\":\"Partner\",\"id\":{{PARTNER_ID_2}}},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "475e6f7f-09a6-47b8-90cf-06a2e7d8ee89",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "539c4ee8-dc3d-41db-bbe0-b390c7ae48d0",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_2\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "74bdda36-aada-4809-82d4-2e56b73e9b80",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "1dac3d36-9c7e-4553-a297-5e9d376610c3",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create bucket",
											"item": [
												{
													"name": "Create a bucket cured",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "e6832a25-477a-4420-8bfc-b99557583ebd",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "274a9c09-209f-4b00-84d0-3d79ab415472",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"config_id\": {{PARTNER_SEG_CURED}},\n    \"description\": \"Cured account\",\n    \"name\": \"Cured\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket DoNotWork",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "a082c095-ccfd-4823-8db7-6eea8a2eff00",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "23fc80cf-df96-49c2-b1e7-3950d858c88d",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n        \"config_id\": {{PARTNER_SEG_DO_NOT_WORK}},\n\n\"description\": \"Irremediable accounts'\",\n\"name\": \"DoNotWork\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "c76dc367-f622-43a0-a553-72c4a7ff1fdb",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "dfc308eb-b740-4455-8dc1-29b93fa62047",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_1}},\n\"description\": \"Test_Bucket_1\",\n\"name\": \"Test_Bucket_1\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get bucket 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "4d94cce7-3417-475a-b0fa-57efdf431308",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "dee43b4a-399f-4df9-b4d0-f7fd7c257ceb",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"BUCKET_1\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "df352a7a-e75c-475d-afdd-d3138b64e095",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "c5995b95-c6a6-4193-9c8c-2fb55f4787e0",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_2}},\n\"description\": \"Test_Bucket_2\",\n\"name\": \"Test_Bucket_2\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get bucket 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "69a578b6-7bc7-41da-a247-72c5ff044f5f",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "458ed3a0-4eb5-430c-9ce8-2496bcf1d149",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"BUCKET_2\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket_segmentation with bucketSegments",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "168ca768-9d98-4e31-9b2b-eed7e3338ab6",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "567498ad-c024-4f31-9170-7b3ecd1f0274",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config\": {\"type\":\"DpdSegment\",\"cases\":[{\"condition\":{\"from\":0,\"to\":22},\"output\":{\"type\":\"Bucket\",\"id\":{{BUCKET_1}}}},{\"condition\":{\"from\":22},\"output\":{\"type\":\"Bucket\",\"id\":{{BUCKET_2}}}}]},\n\"description\": \"Create a bucket segmentation\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"bucket_segmentation"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Trigger payment_plan - updates plans",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8819c2a5-052d-4f49-a649-e74055cc77cf",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Payment plan processing started\", function () {",
													"    pm.response.to.have.body(\"{\\\"message\\\":\\\"Payment plan processing started\\\"}\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Authorization",
												"value": "{{AUTHORIZATION_TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan/cron",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"payment_plan",
												"cron"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Trigger account processing - bucket segmentation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77630522-9339-4467-81b5-1541fb54eb1d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify response returned is New Process started\", function () {",
													"    pm.response.to.have.body(\"New process started\\n\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Authorization",
												"value": "{{AUTHORIZATION_TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/account_processing/run",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"account_processing",
												"run"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing] - should be DONE",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cc4cef5b-608a-4316-bee2-c532877f324d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.test(\"Verify account_processing wa DONE\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage).to.eql(\"done\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a72ccbd2-3d3b-46ed-9487-321be4d51c9d",
												"exec": [
													"setTimeout(function(){}, 15000);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing/latest",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing",
												"latest"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Test that an account was assigned to partner 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bc69c14-d757-45e7-b227-c147ecfc8cc8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.test(\"Verify one of the accounts was assigned to partner 1\", function() {",
													"    var response = pm.response.json();",
													"    pm.expect(response.personId).to.not.be.null;;",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5f95b6fb-e224-488d-ba55-d9937e53f941",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID_1}}",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection",
												"person_id",
												"{{PERSON_ID_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Test that an account was assigned to partner 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3143c182-5e06-46b9-92cc-ac8d28838d1c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.test(\"Verify one of the accounts was assigned to partner 1\", function() {",
													"    var response = pm.response.json();",
													"    pm.expect(response.personId).to.not.be.null;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID_2}}",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection",
												"person_id",
												"{{PERSON_ID_2}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have segmentation_handover",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3914a675-a319-47c1-b6c0-451baab17d98",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is segmentation_handover\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage).to.eql(\"segmentation_handover\");",
													"    // pm.expect(response.rowCount).to.eql(2);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/1",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have segmentation_takeback",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f0246b1d-915c-4a7a-84fb-3f00a88fcdab",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is segmentation_takeback\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage).to.eql(\"segmentation_takeback\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/2",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"2"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have update_loan_collections",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "562810f4-bd78-4e99-bfe8-1b9ee1655466",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is segmentation_handover\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage) == \"update_loan_collections\";",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/3",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"3"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have generate_handover",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3ac99afd-c219-4bfc-87d0-7b42b1d94463",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is segmentation_handover\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage) == \"generate_handover\";",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/4",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"4"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have generate_takeback",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d127a714-c922-4b25-9243-7458ce24f09d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is generate_takeback\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response).stage = \"generate_takeback\";",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/5",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"5"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing Log] - should have send_emails",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b0a35899-b521-4fe2-a210-a213ceec18e3",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify account processing log stage is send_emails\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage) == \"send_emails\";",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log/6",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing_log",
												"6"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "loan_number_segment",
							"item": [
								{
									"name": "clear required data",
									"item": [
										{
											"name": "[Util] - Truncate data on all partner_segmentation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f0a33813-b603-47a4-817a-bcef2967d056",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"partner_segmentation_config"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all delivery_channel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "727fc42e-f250-4f15-82bc-d0a5cfd78269",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"delivery_channel"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all partner",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a5fc4e9e-ded8-43cc-9e5f-a476b7d8be43",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"collection_partner"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all account_processing_log",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b459d08b-a64a-49af-aaa0-6b3d893e17c8",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing_log"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all account_processing",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8db63094-2931-44b0-8618-7b3f20558a5c",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4266fdee-1308-496d-80ee-671eec07a10e",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection_history",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a87119c4-e9fa-43ca-9536-f88db104b502",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket_segmetation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9502a7df-e387-4739-8f79-ca9eef833dca",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket_segmentation_config"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "90a12f57-72c4-4ceb-b8fb-999b901bc575",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all generated_file",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "257ddd1e-764a-4622-a8ce-856ce3e03aad",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/generated_file",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"generated_file"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate all tables [Snowflake] Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1fba9897-bd13-4e98-9f71-02f76a27972b",
														"exec": [
															" pm.test(\"Status code is 200\", function () {",
															"     pm.response.to.have.status(200);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/truncate_all",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"snowflake",
														"truncate_all"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7f3eddd2-1fe2-4c22-8fe7-7129dd3105c0",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "70fe488b-8264-4e00-837b-95f5c9ef0303",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "setup",
									"item": [
										{
											"name": "upload account 1 to snowflake",
											"item": [
												{
													"name": "Admin login",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "c1269348-0f5c-4ef5-9890-99765aef8325",
																"exec": [
																	"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
																	"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
																	"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "4cb28d25-4c32-46df-8480-6d947d381786",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "username",
																	"value": "{{ADMIN_LOGIN_USERNAME}}",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "{{ADMIN_LOGIN_PASSWORD}}",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"site",
																"authQA"
															]
														},
														"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
													},
													"response": []
												},
												{
													"name": "[AS] Settings for Admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "4eac20f9-1c17-43c5-98b7-91455258b0bc",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"const acceptanceServiceRequest = {",
																	"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
																	"  method: 'GET',",
																	"  header: 'Content-Type:application/json'",
																	"};",
																	"",
																	"//Acceptance service will GET response in JSON format from loans.admin_config table",
																	"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
																	"    console.log(response.json());",
																	"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
																	"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
																	"    });",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "approveNewMembersUsing",
																	"value": "manual",
																	"type": "text"
																},
																{
																	"key": "approveRepeatMembers",
																	"value": "manual",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "blacklistFraudulentCustomersUsing",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "showReferralsButtonOnHomescreenForCustomersOn",
																	"value": "TZ_TIGO, TZ_VODACOM",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "performKYCCheckToNewBorrowers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "coinsOAuthFlag",
																	"value": "mno_connected, phone_exists",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestSMSTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestEmailTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "telerivetTestPhoneID",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "cRBLowBalanceThreshold",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "organicAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "paidAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "hoverExperimentUsers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendFrom",
																	"value": "employee",
																	"type": "text"
																},
																{
																	"key": "simulateB2CSuccessResponse",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "b2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseMessage",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "adminIdleSignoutTimeout",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "enablePaymentAccountValidation",
																	"value": "yes",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "autoGenerateReceipt",
																	"value": "no",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "maximumNumberOfFetchReceiptAttempts",
																	"value": "3",
																	"type": "text",
																	"disabled": true
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"adminSettings"
															]
														},
														"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
													},
													"response": []
												},
												{
													"name": "[AS] Create User With Applied loan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "765a4010-1105-465d-a0a1-60314dedc7ba",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "4572af02-483b-4d89-9fb9-32c1282247ba",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PERSON_ID_1\", pm.response.json().personId);",
																	"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"user",
																"creation",
																"userWithAppliedLoan"
															]
														}
													},
													"response": []
												},
												{
													"name": "[AS] Approve Loan via Admin",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "d11d3769-a970-4ac9-b7e4-5ca3678da144",
																"exec": [
																	"setTimeout(function(){}, [15000]);",
																	"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 2);",
																	"}",
																	"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 321);",
																	" }",
																	"",
																	"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 52);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "ca04a647-a95e-446e-b3a9-a7bf1aa698dd",
																"exec": [
																	"pm.test(\"Status code is 200 found\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});   ",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "decision",
																	"value": "1",
																	"type": "text"
																},
																{
																	"key": "loan_limit",
																	"value": "50000",
																	"type": "text"
																},
																{
																	"key": "notes",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "loan_term_set",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "eligible_loan_type_ids[]",
																	"value": "{{LOAN_TYPE}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submit",
																	"type": "text"
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID_1}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"approveReject",
																"id",
																"{{PERSON_ID_1}}"
															]
														},
														"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
													},
													"response": []
												},
												{
													"name": "[AS] Accept loan offer on app",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "7ec8718f-040f-45d5-b26f-97a6ba2b162c",
																"exec": [
																	"setTimeout(function(){}, [5000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "3770d871-62d6-4c11-9582-5d79a9ee4cda",
																"exec": [
																	"pm.test(\"Status code is 200\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"loan",
																"user_accept_offer"
															]
														},
														"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
													},
													"response": []
												},
												{
													"name": "Mark payment as sent from admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "e6845c9b-617b-4f19-997b-ac681a3d32c6",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "914fabe5-2d92-4ae1-b6ee-2e318a1d1f0a",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
																	"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
																	"",
																	"//Set the correct rails provider that match the country",
																	"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
																	"   ",
																	"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
																	"  ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
																	"   ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
																	"   ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "transaction_amount",
																	"value": "3000",
																	"type": "text"
																},
																{
																	"key": "confirmation_number",
																	"value": "{{CONFIRMATION_NUMBER}}",
																	"type": "text"
																},
																{
																	"key": "transaction_date",
																	"value": "{{TIME_NOW_SEND_PAYMENT}}",
																	"description": "10/11/2018, 11:25 AM",
																	"type": "text"
																},
																{
																	"key": "mno_provider_name",
																	"value": "{{MNO-PROVIDER}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID_1}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"addDisbursement",
																"id",
																"{{PERSON_ID_1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Backdate active Loan",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "f085ad7b-d368-4893-b883-73a79494d119",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "7df906d5-b62a-4824-bf33-8ffc2b9f36e5",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"var backDatedDay = moment().subtract(22, 'day').format(\"YYYY-MM-DD\");",
																	"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "disbursement_date",
																	"value": "{{DATE_TO_BACKDATE_TO}}",
																	"description": "{{DATE_TO_BACKDATE_TO}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID_1}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"changeDisbursement",
																"id",
																"{{PERSON_ID_1}}",
																"loan_application_id",
																"{{LOAN_APPLICATION_ID}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Util] - Setup user data by personId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "33c261e9-0302-4f6c-8907-f93c6e0712d7",
																"exec": [
																	" pm.test(\"Status code is 200\", function () {",
																	"     pm.response.to.have.status(200);",
																	" });"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "71f0fadf-7728-4a78-9547-554ed35349cb",
																"exec": [
																	"setTimeout(function(){}, [30000]);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID_1}}",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"loancollections",
																"uploadUserDataToSnowflake",
																"personId",
																"{{PERSON_ID_1}}"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "upload account 2 to snowflake",
											"item": [
												{
													"name": "Admin login",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "8e9dcdfd-efbe-4201-b82d-8ffecf6cc8b4",
																"exec": [
																	"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
																	"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
																	"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "07b4597e-f86b-4ae2-9011-8e97b82db6eb",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "username",
																	"value": "{{ADMIN_LOGIN_USERNAME}}",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "{{ADMIN_LOGIN_PASSWORD}}",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"site",
																"authQA"
															]
														},
														"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
													},
													"response": []
												},
												{
													"name": "[AS] Settings for Admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "03038726-8911-4e93-b72e-a46c3faf4f5a",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"const acceptanceServiceRequest = {",
																	"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
																	"  method: 'GET',",
																	"  header: 'Content-Type:application/json'",
																	"};",
																	"",
																	"//Acceptance service will GET response in JSON format from loans.admin_config table",
																	"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
																	"    console.log(response.json());",
																	"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
																	"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
																	"    });",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "approveNewMembersUsing",
																	"value": "manual",
																	"type": "text"
																},
																{
																	"key": "approveRepeatMembers",
																	"value": "manual",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "blacklistFraudulentCustomersUsing",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "showReferralsButtonOnHomescreenForCustomersOn",
																	"value": "TZ_TIGO, TZ_VODACOM",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "performKYCCheckToNewBorrowers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "coinsOAuthFlag",
																	"value": "mno_connected, phone_exists",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestSMSTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestEmailTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "telerivetTestPhoneID",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "cRBLowBalanceThreshold",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "organicAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "paidAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "hoverExperimentUsers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendFrom",
																	"value": "employee",
																	"type": "text"
																},
																{
																	"key": "simulateB2CSuccessResponse",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "b2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseMessage",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "adminIdleSignoutTimeout",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "enablePaymentAccountValidation",
																	"value": "yes",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "autoGenerateReceipt",
																	"value": "no",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "maximumNumberOfFetchReceiptAttempts",
																	"value": "3",
																	"type": "text",
																	"disabled": true
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"adminSettings"
															]
														},
														"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
													},
													"response": []
												},
												{
													"name": "[AS] Create User With Applied loan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "99fc7274-5ffd-4f85-b9f8-74f8ce53040b",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "9adff6eb-d622-497e-a1ea-9a06311951c6",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PERSON_ID_2\", pm.response.json().personId);",
																	"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"user",
																"creation",
																"userWithAppliedLoan"
															]
														}
													},
													"response": []
												},
												{
													"name": "[AS] Approve Loan via Admin",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "54471046-214e-4d78-bb5c-cc4dce6ec659",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 2);",
																	"}",
																	"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 321);",
																	" }",
																	"",
																	"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 52);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "98d2754a-2d5e-425f-b064-b273a1706741",
																"exec": [
																	"pm.test(\"Status code is 200 found\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});   ",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "decision",
																	"value": "1",
																	"type": "text"
																},
																{
																	"key": "loan_limit",
																	"value": "50000",
																	"type": "text"
																},
																{
																	"key": "notes",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "loan_term_set",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "eligible_loan_type_ids[]",
																	"value": "{{LOAN_TYPE}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submit",
																	"type": "text"
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID_2}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"approveReject",
																"id",
																"{{PERSON_ID_2}}"
															]
														},
														"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
													},
													"response": []
												},
												{
													"name": "[AS] Accept loan offer on app",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "1b0a15af-410d-49af-ab7f-1d97ca8f2c33",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "b1eccbba-cb75-479b-bf59-a12845f63d1d",
																"exec": [
																	"pm.test(\"Status code is 200\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"loan",
																"user_accept_offer"
															]
														},
														"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
													},
													"response": []
												},
												{
													"name": "Mark payment as sent from admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "30164017-07f9-4e9f-9c96-cd913a737a59",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "a9bf5e30-cc81-470e-80fd-8bac53c51e5b",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
																	"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
																	"",
																	"//Set the correct rails provider that match the country",
																	"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
																	"   ",
																	"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
																	"  ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
																	"   ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
																	"   ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "transaction_amount",
																	"value": "3000",
																	"type": "text"
																},
																{
																	"key": "confirmation_number",
																	"value": "{{CONFIRMATION_NUMBER}}",
																	"type": "text"
																},
																{
																	"key": "transaction_date",
																	"value": "{{TIME_NOW_SEND_PAYMENT}}",
																	"description": "10/11/2018, 11:25 AM",
																	"type": "text"
																},
																{
																	"key": "mno_provider_name",
																	"value": "{{MNO-PROVIDER}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID_2}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"addDisbursement",
																"id",
																"{{PERSON_ID_2}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Backdate active Loan",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "09443861-01dc-46b8-afb7-3357d4156a27",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "2ea7134f-948c-411a-a588-5b8af77e7baa",
																"exec": [
																	"setTimeout(function () { }, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"//Backdate by 22+22+1 days",
																	"var backDatedDay = moment().subtract(45, 'day').format(\"YYYY-MM-DD\");",
																	"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "disbursement_date",
																	"value": "{{DATE_TO_BACKDATE_TO}}",
																	"description": "{{DATE_TO_BACKDATE_TO}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID_2}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"changeDisbursement",
																"id",
																"{{PERSON_ID_2}}",
																"loan_application_id",
																"{{LOAN_APPLICATION_ID}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Util] - Setup user data by personId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "95b10073-57d8-4623-81e2-ee04b94f79a9",
																"exec": [
																	" pm.test(\"Status code is 200\", function () {",
																	"     pm.response.to.have.status(200);",
																	" });"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "865a6b16-4900-4c6e-a798-da30d320fb6c",
																"exec": [
																	"setTimeout(function(){}, [30000]);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID_2}}",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"loancollections",
																"uploadUserDataToSnowflake",
																"personId",
																"{{PERSON_ID_2}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "84951b6b-579a-47e1-8f17-f922f6feb453",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b98e51f2-e158-4f6f-892d-de726182e8bf",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create 2 partners with 0 entrance and exit amounts",
											"item": [
												{
													"name": "[Helper] - Create a collection partner 1",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "92696ad0-499c-4433-8f88-286b6e93a29b",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_1\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_1\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config partner 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "571104a0-8bfa-42c0-80bd-54e43a802ad5",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "1836f542-6d54-4830-acdb-a99e37270b87",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] - Create a collection partner 2",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "134521fd-06ef-4676-8e83-0295f14e3547",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_2\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_2\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner 2\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config - partner 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "a63dcdea-ba5e-4e4a-b523-7d752299ea0c",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "6598b64f-e22e-4671-a257-2864f9204b77",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_2}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "a901962e-7c12-40a2-9710-50d751e7c4c8",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "b30e23a2-bb45-4f66-b5aa-990fcf6b9cf1",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create partner_segmentation_config",
											"item": [
												{
													"name": "Create a partner_segmentation for  cured bucket",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "277e085a-a304-4bf5-8e5f-048749fd2c40",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "2909dc4f-2dad-4e5b-9158-6c09c1d5c1fa",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_cured\",\n\t\"config\": {\"type\":\"Bucket\",\"id\":1},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "251bb205-a20e-478e-96e5-3ab958f2e29a",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "bdb4d707-0f3a-4aae-b284-7bf933c0f6ab",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_CURED\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "f33aa66c-48c0-41f5-8574-270774bcf0ea",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "bbdc6f1e-da43-489e-bc96-b1c438bdc496",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_DO_NOT_WORK\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation for  DoNotWork bucket",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "3211ae8c-bc98-421e-a10f-3701ad5025e5",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "3bde8376-6c4c-4d15-a8d7-c03d9e610d70",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_do_not_work\",\n\t\"config\": {\"type\":\"Bucket\",\"id\":2},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation with partner 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "2b81133c-acd4-4324-8675-4675adfcf20d",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "d61b936a-e7b3-4326-a4df-2bf356784a12",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_1\",\n\t\"config\": {\"type\":\"Partner\",\"id\":{{PARTNER_ID_1}}},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "bc49a594-af3b-40c1-9852-e2fb325321c5",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "7d837721-563a-4fb0-b0f4-b5c68c75a593",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_1\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation with partner 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "2484d025-d501-41b8-b12c-460a7044641f",
																"exec": [
																	"setTimeout(function () { }, [5000]);",
																	"",
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix();",
																	"",
																	"var MD5 = function (d) { result = M(V(Y(X(d), 8 * d.length))); return result.toLowerCase() }; function M(d) { for (var _, m = \"0123456789ABCDEF\", f = \"\", r = 0; r < d.length; r++)_ = d.charCodeAt(r), f += m.charAt(_ >>> 4 & 15) + m.charAt(15 & _); return f } function X(d) { for (var _ = Array(d.length >> 2), m = 0; m < _.length; m++)_[m] = 0; for (m = 0; m < 8 * d.length; m += 8)_[m >> 5] |= (255 & d.charCodeAt(m / 8)) << m % 32; return _ } function V(d) { for (var _ = \"\", m = 0; m < 32 * d.length; m += 8)_ += String.fromCharCode(d[m >> 5] >>> m % 32 & 255); return _ } function Y(d, _) { d[_ >> 5] |= 128 << _ % 32, d[14 + (_ + 64 >>> 9 << 4)] = _; for (var m = 1732584193, f = -271733879, r = -1732584194, i = 271733878, n = 0; n < d.length; n += 16) { var h = m, t = f, g = r, e = i; f = md5_ii(f = md5_ii(f = md5_ii(f = md5_ii(f = md5_hh(f = md5_hh(f = md5_hh(f = md5_hh(f = md5_gg(f = md5_gg(f = md5_gg(f = md5_gg(f = md5_ff(f = md5_ff(f = md5_ff(f = md5_ff(f, r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 0], 7, -680876936), f, r, d[n + 1], 12, -389564586), m, f, d[n + 2], 17, 606105819), i, m, d[n + 3], 22, -1044525330), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 4], 7, -176418897), f, r, d[n + 5], 12, 1200080426), m, f, d[n + 6], 17, -1473231341), i, m, d[n + 7], 22, -45705983), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 8], 7, 1770035416), f, r, d[n + 9], 12, -1958414417), m, f, d[n + 10], 17, -42063), i, m, d[n + 11], 22, -1990404162), r = md5_ff(r, i = md5_ff(i, m = md5_ff(m, f, r, i, d[n + 12], 7, 1804603682), f, r, d[n + 13], 12, -40341101), m, f, d[n + 14], 17, -1502002290), i, m, d[n + 15], 22, 1236535329), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 1], 5, -165796510), f, r, d[n + 6], 9, -1069501632), m, f, d[n + 11], 14, 643717713), i, m, d[n + 0], 20, -373897302), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 5], 5, -701558691), f, r, d[n + 10], 9, 38016083), m, f, d[n + 15], 14, -660478335), i, m, d[n + 4], 20, -405537848), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 9], 5, 568446438), f, r, d[n + 14], 9, -1019803690), m, f, d[n + 3], 14, -187363961), i, m, d[n + 8], 20, 1163531501), r = md5_gg(r, i = md5_gg(i, m = md5_gg(m, f, r, i, d[n + 13], 5, -1444681467), f, r, d[n + 2], 9, -51403784), m, f, d[n + 7], 14, 1735328473), i, m, d[n + 12], 20, -1926607734), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 5], 4, -378558), f, r, d[n + 8], 11, -2022574463), m, f, d[n + 11], 16, 1839030562), i, m, d[n + 14], 23, -35309556), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 1], 4, -1530992060), f, r, d[n + 4], 11, 1272893353), m, f, d[n + 7], 16, -155497632), i, m, d[n + 10], 23, -1094730640), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 13], 4, 681279174), f, r, d[n + 0], 11, -358537222), m, f, d[n + 3], 16, -722521979), i, m, d[n + 6], 23, 76029189), r = md5_hh(r, i = md5_hh(i, m = md5_hh(m, f, r, i, d[n + 9], 4, -640364487), f, r, d[n + 12], 11, -421815835), m, f, d[n + 15], 16, 530742520), i, m, d[n + 2], 23, -995338651), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 0], 6, -198630844), f, r, d[n + 7], 10, 1126891415), m, f, d[n + 14], 15, -1416354905), i, m, d[n + 5], 21, -57434055), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 12], 6, 1700485571), f, r, d[n + 3], 10, -1894986606), m, f, d[n + 10], 15, -1051523), i, m, d[n + 1], 21, -2054922799), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 8], 6, 1873313359), f, r, d[n + 15], 10, -30611744), m, f, d[n + 6], 15, -1560198380), i, m, d[n + 13], 21, 1309151649), r = md5_ii(r, i = md5_ii(i, m = md5_ii(m, f, r, i, d[n + 4], 6, -145523070), f, r, d[n + 11], 10, -1120210379), m, f, d[n + 2], 15, 718787259), i, m, d[n + 9], 21, -343485551), m = safe_add(m, h), f = safe_add(f, t), r = safe_add(r, g), i = safe_add(i, e) } return Array(m, f, r, i) } function md5_cmn(d, _, m, f, r, i) { return safe_add(bit_rol(safe_add(safe_add(_, d), safe_add(f, i)), r), m) } function md5_ff(d, _, m, f, r, i, n) { return md5_cmn(_ & m | ~_ & f, d, _, r, i, n) } function md5_gg(d, _, m, f, r, i, n) { return md5_cmn(_ & f | m & ~f, d, _, r, i, n) } function md5_hh(d, _, m, f, r, i, n) { return md5_cmn(_ ^ m ^ f, d, _, r, i, n) } function md5_ii(d, _, m, f, r, i, n) { return md5_cmn(m ^ (_ | ~f), d, _, r, i, n) } function safe_add(d, _) { var m = (65535 & d) + (65535 & _); return (d >> 16) + (_ >> 16) + (m >> 16) << 16 | 65535 & m } function bit_rol(d, _) { return d << _ | d >>> 32 - _ }",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS', hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "9990a179-2d4b-4018-9ccb-5c59667a61c0",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_partner_2\",\n\t\"config\": {\"type\":\"Partner\",\"id\":{{PARTNER_ID_2}}},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "74be0b38-33e7-4b4c-88cc-963bc4263330",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "fa3700aa-83fd-4504-a36f-01c9dcad2f83",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_2\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "40a66062-ab0e-4914-8ad1-38c420f6b74e",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "eed110da-dec7-4aad-9375-22ebff1991f0",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create bucket",
											"item": [
												{
													"name": "Create a bucket cured",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "1f5b7ae5-566c-41c5-9f3d-5d2a611bf9a9",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "102defb7-113d-42f3-aadb-3087f7a73c27",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"config_id\": {{PARTNER_SEG_CURED}},\n    \"description\": \"Cured account\",\n    \"name\": \"Cured\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket DoNotWork",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "e80026c5-7fc9-4945-a058-1b8e8fce81be",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "aabbf3ce-dbe7-487b-a362-9f743eeea5ce",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n        \"config_id\": {{PARTNER_SEG_DO_NOT_WORK}},\n        \"description\": \"Irremediable accounts'\",\n        \"name\": \"DoNotWork\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket cured",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "e7108fb5-0c83-4b19-9f13-5794a58f724a",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "1dc32bc0-04c7-4b37-bb22-18e41e651ae8",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"description\": \"Cured account\",\n\"name\": \"Cured\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket DoNotWork",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "5d3ac874-414e-47a2-8385-06e400bc89bc",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "e475ce99-16ab-47cf-8bed-27b1520d448e",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"description\": \"Irremediable accounts'\",\n\"name\": \"DoNotWork\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "515f986a-9acf-4048-b506-9739a5e272a0",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "9930f287-717d-45c4-8a7c-88e99c7b6e89",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_1}},\n\"description\": \"Test_Bucket_1\",\n\"name\": \"Test_Bucket_1\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get bucket 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "25be20ba-d85e-482c-82b5-682def94d725",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "0414c2ab-706d-4ee2-88a5-aea9c03b4b8a",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"BUCKET_1\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "49222245-63c0-4aa4-a3b4-836edfbf9404",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "2a51c4fd-9e6e-498b-a629-e59272c932dc",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_2}},\n\"description\": \"Test_Bucket_2\",\n\"name\": \"Test_Bucket_2\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get bucket 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "74cbdf65-68e8-4435-9953-69d5df582ef7",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "157d5c17-3417-4235-94bc-4a4728a465ad",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"BUCKET_2\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket_segmentation with loan_number",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "82142190-6eda-4c4c-982e-3ab5a4f8f124",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "f76896b0-92ce-403c-b0bb-2e33a9da1ab8",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config\": {\"type\":\"LoanNumberSegment\",\"cases\":[{\"condition\":{\"from\":0,\"to\":2},\"output\":{\"type\":\"Bucket\",\"id\":{{BUCKET_1}}}},{\"condition\":{\"from\":2},\"output\":{\"type\":\"Bucket\",\"id\":{{BUCKET_2}}}}]},\n\"description\": \"Create a bucket segmentation with loan_number\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"bucket_segmentation"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "d1863fc7-7789-4695-acd7-92655a500d9a",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "70a4a653-d641-4920-baf3-a3b4b253a10f",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Trigger payment_plan - updates plans",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "add16b98-1b31-44dd-9f95-7b153d9b6bfe",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Payment plan processing started\", function () {",
													"    pm.response.to.have.body(\"{\\\"message\\\":\\\"Payment plan processing started\\\"}\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Authorization",
												"value": "{{AUTHORIZATION_TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan/cron",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"payment_plan",
												"cron"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Trigger account processing - loan number segmentation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ea2f20cf-31d7-4120-8141-768784dc3d58",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify response returned is New Process started\", function () {",
													"    pm.response.to.have.body(\"New process started\\n\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Authorization",
												"value": "{{AUTHORIZATION_TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/account_processing/run",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"account_processing",
												"run"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing] - should be DONE",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3cbd81af-92ba-4040-9f0c-919fe33df9b0",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.test(\"Verify account_processing wa DONE\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage).to.eql(\"done\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "430ea80a-d9e8-4d22-82c0-8bd6c30885ca",
												"exec": [
													"setTimeout(function(){}, 15000);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing/latest",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing",
												"latest"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Test that account 1 was assigned to partner 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "27c918c3-9c62-4945-8e08-acc059c287f3",
												"exec": [
													"// Fix loan number creation on acceptance service",
													"// https://talamobile.atlassian.net/browse/RPMT-239",
													"// pm.test(\"Status code is 200\", function () {",
													"//     pm.response.to.have.status(200);",
													"// });",
													"",
													"// var jsonBody = JSON.parse(responseBody);",
													"",
													"// pm.test(\"Verify account 1 was assigned to partner 1\", function() {",
													"//     var response = pm.response.json();",
													"//     pm.expect(response.personId).to.eql(PERSON_ID_1);",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID_1}}",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection",
												"person_id",
												"{{PERSON_ID_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Test that account 2 was assigned to partner 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "79c49c9a-220b-447e-9063-1af35caab4ec",
												"exec": [
													"// Fix loan number creation on acceptance service",
													"// https://talamobile.atlassian.net/browse/RPMT-239",
													"// pm.test(\"Status code is 200\", function () {",
													"//     pm.response.to.have.status(200);",
													"// });",
													"",
													"// var jsonBody = JSON.parse(responseBody);",
													"",
													"//TO DO: Fix loan number",
													"// pm.test(\"Verify account 2 was assigned to partner 2\", function() {",
													"//     var response = pm.response.json();",
													"//     pm.expect(response).personId.to.eql(PERSON_ID_2);",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID}}",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection",
												"person_id",
												"{{PERSON_ID}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "amount_owned_segment",
							"item": [
								{
									"name": "clear required data",
									"item": [
										{
											"name": "[Util] - Truncate data on all partner_segmentation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "241961ba-eab5-496f-8eb1-1419eea48b1a",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"partner_segmentation_config"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all delivery_channel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "776af42d-19e5-4c6f-87b4-8ae4d9bd92d7",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"delivery_channel"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all partner",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6bb6e995-cacc-4315-a873-49b337c0c5d4",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"collection_partner"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all account_processing_log",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cb767ec1-a928-4b23-895d-dcec1cb25dc3",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing_log",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing_log"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all account_processing",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fe95dc4f-a35a-426b-b1f9-f67d58a95e9a",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fac35e61-df02-4808-8652-9527d7010c7f",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all loan_collection_history",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b4e0a69c-6a79-4ef0-bf0a-9b175c7a4c19",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"account_processing"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket_segmetation_configs",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "94377687-dd81-4ac1-9c10-03654d701ab8",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket_segmentation_config"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all bucket",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2f897a2f-d216-4ce2-bda4-3f70ef24cf84",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"bucket"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate data on all generated_file",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dea93920-7848-43a0-add2-67b7968a7755",
														"exec": [
															" pm.test(\"Status code is 204 No Content\", function () {",
															"     pm.response.to.have.status(204);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/generated_file",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"loancollections",
														"generated_file"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Util] - Truncate all tables [Snowflake] Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "baa79ea5-e168-4004-a8e6-b035e414004f",
														"exec": [
															" pm.test(\"Status code is 200\", function () {",
															"     pm.response.to.have.status(200);",
															" });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/truncate_all",
													"host": [
														"{{ACCEPTANCE_SERVICE_BASE_URL}}"
													],
													"path": [
														"snowflake",
														"truncate_all"
													]
												},
												"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8376d9bc-0661-43a9-8dc7-6b8c491a452a",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3dbd10b7-11ce-4827-8f74-69476ccef0c2",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "setup",
									"item": [
										{
											"name": "upload account 1 to snowflake",
											"item": [
												{
													"name": "Admin login",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "940294bd-68c3-4317-9af8-215d04c36cd1",
																"exec": [
																	"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
																	"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
																	"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "4d66c621-1d5b-48ac-a457-821a2aa1180f",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "username",
																	"value": "{{ADMIN_LOGIN_USERNAME}}",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "{{ADMIN_LOGIN_PASSWORD}}",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"site",
																"authQA"
															]
														},
														"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
													},
													"response": []
												},
												{
													"name": "[AS] Settings for Admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "536f5af3-7cf0-4c87-831c-f46fc735b72c",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"const acceptanceServiceRequest = {",
																	"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
																	"  method: 'GET',",
																	"  header: 'Content-Type:application/json'",
																	"};",
																	"",
																	"//Acceptance service will GET response in JSON format from loans.admin_config table",
																	"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
																	"    console.log(response.json());",
																	"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
																	"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
																	"    });",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "approveNewMembersUsing",
																	"value": "manual",
																	"type": "text"
																},
																{
																	"key": "approveRepeatMembers",
																	"value": "manual",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "blacklistFraudulentCustomersUsing",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "showReferralsButtonOnHomescreenForCustomersOn",
																	"value": "TZ_TIGO, TZ_VODACOM",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "performKYCCheckToNewBorrowers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "coinsOAuthFlag",
																	"value": "mno_connected, phone_exists",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestSMSTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestEmailTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "telerivetTestPhoneID",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "cRBLowBalanceThreshold",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "organicAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "paidAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "hoverExperimentUsers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendFrom",
																	"value": "employee",
																	"type": "text"
																},
																{
																	"key": "simulateB2CSuccessResponse",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "b2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseMessage",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "adminIdleSignoutTimeout",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "enablePaymentAccountValidation",
																	"value": "yes",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "autoGenerateReceipt",
																	"value": "no",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "maximumNumberOfFetchReceiptAttempts",
																	"value": "3",
																	"type": "text",
																	"disabled": true
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"adminSettings"
															]
														},
														"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
													},
													"response": []
												},
												{
													"name": "[AS] Create User With Applied loan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "570d32d4-1a8b-4f62-8729-3efebd1333e3",
																"exec": [
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "a0e7e7c9-2e03-425f-a01b-4796fab80cdd",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PERSON_ID_1\", pm.response.json().personId);",
																	"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"user",
																"creation",
																"userWithAppliedLoan"
															]
														}
													},
													"response": []
												},
												{
													"name": "[AS] Approve Loan via Admin",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "198a31de-be8c-43f6-883e-35b9e5a7039b",
																"exec": [
																	"setTimeout(function(){}, [15000]);",
																	"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 2);",
																	"}",
																	"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 321);",
																	" }",
																	"",
																	"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 52);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "bd3b4298-454b-4e49-84b8-46d0ce1653a9",
																"exec": [
																	"pm.test(\"Status code is 200 found\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});   ",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "decision",
																	"value": "1",
																	"type": "text"
																},
																{
																	"key": "loan_limit",
																	"value": "50000",
																	"type": "text"
																},
																{
																	"key": "notes",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "loan_term_set",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "eligible_loan_type_ids[]",
																	"value": "{{LOAN_TYPE}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submit",
																	"type": "text"
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID_1}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"approveReject",
																"id",
																"{{PERSON_ID_1}}"
															]
														},
														"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
													},
													"response": []
												},
												{
													"name": "[AS] Accept loan offer on app",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "f60f1412-b32c-4e3b-9b18-d9512db76cbe",
																"exec": [
																	"setTimeout(function(){}, [5000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "4638602c-3993-4e1d-8d84-d69b956df7a7",
																"exec": [
																	"pm.test(\"Status code is 200\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"loan",
																"user_accept_offer"
															]
														},
														"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
													},
													"response": []
												},
												{
													"name": "Mark payment as sent from admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "b2f79e00-dc42-4d30-b420-053d3bb8f057",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "a1332968-9a92-4c4f-9881-4dadbae89475",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
																	"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
																	"",
																	"//Set the correct rails provider that match the country",
																	"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
																	"   ",
																	"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
																	"  ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
																	"   ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
																	"   ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "transaction_amount",
																	"value": "3000",
																	"type": "text"
																},
																{
																	"key": "confirmation_number",
																	"value": "{{CONFIRMATION_NUMBER}}",
																	"type": "text"
																},
																{
																	"key": "transaction_date",
																	"value": "{{TIME_NOW_SEND_PAYMENT}}",
																	"description": "10/11/2018, 11:25 AM",
																	"type": "text"
																},
																{
																	"key": "mno_provider_name",
																	"value": "{{MNO-PROVIDER}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID_1}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"addDisbursement",
																"id",
																"{{PERSON_ID_1}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Backdate active Loan",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "c050a9c5-8620-4e51-85aa-20980653d78f",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "1ab618ca-c2b5-4e51-861b-ac3bae557998",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"var backDatedDay = moment().subtract(22, 'day').format(\"YYYY-MM-DD\");",
																	"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "disbursement_date",
																	"value": "{{DATE_TO_BACKDATE_TO}}",
																	"description": "{{DATE_TO_BACKDATE_TO}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID_1}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"changeDisbursement",
																"id",
																"{{PERSON_ID_1}}",
																"loan_application_id",
																"{{LOAN_APPLICATION_ID}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Util] - Setup user data by personId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "f72163d4-266a-499d-9aa8-e77eab32acb3",
																"exec": [
																	" pm.test(\"Status code is 200\", function () {",
																	"     pm.response.to.have.status(200);",
																	" });"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "692dadd9-0194-489b-a4fd-40033a7a1f87",
																"exec": [
																	"setTimeout(function(){}, [30000]);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID_1}}",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"loancollections",
																"uploadUserDataToSnowflake",
																"personId",
																"{{PERSON_ID_1}}"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "upload account 2 to snowflake",
											"item": [
												{
													"name": "Admin login",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "dcc4d7fc-4a57-4450-a938-c0d900a17ad9",
																"exec": [
																	"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
																	"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
																	"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "ccbcc5d8-45a3-4d3f-a151-f7375ba19ddd",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "username",
																	"value": "{{ADMIN_LOGIN_USERNAME}}",
																	"type": "text"
																},
																{
																	"key": "password",
																	"value": "{{ADMIN_LOGIN_PASSWORD}}",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"site",
																"authQA"
															]
														},
														"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
													},
													"response": []
												},
												{
													"name": "[AS] Settings for Admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "ea6a0ad4-a9ee-4108-be0a-e8ac9cd2167f",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"const acceptanceServiceRequest = {",
																	"  url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString()+'/loans/admin_config/project/safari/parameter/approve_new_users_by',",
																	"  method: 'GET',",
																	"  header: 'Content-Type:application/json'",
																	"};",
																	"",
																	"//Acceptance service will GET response in JSON format from loans.admin_config table",
																	"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
																	"    console.log(response.json());",
																	"    pm.test(\"DB has been updated with correct method of approving borrowers i.e. manual\", function () {",
																	"        pm.expect(response.json().value).to.eql(\"manual\");// 'value' column in loans.admin_config table should be set to 'always'",
																	"    });",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "approveNewMembersUsing",
																	"value": "manual",
																	"type": "text"
																},
																{
																	"key": "approveRepeatMembers",
																	"value": "manual",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "blacklistFraudulentCustomersUsing",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "showReferralsButtonOnHomescreenForCustomersOn",
																	"value": "TZ_TIGO, TZ_VODACOM",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "performKYCCheckToNewBorrowers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "coinsOAuthFlag",
																	"value": "mno_connected, phone_exists",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "automaticallyCreditLatestLoanWhenRewardIsAvailable",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestSMSTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendAllTestEmailTo",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "telerivetTestPhoneID",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "cRBLowBalanceThreshold",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "organicAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "paidAcquisitionSources",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "hoverExperimentUsers",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "sendFrom",
																	"value": "employee",
																	"type": "text"
																},
																{
																	"key": "simulateB2CSuccessResponse",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "b2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseCode",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "asyncB2CResponseMessage",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "adminIdleSignoutTimeout",
																	"value": "",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "enablePaymentAccountValidation",
																	"value": "yes",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "autoGenerateReceipt",
																	"value": "no",
																	"type": "text",
																	"disabled": true
																},
																{
																	"key": "maximumNumberOfFetchReceiptAttempts",
																	"value": "3",
																	"type": "text",
																	"disabled": true
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/adminSettings",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"adminSettings"
															]
														},
														"description": "+ Allows user to update 1 or more parameter in admin and at the same time maintaing the existing settings in admin\n\n\n+ Possible parameter values => parameter can either take multiple values or can only accept 1 from the list of possible values.\n\n  \n#### Explaining the possible parameter values. \n\n\t\t\tEx: \n\t\t\t\n\t\t\t\"Always -> always\" :-\n\t\t\t\n\t\t\tValues to the left of the arrow: 'Always' :- parameter value in admin. THIS IS WHAT THE USER ENTERS IN POSTMAN\n\t\t\tValues to the right of the arrow: 'always' :- values in the DB.\n \n \n**approveNewMembersUsing** => Approve new members using => is optional. Possible values:\n\n               Decision Algorithm\t-> algorithm\n               Always           \t-> always\n               Manual           \t-> manual\n               \n**approveRepeatMembers** => Approve repeat members => is optional. Possible values:\n    \t\t\t        \n               Decision Algorithm -> algorithm\n               Always             -> always\n               Manual             -> manual\n               \n**blacklistFraudulentCustomersUsing** => Blacklist fraudulent customers using => is optional. Possible values:\n   \n              Never \t\t\t  -> never\n              Profiling Server\t  -> profiling\n    \n**showReferralsButtonOnHomescreenForCustomersOn** => Show Referrals button on the home screen for customers on => is optional. Possible values:\n\n               TZ_TIGO\t\t\t\t\t-> TZ_TIGO\n               TZ_VODACOM\t\t\t\t-> TZ_VODACOM\n               KE_AIRTEL\t\t\t\t-> KE_AIRTEL\n               KE_SAFARICOM \t\t\t-> KE_SAFARICOM\n               PH_COINS \t\t\t\t-> PH_COINS\n               PH_COINS_BANK\t\t\t-> PH_COINS_BANK\n               PH_COINS_PADALA\t\t\t-> PH_COINS_PADALA\n               PH_COINS_PADALA_EXPRESS\t-> PH_COINS_PADALA_EXPRESS\n               PH_GLOBE \t\t\t\t-> PH_GLOBE\n               PH_SMART \t\t\t\t-> PH_SMART\n               PH_VMONEY\t\t\t\t-> PH_VMONEY\n               MX_CONEKTA\t\t\t\t-> MX_CONEKTA\n               MX_STP\t\t\t\t\t-> MX_STP\n   \n**performKYCCheckToNewBorrowers** => Perform KYC Check to New Borrowers => is optional. Possible values:\n\n              Disabled -> 0\n              Enabled -> tz_tala, mx_tala, ph_coins_oauth, trans_union_ke (Select according to country)\n    \n**coinsOAuthFlag** => Coins OAuth Flag => is optional. One can select more than 1 value. Possible values:\n\n               mno_connected -> mno_connected\n               mno_id_verified -> mno_id_verified\n               phone_exists -> phone_exists\n               phone_active -> phone_active\n               person_info_correct -> person_info_correct\n    \n**automaticallyCreditLatestLoanWhenRewardIsAvailable** => Automatically Credit Latest Loan when Reward is Available => \t\t\t   is optional. Possible values:\n\n               Yes -> 1\n               No -> 0\n    \n**sendAllTestSMSTo** => Send all test SMS to => is optional. Possible value:\n\n               Phone number for customer to whom the sms is sent ex: for KE customer : 0758466382\n   \n**sendAllTestEmailTo** => Send all test Email to => is optional. Possible values:\n\n               Email address for customer to whom the sms is sent ex: test@info.com\n   \n**telerivetTestPhoneID** => Telerivet test phone ID => is optional. Possible value in the format:\n\n               Ex: PN6c6ca9f19cf168f7\n   \n**cRBLowBalanceThreshold** => CRB Low balance threshold => is optional. Possible value:\n\n               Ex: 1,000,000\n    \n**organicAcquisitionSources** => Organic acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n   \n**paidAcquisitionSources** => Paid acquisition sources => is optional. Possible values:\n\n               Off -> 0\n               On -> 1\n    \n**hoverExperimentUsers** => Hover experiment users (percent) (KE only) => is optional. Possible value:\n\n               0 - 100\n    \n**sendFrom** => Disbursement Settings (B2C) - Send From => is optional. Possible values:\n\n               B2C => mpesa (for all regions: KE, TZ, PH and TZ)\n               Employee => employee\n\n**simulateB2CSuccessResponse** => Disbursement Settings (B2C) - Simulate B2C Success Response => is optional. Possible \t\t\t   values:\n\n               Yes -> 1\n               No -> 0\n\n**b2CResponseCode** => Disbursement Settings (B2C) - B2C Response Code => is optional. Possible\n\t\t\t   value in the range:\n\n               0 - 100\n\n**asyncB2CResponseCode** => Disbursement Settings (B2C) - Async B2C response code => is optional. Possible value in the \t\t\t   range:\n\n               0 - 10\n     \n**asyncB2CResponseMessage** => Disbursement Settings (B2C) - Async B2C response message => is optional. Possible value:\n\n               Ex of message : 'Disbursement is successful'\n\n**adminIdleSignoutTimeout** => Admin idle sign out timeout (in minutes) => is optional. Possible value in the range:\n\n               1 - 90\n               \n**enablePaymentAccountValidation** => Enable Payment Account Validation, only for MX, is optional. Possible values:\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**autoGenerateReceiptForMX** => Auto generate receipt, only for MX, is optional.\n\t\t\t   \n\t\t\t   no -> 0\n               yes -> 1\n\n**maximumNumberOfFetchReceiptAttemptsForMX** => Maximum number of attempts to fetch receipt from STP before auto \t\t\t\t\t   generating one, only for MX, is optional. Possible values in the range:\n               \n               1 - 10"
													},
													"response": []
												},
												{
													"name": "[AS] Create User With Applied loan",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "669f2911-d6a6-443d-9670-70eb83e37a34",
																"exec": [
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "e3676aa6-5c36-4efa-bf61-af513bfcf74f",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PERSON_ID_2\", pm.response.json().personId);",
																	"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json().loanApplicationId);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation/userWithAppliedLoan",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"user",
																"creation",
																"userWithAppliedLoan"
															]
														}
													},
													"response": []
												},
												{
													"name": "[AS] Approve Loan via Admin",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "85a66af4-9b62-4ce5-a33f-e7aaac034b11",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
																	"    pm.environment.set(\"LOAN_TYPE\", 2);",
																	"}",
																	"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 321);",
																	" }",
																	"",
																	"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
																	"           pm.environment.set(\"LOAN_TYPE\", 52);",
																	"}"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "e5125129-4f52-4bf4-b3f8-87d040fdfcc8",
																"exec": [
																	"pm.test(\"Status code is 200 found\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});   ",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "decision",
																	"value": "1",
																	"type": "text"
																},
																{
																	"key": "loan_limit",
																	"value": "50000",
																	"type": "text"
																},
																{
																	"key": "notes",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "loan_term_set",
																	"value": "",
																	"type": "text"
																},
																{
																	"key": "eligible_loan_type_ids[]",
																	"value": "{{LOAN_TYPE}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submit",
																	"type": "text"
																}
															],
															"options": {
																"formdata": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/approveReject/id/{{PERSON_ID_2}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"approveReject",
																"id",
																"{{PERSON_ID_2}}"
															]
														},
														"description": "Approve loan:\n      This is what happens when an admin clicks \"Approve\" on a pending loan application.\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, MX, TZ and KE\n     \n       @return [ReponseEntity] of [String] since Server Api returns text/html"
													},
													"response": []
												},
												{
													"name": "[AS] Accept loan offer on app",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "85c4027c-67d7-4923-9f48-29fcb9aa33e8",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "85ad5daf-29ba-4181-8ff8-ef14b5c002ee",
																"exec": [
																	"pm.test(\"Status code is 200\", function (err, response) {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loan/user_accept_offer",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"v2",
																"loan",
																"user_accept_offer"
															]
														},
														"description": "This endpoint allows user to simulate accepting loan offer on the mobile app.\n\n\tThe only argument that is required for this endpoint is the phonenumber of the user who is applying for the loan.\n\t\n\t@param phoneNumber is mandatory\n\t\n\t-----------------------------------------------------------------------------\n\tTypical request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n       \n       \n       Implementation:\n       KE"
													},
													"response": []
												},
												{
													"name": "Mark payment as sent from admin",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "b2043921-b353-4d57-9531-bd9f6c74b2e0",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "5ba8eacc-95f1-4fab-a645-f345b5f939ff",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"MM/DD/YYYY, hh:mm A\"));",
																	"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
																	"",
																	"//Set the correct rails provider that match the country",
																	"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.23);",
																	"   ",
																	"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 1500);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.15);",
																	"  ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"TZ\")) { //If in TZ",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"TZ_TIGO\");",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 30000);",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.10);",
																	"   ",
																	"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
																	"    pm.environment.set(\"LOAN_AMOUNT_DISBURSED\", 3000);",
																	"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
																	"    pm.environment.set(\"INTEREST_RATE\", 0.05);",
																	"   ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "transaction_amount",
																	"value": "3000",
																	"type": "text"
																},
																{
																	"key": "confirmation_number",
																	"value": "{{CONFIRMATION_NUMBER}}",
																	"type": "text"
																},
																{
																	"key": "transaction_date",
																	"value": "{{TIME_NOW_SEND_PAYMENT}}",
																	"description": "10/11/2018, 11:25 AM",
																	"type": "text"
																},
																{
																	"key": "mno_provider_name",
																	"value": "{{MNO-PROVIDER}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {
																"urlencoded": {}
															}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/addDisbursement/id/{{PERSON_ID_2}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"addDisbursement",
																"id",
																"{{PERSON_ID_2}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Backdate active Loan",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "beeaad94-cbc5-4b6c-ae98-c5898f2be5b5",
																"exec": [
																	"pm.test(\"Status code is 200\", function() {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "06e6ff94-dac1-4633-9f65-7800ce72c3a7",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"//Setup date",
																	"var moment = require('moment');",
																	"var backDatedDay = moment().subtract(22, 'day').format(\"YYYY-MM-DD\");",
																	"pm.environment.set('DATE_TO_BACKDATE_TO', backDatedDay);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Cookie",
																"value": "PHPSESSID={{PHP_SESSION_COOKIE}}"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "disbursement_date",
																	"value": "{{DATE_TO_BACKDATE_TO}}",
																	"description": "{{DATE_TO_BACKDATE_TO}}",
																	"type": "text"
																},
																{
																	"key": "submit",
																	"value": "Submitting...",
																	"type": "text"
																}
															],
															"options": {}
														},
														"url": {
															"raw": "{{SERVER_API_BASE_URL}}/admin/people/changeDisbursement/id/{{PERSON_ID_2}}/loan_application_id/{{LOAN_APPLICATION_ID}}",
															"host": [
																"{{SERVER_API_BASE_URL}}"
															],
															"path": [
																"admin",
																"people",
																"changeDisbursement",
																"id",
																"{{PERSON_ID_2}}",
																"loan_application_id",
																"{{LOAN_APPLICATION_ID}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Util] - Setup user data by personId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "bdf834c2-95da-45eb-946e-de3d411b2428",
																"exec": [
																	" pm.test(\"Status code is 200\", function () {",
																	"     pm.response.to.have.status(200);",
																	" });"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "8bd6464d-719d-40ab-803e-16f55d28d6f3",
																"exec": [
																	"setTimeout(function(){}, [30000]);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/loancollections/uploadUserDataToSnowflake/personId/{{PERSON_ID_2}}",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"utility",
																"loancollections",
																"uploadUserDataToSnowflake",
																"personId",
																"{{PERSON_ID_2}}"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create 2 partners with 0 entrance and exit amounts",
											"item": [
												{
													"name": "[Helper] - Create a collection partner 1",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "69d78264-4b9c-4ac8-9f82-66afd2cc40f4",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_1\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_1\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config partner 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "283d80d8-2bff-4983-bcb7-befde323d3b2",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "f373a3e2-2970-4ed7-8fa8-ad5c97037b12",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] - Create a collection partner 2",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "313d212a-79d4-4498-b51a-5004d739f66a",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.environment.set(\"PARTNER_ID_2\", pm.response.json().id);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"PARTNER_2\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner 2\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
															"options": {
																"raw": {}
															}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"collection_partner"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner delivery config - partner 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "6ad6c3fe-2ac6-4cef-8306-1b89ec52ef0b",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "e4f9f2ac-4bc0-41bc-a164-5e69de9ea4c1",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_2}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"collection_partner",
																"delivery_channel"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "83e28623-fdab-4d90-8476-4b9657414fd7",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "63205e4d-2907-4e17-8042-f1e5fa003f8f",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create partner_segmentation_config",
											"item": [
												{
													"name": "Create a partner_segmentation for  cured bucket",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "975ab3de-48ff-4322-b70e-2fccd1a53b39",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "3581bfc7-de6d-42da-9a3b-0aa205805397",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_cured\",\n\t\"config\": {\"type\":\"Bucket\",\"id\":1},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "e6c6b88d-213f-4392-9cba-364b0210dc4e",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "d869ce4b-e0a5-4d18-bcd4-00b0d42752cc",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_CURED\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation for  DoNotWork bucket",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "75b02372-aecd-416b-9de6-98d89f86cc23",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "4e82c8ea-3830-4c3b-9e7c-98778bbc71c0",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_do_not_work\",\n\t\"config\": {\"type\":\"Bucket\",\"id\":2},\n\t\"user_id\": 1,\n\t\"description\": \"Create a partner segmentation with type PercentSegment\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "e5dd5d18-ebe2-4226-bb1e-8e76813b748e",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "65097b88-5d5a-4c25-b80e-3022c0e22128",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_DO_NOT_WORK\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a partner_segmentation with amountOwned",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "2dc3abc8-e85f-435c-a7dd-68c08666b31c",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "31669ee2-01ee-4e77-b979-869cb60c1673",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"name\": \"partner_seg_for_amount_owned\",\n\t\"config\": {\"type\":\"AmountOwnedSegment\",\"cases\":[{\"condition\":{\"from\":0,\"to\":5000},\"output\":{\"type\":\"Partner\",\"id\":{{PARTNER_ID_1}}}},{\"condition\":{\"from\":5000},\"output\":{\"type\":\"Partner\",\"id\":{{PARTNER_ID_2}}}}]},\n\t\"user_id\": 1,\n\t\"description\": \"Create a AmountOwnedSegment partner_segmentation\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"partner_segmentation"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Helper] Get partner_segmentation_config_id",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "6e99f90f-49fe-44e1-9b2c-a1c6ee3faae8",
																"exec": [
																	"setTimeout(function(){}, [10000]);",
																	"",
																	"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
																	"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "55b534d0-534f-4ad7-b9cd-e7186a58aced",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.environment.set(\"PARTNER_SEG_1\", pm.response.json().id);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config/latest",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"partner_segmentation_config",
																"latest"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "74e8f9e4-4f3a-49a2-a6fb-3160c89dd8c9",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "46ff4600-ffb6-4635-8fd9-90bf86af11ad",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "create bucket",
											"item": [
												{
													"name": "Create a bucket cured",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "bec63c9a-b809-48e7-bdcf-dc01c8578cfc",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "e7cf6c47-4d07-4c94-9b23-7e5748e57627",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"config_id\": {{PARTNER_SEG_CURED}},\n    \"description\": \"Cured account\",\n    \"name\": \"Cured\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket DoNotWork",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "b7ad6e1a-ea37-4b60-a78b-771e5f8c5d88",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "11cadb82-89ba-4a33-9d6a-26d7ae3473ce",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n        \"config_id\": {{PARTNER_SEG_DO_NOT_WORK}},\n        \"description\": \"Irremediable accounts'\",\n        \"name\": \"DoNotWork\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
															"host": [
																"{{ACCEPTANCE_SERVICE_BASE_URL}}"
															],
															"path": [
																"loancollections",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 1",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "2ea091ca-a1ac-4565-8943-6adf753015d6",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "89e84c2f-2251-4fc3-b921-5657af50e091",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_1}},\n\"description\": \"Test_Bucket_1\",\n\"name\": \"Test_Bucket_1\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create a bucket 2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "4598c211-d625-4541-a7f5-74a56bc236bf",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "aab0e1c1-c7c3-411c-ac9e-1f03ea0918c8",
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"",
																	"pm.environment.set(\"BUCKET_ID_2\", pm.response.json().personId);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\"config_id\": {{PARTNER_SEG_1}},\n\"description\": \"Test_Bucket_2\",\n\"name\": \"Test_Bucket_2\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"segmentation",
																"bucket"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create amountOwned bucket_segmentation with bucket_1 and bucket_2",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"id": "54abfc97-e104-4bc3-a3d2-eac8315319d6",
																"exec": [
																	"var token = \"non_production_non_senstive_token\";",
																	"var moment = require('moment');",
																	"var timeStamp = moment().unix() ;",
																	"",
																	"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
																	"",
																	"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
																	"var hash = MD5(token + userId + (timeStamp * 1000));",
																	"",
																	"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"id": "706191e9-469d-49c2-b687-a1c5d07a9d55",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-Authorization",
																"type": "text",
																"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"config\": {\n        \"type\": \"AmountOwnedSegment\",\n        \"cases\": [\n            {\n                \"condition\": {\n                    \"from\": 0,\n                    \"to\": 5000\n                },\n                \"output\": {\n                    \"type\": \"Bucket\",\n                    \"id\": {{BUCKET_ID_1}}\n                }\n            },\n            {\n                \"condition\": {\n                    \"from\": 5000\n                },\n                \"output\": {\n                    \"type\": \"Bucket\",\n                    \"id\": {{BUCKET_ID_2}}\n                }\n            }\n        ]\n    },\n    \"description\": \"Create a bucket segmentation\"\n}",
															"options": {}
														},
														"url": {
															"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
															"host": [
																"{{LOAN_COLLECTIONS_BASE_URL}}"
															],
															"path": [
																"api",
																"v1",
																"bucket_segmentation"
															]
														}
													},
													"response": []
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Trigger payment_plan - updates plans",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f9d691a-0975-48ab-b01e-8c77ad207735",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Payment plan processing started\", function () {",
													"    pm.response.to.have.body(\"{\\\"message\\\":\\\"Payment plan processing started\\\"}\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Authorization",
												"value": "{{AUTHORIZATION_TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/payment_plan/cron",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"payment_plan",
												"cron"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Trigger account processing - amount owned segmentation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "58d00299-7b33-4ce5-ace8-3d266750507d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.test(\"Verify response returned is New Process started\", function() {",
													"    var response = pm.response.json();",
													"    pm.expect(jsonBody).to.eql(\"New process started\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Authorization",
												"value": "{{AUTHORIZATION_TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/account_processing/run",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"account_processing",
												"run"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Account Processing] - should be DONE",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ff40a5c3-6e9e-4fa2-a563-19b309dd1206",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonBody = JSON.parse(responseBody);",
													"",
													"pm.test(\"Verify account_processing wa DONE\", function () {",
													"    var response = pm.response.json();",
													"    pm.expect(response.stage).to.eql(\"done\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "959e4a29-a47e-4049-811f-7d9a5596ff79",
												"exec": [
													"setTimeout(function(){}, 15000);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/account_processing/latest",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"account_processing",
												"latest"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Test that account 1 was assigned to partner 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e50f3d83-0dff-4255-8ba8-b44b772eef10",
												"exec": [
													"// Fix loan number creation on acceptance service",
													"// https://talamobile.atlassian.net/browse/RPMT-240",
													"// pm.test(\"Status code is 200\", function () {",
													"//     pm.response.to.have.status(200);",
													"// });",
													"",
													"// var jsonBody = JSON.parse(responseBody);",
													"",
													"// pm.test(\"Verify account 1 was assigned to partner 1\", function () {",
													"//     var response = pm.response.json();",
													"//     pm.expect(response).personId = {PERSON_ID_1};",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID_1}}",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection",
												"person_id",
												"{{PERSON_ID_1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Test] - Test that account 2 was assigned to partner 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a62ab358-c9e6-4ab8-b330-fa7fb8796e3b",
												"exec": [
													"// Fix loan number creation on acceptance service",
													"// https://talamobile.atlassian.net/browse/RPMT-240",
													"// pm.test(\"Status code is 200\", function () {",
													"//     pm.response.to.have.status(200);",
													"// });",
													"",
													"// var jsonBody = JSON.parse(responseBody);",
													"",
													"// TODO: Enable creation of loan of more than 5000 in acceptance so as to test this",
													"// pm.test(\"Verify account 2 was assigned to partner 2\", function () {",
													"//     var response = pm.response.json();",
													"//     pm.expect(response).personId = {PERSON_ID_2};",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{AUTHORIZATION_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID_2}}",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection",
												"person_id",
												"{{PERSON_ID_2}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "17c0f464-f233-4bdf-a070-0c3974b48838",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ecc21294-fb36-4cdd-97fd-57eb84c02c8b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "[MX,PH] Send Automated SMS for PTPs",
			"item": [
				{
					"name": "setup data first",
					"item": [
						{
							"name": "Truncate data",
							"item": [
								{
									"name": "[Util] - Truncate data on all partner_segmentation_configs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8d4cf257-70e4-4776-8ab9-06fbfe3e8bc1",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/partner_segmentation_config",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"partner_segmentation_config"
											]
										},
										"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all bucket_segmetation_configs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9891e8bf-fb44-42a1-b34e-bf27a63fb68c",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket_segmentation_config",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"bucket_segmentation_config"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on delivery_channel",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c6b64c61-71a0-4ae8-9a5f-90e9bf37b3ac",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/delivery_channel",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"delivery_channel"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on collection_partner",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "20836a61-551b-402a-b2fe-d857f95a8d9c",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"collection_partner"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all bucket",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d0d2989f-f341-4616-9032-56d75dbc2854",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all loan_collection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a5bd099-e46d-4853-ad29-579e656ea7b9",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection"
											]
										},
										"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
									},
									"response": []
								},
								{
									"name": "[Util] - Truncate data on all loan_collection_history",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "44f3e0fd-9c60-4f09-8aa1-0aeb8ca86b48",
												"exec": [
													" pm.test(\"Status code is 204 No Content\", function () {",
													"     pm.response.to.have.status(204);",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"loan_collection_history"
											]
										},
										"description": "loan, loan_application, loan_type, people, people_additional_data, people_balance"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create a partner with 0 entrance and exit amounts",
							"item": [
								{
									"name": "[Helper] - Create a collection partner 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "80596b86-ea0a-42cb-a980-5f645cf2b963",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "212dc5c5-2bb8-4de1-9ebf-071724f84cc5",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"PARTNER_1\",\n    \"inhouse\": 1,\n    \"active\": 1,\n    \"description\": \"partner\",\n    \"entranceAmount\": 0,\n    \"exitAmount\": 0,\n    \"daysThreshhold\": 30\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/collection_partner",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"collection_partner"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a partner delivery config partner 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6d2397b7-5a5a-4e1c-8a8c-b9f57ccc4a12",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c4580bb2-5ac0-46ae-bda5-a0f76ec85df1",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"collection_partner_id\":{{PARTNER_ID_1}},\n\"from_address\": \"Tala\",\n\"email_address\": [\"Test@tala.co\"],\n\"title_template\": \"{country}{type}\",\n\"handover_body_template\": \"Enclosed is your {type} file ({url}) for {date_today}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"takeback_body_template\": \"Enclosed is your {type} file ({url}) for {date_tomorrow}. Immediately close and return these accounts in your systems and cease all future actions. Please confirm the number of files received within 24 hours.\",\n\"repayments_body_template\":\"Enclosed is the download link for your payment file for payments collected over the last 24 hours: <S3 direct download link>\",\n\"in_out_body_template\": \"Enclosed is your In and Out files for {date_today}.In file: {in_file_url} Out file: {out_file_url}. Please reply to this e-mail confirming number and amount received within 24 hours.\",\n\"password\": \"1234\",\n\"type\": \"email\"\n\t\n}\n",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/collection_partner/delivery_channel",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"collection_partner",
												"delivery_channel"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a8944251-ea87-4d89-8861-d18b12c2374b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f810b2b6-d1ca-4643-a7a4-8c8c4afdb618",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create partner_segmentation_config",
							"item": [
								{
									"name": "Create a partner_segmentation for  bucket",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c379e89e-5f46-4196-b0a7-1e7a8874d38c",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2984989d-0c86-4288-b856-bb06a79ea4cf",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"partner_seg_for_partner_1\"\n    ,\"description\":\"Create a partner segmentation with type Partner\",\n    \"config\":{\"type\":\"Partner\",\"id\":1}\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/partner_segmentation",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"partner_segmentation"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "18ec0c3b-e12a-4899-923b-17603dffb109",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1b83424e-a98a-4c2f-848b-99983a1ba4db",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create bucket",
							"item": [
								{
									"name": "Create a bucket cured",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4944524e-a461-4195-adfd-d73b095b39a6",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ad0dbd73-c120-4a19-9e3f-583aa9f3cce6",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"cured\",\n    \"config_id\":1,\n    \"description\":\"Cured accounts\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"segmentation",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a bucket DoNotWork",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f4a527ca-6fc2-4802-9f81-2a24fbdbafde",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "18387c6d-7978-499d-9444-1520d5ef393c",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"config_id\":1,\n    \"description\": \"Irremediable accounts'\",\n    \"name\": \"DoNotWork\"\n}\n",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"segmentation",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a bucket 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ca8e7e13-e4c3-46d1-bbaa-585c925ab000",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1386554f-ad18-4c96-8ef9-c58a5703d22f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"config_id\": {{PARTNER_SEG_1}},\n\"description\": \"Test_Bucket_1\",\n\"name\": \"Test_Bucket_1\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/segmentation/bucket",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"segmentation",
												"bucket"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Helper] Get bucket 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a1a5d71a-4003-4fec-bf92-617151d01987",
												"exec": [
													"setTimeout(function(){}, [10000]);",
													"",
													"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
													"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "666ac55c-7bdf-4689-afb6-319519c4afec",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.environment.set(\"BUCKET_1\", pm.response.json().id);",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phoneNumber\": \"{{PHONE_NUMBER}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/bucket/latest",
											"host": [
												"{{ACCEPTANCE_SERVICE_BASE_URL}}"
											],
											"path": [
												"loancollections",
												"bucket",
												"latest"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a bucket_segmentation",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "98d2484e-d2cf-4e4d-b635-e5f055abb086",
												"exec": [
													"var token = \"non_production_non_senstive_token\";",
													"var moment = require('moment');",
													"var timeStamp = moment().unix() ;",
													"",
													"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
													"",
													"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
													"var hash = MD5(token + userId + (timeStamp * 1000));",
													"",
													"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1556b56a-0084-41af-92b2-0f4d94a69e50",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Authorization",
												"type": "text",
												"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\":\"PTP Test\",\"config\":{\"type\":\"Bucket\",\"id\":3}\n\n}",
											"options": {}
										},
										"url": {
											"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/bucket_segmentation",
											"host": [
												"{{LOAN_COLLECTIONS_BASE_URL}}"
											],
											"path": [
												"api",
												"v1",
												"bucket_segmentation"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "366a9e55-eeb3-4ae8-ba43-46ed3f8c58eb",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5577a0c6-ae9c-4c00-b370-7de5c630e937",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "61b6c38e-14bc-4fa3-8eef-083f5f331d65",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "13134c68-ca30-4ba5-9800-96ecb4c11c1c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Create User from Mobile App",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "41077241-283d-4cf9-ab7c-cdea335ccd61",
								"exec": [
									"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
									"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "36ac4e39-8f4a-4b67-ae07-f8833ece1b99",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"PERSON_ID\", pm.response.json().data.personId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"utility",
								"v2",
								"user",
								"creation"
							]
						},
						"description": "Create a new user:\n      This is what happens when the user signs up via the Android app\n     \n      @param phoneNumber in the request body\n     \n      Example request:\n      {\n      \"phoneNumber\":\"639277115175\"\n       }\n     \n       Implemented for:\n       PH, KE, TZ, MX\n     \n       @return [Map] which is converted to JSON by Spring"
					},
					"response": []
				},
				{
					"name": "Admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e58de94c-73d8-47aa-a0b4-425bf1b6ff59",
								"exec": [
									"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
									"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
									"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0ecbacad-ac17-4450-8a38-8e988ed7fac5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{ADMIN_LOGIN_USERNAME}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{ADMIN_LOGIN_PASSWORD}}",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"site",
								"authQA"
							]
						},
						"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
					},
					"response": []
				},
				{
					"name": "Add custom loan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b64350e4-d49d-4f23-b97a-0e1911020eb4",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5ece4f92-6f65-45e8-940b-a37d68ad727f",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "amount",
									"value": "3000",
									"type": "text"
								},
								{
									"key": "interest_rate",
									"value": "15",
									"type": "text"
								},
								{
									"key": "repayment_frequency",
									"value": "21",
									"type": "text"
								},
								{
									"key": "repayment_counts",
									"value": "1",
									"type": "text"
								},
								{
									"key": "submit",
									"value": "Submit",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/admin/people/addCustomLoan/id/{{PERSON_ID}}",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"admin",
								"people",
								"addCustomLoan",
								"id",
								"{{PERSON_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Confirm loan is sent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56abe220-dd5f-4317-98c2-e1abf5d70c68",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm the payment is sent to customer.\", function (err, response) {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.expect(jsonBody[0].status).to.eql(8);",
									"});",
									"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json()[0].id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3e1dbf45-44f3-4549-a63a-11a98f70d56e",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loans/loan_application/person_id/{{PERSON_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loans",
								"loan_application",
								"person_id",
								"{{PERSON_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert record in Loan Collection Table",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56abe220-dd5f-4317-98c2-e1abf5d70c68",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d75c9f0c-dde8-4aa6-a96f-59100213745b",
								"exec": [
									"setTimeout(function(){}, [20000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"loanApplicationId\": {{LOAN_APPLICATION_ID}},\n    \"personId\": {{PERSON_ID}},\n    \"partnerId\": 1,\n    \"amountOwed\": {{AMOUNT_OWED}},\n    \"bucketSegmentationConfigId\": 1,\n    \"partnerSegmentationConfigId\": 1,\n    \"bucketId\": 3,\n    \"active\": 1\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Insert record in Loan Collection History Table",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a607514b-408e-467f-8cb9-59e62cc15345",
								"exec": [
									"setTimeout(function(){}, [20000]);",
									"",
									"var moment = require('moment');",
									"pm.environment.set(\"COLLECTION_DATE\", moment().subtract('days', 10).format(\"YYYY-MM-DD\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4889177a-d1e1-490e-94f0-d97ef781c343",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonBody = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"LOAN_COLLECTION_ID\", jsonBody.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"loanApplicationId\": {{LOAN_APPLICATION_ID}},\n    \"personId\": {{PERSON_ID}},\n    \"partnerId\": 1,\n    \"amountOwed\": {{AMOUNT_OWED}},\n    \"bucketSegmentationConfigId\": 1,\n    \"collectionDate\": \"{{COLLECTION_DATE}}\",\n    \"partnerSegmentationConfigId\": 1,\n    \"bucketId\": 3,\n    \"active\": 1\n}\n",
							"options": {}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_history",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection_history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if user is added to in-house collections ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "532ed563-6738-4dc6-bd69-303713fe413a",
								"exec": [
									" pm.test(\"Status code is 200\", function () {",
									"     pm.response.to.have.status(200);",
									" });",
									" ",
									" //Check if the person has gone into loan collections.",
									"pm.test(\"Verify customer has entered in house collections\", function () {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.expect(jsonBody[0].partnerId).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a0b40464-017a-48e0-9a45-f1c81077c703",
								"exec": [
									"",
									"var loanAmount = pm.environment.get(\"LOAN_AMOUNT_DISBURSED\");",
									"var interestRate = pm.environment.get(\"INTEREST_RATE\");",
									"var interestAmount = (interestRate * loanAmount);",
									"var amountOwed = (parseInt(interestAmount) + parseInt(loanAmount));",
									"",
									"console.log(\"amount owed : \", amountOwed);",
									"console.log(\"intereset amount : \", interestAmount);",
									"console.log(\"interest rate : \", interestRate);",
									"console.log(\"amount owed : \", amountOwed);",
									"",
									"pm.environment.set(\"AMOUNT_OWED\", amountOwed);",
									"",
									"//create the authorisation token",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"var moment = require('moment');",
									"var dt = moment().format(\"YYYY-MM-DD\");",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									"",
									"setTimeout(function(){}, [10000]);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection/person_id/{{PERSON_ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection",
								"person_id",
								"{{PERSON_ID}}"
							]
						},
						"description": "Validates that added user is added to in-house collections queue. "
					},
					"response": []
				},
				{
					"name": "Create a call result",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "438206e3-0402-4ff9-8f4c-3791eebff3fa",
								"exec": [
									"",
									"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
									"    pm.environment.set(\"ADMIN_USER_ID\", 216);",
									"}",
									"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 213);",
									" }",
									"",
									"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
									"           pm.environment.set(\"ADMIN_USER_ID\", 215);",
									"}",
									"",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"",
									"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
									"if (!dayCounter)",
									"{",
									"    // set default if not exists",
									"    dayCounter = 1;",
									"}",
									"",
									"var moment = require('moment');",
									"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
									"dayCounter += 1;",
									"pm.environment.set('DATE_COUNTER', dayCounter);",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									"",
									"setTimeout(function(){}, [10000]);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "eee7990d-c275-4edc-9bcc-436640f705c2",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.environment.set(\"CALL_RESULT_ID\", jsonBody.id);",
									"});",
									"",
									"const acceptanceServiceRequest = {",
									"    url: pm.environment.get(\"ACCEPTANCE_SERVICE_BASE_URL\").toString() + \"/loancollections/call_result/\" +  pm.environment.get(\"CALL_RESULT_ID\"),",
									"    method: 'GET',",
									"    header: 'Content-Type:application/json',",
									"};",
									"",
									"//Perform verifications using entries in the DB",
									"pm.sendRequest(acceptanceServiceRequest, function (err, response) {",
									"    if(err) {",
									"        console.log(err);",
									"    } else {",
									"        pm.test(\"Call result table has been updated with the customers data.\", function () {",
									"            pm.expect(response.json().id).to.eql(pm.environment.get(\"CALL_RESULT_ID\"));",
									"            pm.expect(response.json().dispositionId).to.eql(3);",
									"            pm.expect(response.json().loanApplicationId).to.eql(parseInt(pm.environment.get(\"LOAN_APPLICATION_ID\")));",
									"",
									"    });",
									"    }});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"type": "text",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"agent_user_id\": {{ADMIN_USER_ID}},\n\"comment\": \"test\",\n\"disposition_id\": 3,\n\"is_active\": true,\n\"loan_application_id\": {{LOAN_APPLICATION_ID}},\n\"loan_still_owed_amount\": {{AMOUNT_OWED}},\n\"local_ptp_date\": {{TIME_LOAN_COLLECTIONS_PTP}},\n\"nonpay_reason_id\": 2,\n\"ptp_amount\": {{PTP_AMOUNT}}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/loan_application/{{LOAN_APPLICATION_ID}}/call_result?onCreate=SEND_SMS",
							"host": [
								"{{LOAN_COLLECTIONS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"loan_application",
								"{{LOAN_APPLICATION_ID}}",
								"call_result"
							],
							"query": [
								{
									"key": "onCreate",
									"value": "SEND_SMS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify customer does recieve sms template ID 614",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "55c935f4-f609-4ab0-a493-87df2fae2785",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Confirm user receives SMS.\", function(err, response) {",
									"     pm.expect(pm.response.json().processingStatus).to.eql(2);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8fa56234-4fb2-4e38-b01b-b9521c8ea6d8",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/otp/to/{{PHONE_NUMBER}}/template/{{TEMPLATE_614}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"utility",
								"v2",
								"otp",
								"to",
								"{{PHONE_NUMBER}}",
								"template",
								"{{TEMPLATE_614}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify customer does recieve sms template ID 615",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d2c6554-715e-42be-86d8-281ecfa31234",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Confirm user receives SMS.\", function(err, response) {",
									"     pm.expect(pm.response.json().processingStatus).to.eql(2);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9832337a-befd-4395-a319-cb8c9585e27f",
								"exec": [
									"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
									"   template = 614;",
									"}",
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/otp/to/{{PHONE_NUMBER}}/template/{{TEMPLATE_615}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"utility",
								"v2",
								"otp",
								"to",
								"{{PHONE_NUMBER}}",
								"template",
								"{{TEMPLATE_615}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "https://talamobile.testrail.io/index.php?/suites/view/2&group_by=cases:section_id&group_order=asc&group_id=1585",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f40f3017-fb0d-429f-9eee-214b13905cab",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "64aa8c1d-3a35-4740-8e5e-eb5a780e6c3f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "[CC15051][Global] Payment Attribution",
			"item": [
				{
					"name": "Create User from Mobile App ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "41077241-283d-4cf9-ab7c-cdea335ccd61",
								"exec": [
									"pm.environment.set(\"PHONE_NUMBER\", pm.environment.get(\"COUNTRY_PHONE_CODE_WITH_PREFIX\")+(Math.floor(Math.random() * (999999 - 100000)) + 100000).toString());",
									"console.log(pm.environment.get(\"PHONE_NUMBER\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "36ac4e39-8f4a-4b67-ae07-f8833ece1b99",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"PERSON_ID\", pm.response.json().data.personId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"phoneNumber\":\"{{PHONE_NUMBER}}\"\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/user/creation",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"utility",
								"v2",
								"user",
								"creation"
							]
						},
						"description": "Create a new user through Mobile App following sign up flow. Requires phoneNumber for application.\nExample request:\n    {\n        \"phoneNumber\":\"639277115175\"\n    }\n    Implemented in Acceptance Service for PH, KE, TZ, MX\nThis invocation should return a created user details Map in JSON format"
					},
					"response": []
				},
				{
					"name": "Admin login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e58de94c-73d8-47aa-a0b4-425bf1b6ff59",
								"exec": [
									"//Set environment variable PHP_SESSION_COOKIE to the PHP session cookie obtained in response",
									"var phpSessionCookie = postman.getResponseCookie(\"PHPSESSID\").value;",
									"postman.setEnvironmentVariable(\"PHP_SESSION_COOKIE\",phpSessionCookie);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0ecbacad-ac17-4450-8a38-8e988ed7fac5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{ADMIN_LOGIN_USERNAME}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{ADMIN_LOGIN_PASSWORD}}",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/site/authQA",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"site",
								"authQA"
							]
						},
						"description": "Login to admin and retrieve PHP session cookie to use it in futher requests made using admin"
					},
					"response": []
				},
				{
					"name": "Add custom loan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7217b0b9-d828-409f-8771-679faf4a5600",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f047e263-80e4-471b-9f8d-4bd411e6912d",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "amount",
									"value": "3000",
									"type": "text"
								},
								{
									"key": "interest_rate",
									"value": "15",
									"type": "text"
								},
								{
									"key": "repayment_frequency",
									"value": "21",
									"type": "text"
								},
								{
									"key": "repayment_counts",
									"value": "1",
									"type": "text"
								},
								{
									"key": "submit",
									"value": "Submit",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/admin/people/addCustomLoan/id/{{PERSON_ID}}",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"admin",
								"people",
								"addCustomLoan",
								"id",
								"{{PERSON_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[C15064 ] Make payment as received on admin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f72987ab-2a40-4959-beee-6a7ce9800791",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									"",
									"var moment = require('moment');",
									"pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().format(\"YYYY/MM/DD, hh:mm A\"));",
									"",
									"pm.environment.set(\"CONFIRMATION_NUMBER\", Math.random().toString(36).substr(2, 6));",
									"pm.environment.set(\"TRANSACTION_ACCOUNT_REFERENCE_NUMBER\", Math.random().toString(36).substr(2, 7));",
									"",
									"",
									"//Set the correct rails provider that match the country",
									"if((pm.environment.get(\"COUNTRY\")) === (\"MX\")) { //If in MX",
									"    pm.environment.set(\"MNO-PROVIDER\", \"MX_STP\");",
									"    pm.environment.set(\"TIME_NOW_SEND_PAYMENT\",moment().subtract(9, 'hours').format(\"MM/DD/YYYY, hh:mm A\"));",
									"} else if((pm.environment.get(\"COUNTRY\")) === (\"PH\")) { //If in  PH",
									"    pm.environment.set(\"MNO-PROVIDER\", \"PH_COINS\");",
									"} else if((pm.environment.get(\"COUNTRY\")) === (\"KE\")) { //If in Kenya",
									"    pm.environment.set(\"MNO-PROVIDER\", \"KE_SAFARICOM\");",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "79fe286c-d397-4000-8c9c-88047e34bebf",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "transaction_amount",
									"value": "1050",
									"type": "text"
								},
								{
									"key": "confirmation_number",
									"value": "{{CONFIRMATION_NUMBER}}",
									"type": "text"
								},
								{
									"key": "transaction_date",
									"value": "{{TIME_NOW_SEND_PAYMENT}}",
									"type": "text"
								},
								{
									"key": "transaction_account_reference_number",
									"value": "",
									"type": "text"
								},
								{
									"key": "mno_provider_name",
									"value": "{{MNO-PROVIDER}}",
									"type": "text"
								},
								{
									"key": "submit",
									"value": "Submitting...",
									"type": "text"
								}
							],
							"options": {}
						},
						"url": {
							"raw": "{{SERVER_API_BASE_URL}}/admin/people/addRepayment/id/{{PERSON_ID}}",
							"host": [
								"{{SERVER_API_BASE_URL}}"
							],
							"path": [
								"admin",
								"people",
								"addRepayment",
								"id",
								"{{PERSON_ID}}"
							]
						},
						"description": "This endpoint simulates customer making a payment via admin panel. \n\nThe only value that the user has to specify is the transactionAmount. Unless the user wants to to send specific values for the body, they are generated in the pre-requisite script.\n\nhttps://talamobile.testrail.io/index.php?/cases/view/15064"
					},
					"response": []
				},
				{
					"name": "Data in loans.people_balance after a successful manual disbursement on admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "daa55101-a056-4225-bcd9-452526f79b23",
								"exec": [
									"pm.test(\"Status code is 200\", function(err, response) {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"PAYMENT_ID\", pm.response.json()[2].id);",
									"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json()[2].loanApplicationId);",
									"pm.environment.set(\"AMOUNT\", pm.response.json()[2].amount);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "00eb45e9-a566-465e-a445-9eb122a5f31b",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loans/people_balance/phone_number/{{PHONE_NUMBER}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loans",
								"people_balance",
								"phone_number",
								"{{PHONE_NUMBER}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Data in loans.people_balance after a successful manual disbursement on admin Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "daa55101-a056-4225-bcd9-452526f79b23",
								"exec": [
									"pm.test(\"Status code is 200\", function(err, response) {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.set(\"PAYMENT_ID\", pm.response.json()[2].id);",
									"pm.environment.set(\"LOAN_APPLICATION_ID\", pm.response.json()[2].loanApplicationId);",
									"pm.environment.set(\"AMOUNT\", pm.response.json()[2].amount);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "00eb45e9-a566-465e-a445-9eb122a5f31b",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loans/people_balance/phone_number/{{PHONE_NUMBER}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loans",
								"people_balance",
								"phone_number",
								"{{PHONE_NUMBER}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[C15053 , C15054] Assign payment attribution",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ba567889-e2ad-49d9-b74f-9212d17e820a",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									"",
									"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
									"    pm.environment.set(\"PARTNER_ID\", 1);",
									"    pm.environment.set(\"CALL_RESULT_ID\", 1);",
									"    ",
									"}",
									"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
									"           pm.environment.set(\"PARTNER_ID\", 5);",
									"    pm.environment.set(\"CALL_RESULT_ID\", 794);",
									" }",
									"",
									"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
									"            pm.environment.set(\"PARTNER_ID\", 9);",
									"    pm.environment.set(\"CALL_RESULT_ID\", 395);",
									"}",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"",
									"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
									"if (!dayCounter)",
									"{",
									"    // set default if not exists",
									"    dayCounter = 1;",
									"}",
									"",
									"var moment = require('moment');",
									"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
									"dayCounter += 1;",
									"pm.environment.set('DATE_COUNTER', dayCounter);",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01510dd9-d7e4-4ded-979e-c4fdbb940835",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Authorization",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {}
						},
						"url": {
							"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/loan_collection_payment",
							"host": [
								"{{LOAN_COLLECTIONS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"loan_collection_payment"
							]
						},
						"description": "https://talamobile.testrail.io/index.php?/cases/view/15053\nhttps://talamobile.testrail.io/index.php?/cases/view/15054"
					},
					"response": []
				},
				{
					"name": "[C15057 ] Assign payment attribution done twice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ba567889-e2ad-49d9-b74f-9212d17e820a",
								"exec": [
									"if(pm.environment.get(\"COUNTRY\") == \"KE\") {",
									"    pm.environment.set(\"PARTNER_ID\", 29);",
									"    pm.environment.set(\"CALL_RESULT_ID\", 2);",
									"    ",
									"}",
									"else if (pm.environment.get(\"COUNTRY\") == \"PH\"){",
									"           pm.environment.set(\"PARTNER_ID\", 5);",
									"    pm.environment.set(\"CALL_RESULT_ID\", 794);",
									" }",
									"",
									"else if (pm.environment.get(\"COUNTRY\") == \"MX\"){",
									"            pm.environment.set(\"PARTNER_ID\", 9);",
									"    pm.environment.set(\"CALL_RESULT_ID\", 395);",
									"}",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"",
									"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
									"if (!dayCounter)",
									"{",
									"    // set default if not exists",
									"    dayCounter = 1;",
									"}",
									"",
									"var moment = require('moment');",
									"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
									"dayCounter += 1;",
									"pm.environment.set('DATE_COUNTER', dayCounter);",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									"",
									"setTimeout(function(){}, [10000]);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01510dd9-d7e4-4ded-979e-c4fdbb940835",
								"exec": [
									"pm.test(\"Status code is 409 \", function() {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"type": "text",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/loan_collection_payment",
							"host": [
								"{{LOAN_COLLECTIONS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"loan_collection_payment"
							]
						},
						"description": "https://talamobile.testrail.io/index.php?/cases/view/15057"
					},
					"response": []
				},
				{
					"name": "[C15054 ] List of payment attribution",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "daa55101-a056-4225-bcd9-452526f79b23",
								"exec": [
									"pm.test(\"Status code is 200\", function(err, response) {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set(\"ID\", pm.response.json()[\"items\"][0].id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "00eb45e9-a566-465e-a445-9eb122a5f31b",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									"",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"",
									"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
									"if (!dayCounter)",
									"{",
									"    // set default if not exists",
									"    dayCounter = 1;",
									"}",
									"",
									"var moment = require('moment');",
									"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
									"dayCounter += 1;",
									"pm.environment.set('DATE_COUNTER', dayCounter);",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/loan_collection_payment",
							"host": [
								"{{LOAN_COLLECTIONS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"loan_collection_payment"
							]
						},
						"description": "https://talamobile.testrail.io/index.php?/cases/view/15054"
					},
					"response": []
				},
				{
					"name": "[C15063, C15062 ] Deactivate Payment Attribution",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ba567889-e2ad-49d9-b74f-9212d17e820a",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									"",
									"var token = \"non_production_non_senstive_token\";",
									"var moment = require('moment');",
									"var timeStamp = moment().unix() ;",
									"",
									"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
									"",
									"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
									"var hash = MD5(token + userId + (timeStamp * 1000));",
									"",
									"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
									"",
									"var dayCounter = pm.environment.get(\"DATE_COUNTER\");",
									"if (!dayCounter)",
									"{",
									"    // set default if not exists",
									"    dayCounter = 1;",
									"}",
									"",
									"var moment = require('moment');",
									"var dt = moment().add(dayCounter, 'day').format(\"YYYY-MM-DD\");",
									"dayCounter += 1;",
									"pm.environment.set('DATE_COUNTER', dayCounter);",
									"pm.environment.set('TIME_LOAN_COLLECTIONS_PTP', \"\\\"\" + dt + \"\\\"\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01510dd9-d7e4-4ded-979e-c4fdbb940835",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Authorization",
								"type": "text",
								"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/loan_collection_payment/{{ID}}",
							"host": [
								"{{LOAN_COLLECTIONS_BASE_URL}}"
							],
							"path": [
								"api",
								"v1",
								"loan_collection_payment",
								"{{ID}}"
							]
						},
						"description": "https://talamobile.testrail.io/index.php?/cases/view/15063\nhttps://talamobile.testrail.io/index.php?/cases/view/15062"
					},
					"response": []
				},
				{
					"name": "[C15061 ] Check if payment attribution is deactivated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "daa55101-a056-4225-bcd9-452526f79b23",
								"exec": [
									"pm.test(\"Status code is 200\", function(err, response) {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Confirm the payment attribution is deactivated.\", function (err, response) {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    pm.expect(jsonBody.status).to.eql(0);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "00eb45e9-a566-465e-a445-9eb122a5f31b",
								"exec": [
									"setTimeout(function(){}, [10000]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/loancollections/loan_collection_payment/{{ID}}",
							"host": [
								"{{ACCEPTANCE_SERVICE_BASE_URL}}"
							],
							"path": [
								"loancollections",
								"loan_collection_payment",
								"{{ID}}"
							]
						},
						"description": "https://talamobile.testrail.io/index.php?/cases/view/15061"
					},
					"response": []
				}
			],
			"description": "https://talamobile.testrail.io/index.php?/cases/view/15051",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "80fbc749-4fd0-487c-8d85-f64b2465732d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4f11eae8-0c51-4391-981d-a08a243d6083",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "[Global] five9",
			"item": [
				{
					"name": "five9 reports",
					"item": [
						{
							"name": "[Test] [404] Trigger five9 call segment report  with non-existent ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40ad78bf-a51a-4409-bf55-4113cab9a5e0",
										"exec": [
											" pm.test(\"Status code is 404\", function () {",
											"     pm.response.to.have.status(404);",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/five9report/40",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"five9report",
										"40"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Test C29857] Trigger five9 agent information report (1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2fcf5dbe-f4ff-4823-9aa6-7e3746af306f",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });",
											" ",
											"var jsonBody = JSON.parse(responseBody);",
											"pm.test(\"Verify status should be success\", function (err, response) {",
											"    pm.expect(jsonBody.status).to.eql(\"Success\");",
											"});",
											"",
											"pm.test(\"Verify call_log_report has an Id.\", function (err, response) {",
											"    pm.expect(jsonBody.reportId).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Verify call_log_report has report type of AGENT_INFORMATION\", function () {",
											"    pm.expect(jsonBody.reportType).to.eql(\"AGENT_INFORMATION\");",
											"});",
											"",
											"pm.environment.set(\"REPORT_ID\", pm.response.json().reportId);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8b376f76-5acd-4932-a58c-ae937aa436b4",
										"exec": [
											"//Setup date",
											"var moment = require('moment');",
											"let day = moment().subtract(3, 'day').format(\"YYYY-MM-DD\");",
											"startDate = day+\"T08:26+03:00\"",
											"let dayLater = moment().add(1, 'day').format(\"YYYY-MM-DD\");",
											"",
											"//use same day to reduce call segment size",
											"endDate = day+\"T10:26+03:00\"",
											"",
											"pm.environment.set(\"START_DATE\", startDate);",
											"pm.environment.set(\"END_DATE\", endDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"start_date_time\": \"{{START_DATE}}\",\n    \"end_date_time\": \"{{END_DATE}}\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/five9report/1?includeReportId=true",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"five9report",
										"1"
									],
									"query": [
										{
											"key": "includeReportId",
											"value": "true"
										}
									]
								},
								"description": "five9 reports"
							},
							"response": []
						},
						{
							"name": "[Test C29857] Verify snowflake agent information report on public table",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2fcf5dbe-f4ff-4823-9aa6-7e3746af306f",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });",
											" ",
											"var jsonBody = JSON.parse(responseBody);",
											" ",
											"pm.test(\"Verify entry has an Id.\", function (err, response) {",
											"    pm.expect(jsonBody.id).to.not.be.null;",
											"});",
											"pm.test(\"Verify is he correct one by verifying the reportId.\", function () {",
											"    pm.expect(jsonBody.five9ReportId).to.eql(pm.environment.get(\"REPORT_ID\"))",
											"});",
											"pm.test(\"Verify status should be uploaded_to_S3\", function () {",
											"    pm.expect(jsonBody.status).to.eql(\"UPLOADED_TO_S3\");",
											"});",
											"pm.test(\"Verify s3Path should not be null\", function () {",
											"    pm.expect(jsonBody.status).to.not.be.null;",
											"});",
											"pm.test(\"Verify folderName should not be null\", function () {",
											"    pm.expect(jsonBody.folderName).to.not.be.null;",
											"});",
											"pm.test(\"Verify reportName is Agent_Information\", function () {",
											"    pm.expect(jsonBody.folderName).to.eql(\"Snowflake_Data_Integration\");",
											"});",
											"",
											"pm.environment.set(\"FIVE9_REPORT_ID\", pm.response.json().id);",
											"pm.environment.set(\"SNOWFLAKE_RECORDS_ADDED_ON_REPORT_ROW\", pm.response.json().recordsAdded);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e2a8ed57-1a14-463b-84b2-2bdfda2213d1",
										"exec": [
											"setTimeout(function(){}, [30000]);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tableName\": \"REPORT\",\n    \"reportId\": \"{{REPORT_ID}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report"
									]
								},
								"description": "five9 reports"
							},
							"response": []
						},
						{
							"name": "[Test] [200] Download reports from S3",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tableName\": \"REPORT\",\n    \"reportId\": \"{{REPORT_ID}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report/download",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report",
										"download"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Test] [200] Test row Count from actual table and downloaded excel",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ada1ba8e-45c3-4bc8-9c71-d64bf248f166",
										"exec": [
											"//Fix Report download - Permissions",
											"//  pm.test(\"Status code is 200\", function () {",
											"//      pm.response.to.have.status(200);",
											"//  });",
											" ",
											"// var jsonBody = JSON.parse(responseBody);",
											"",
											"// We remove one row to remove the header row from the excel sheet",
											"// var count = (jsonBody.rowCount - 1);",
											"",
											"//This funcionality was reverted on loan collection until it's returned, we cannot confirm row count",
											"// pm.test(\"Verify rowCount provided on snowflake to the one's on the downloaded excel - should be equal\", function () {",
											"//     pm.expect(count).to.eql(parseInt(pm.environment.get(\"SNOWFLAKE_RECORDS_ADDED_ON_REPORT_ROW\")));",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reportName\": \"AGENT_INFORMATION\",\n    \"reportId\": \"{{REPORT_ID}}\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report/count",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Test C29858] Trigger five9 agent status report (2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e07c0627-8031-4612-8217-3ac279350db0",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"pm.test(\"Verify status should be success\", function (err, response) {",
											"    pm.expect(jsonBody.status).to.eql(\"Success\");",
											"});",
											"",
											"pm.test(\"Verify call_log_report has an Id.\", function (err, response) {",
											"    pm.expect(jsonBody.reportId).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Verify call_log_report has report type of AGENT_STATUS\", function () {",
											"    pm.expect(jsonBody.reportType).to.eql(\"AGENT_STATUS\");",
											"});",
											"",
											"pm.environment.set(\"REPORT_ID\", pm.response.json().reportId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a4ade6b4-f154-4a5e-9abd-cdb667de9a0c",
										"exec": [
											"//Setup date",
											"var moment = require('moment');",
											"let day = moment().subtract(3, 'day').format(\"YYYY-MM-DD\");",
											"startDate = day+\"T08:26+03:00\"",
											"let dayLater = moment().add(1, 'day').format(\"YYYY-MM-DD\");",
											"endDate = dayLater+\"T08:26+03:00\"",
											"",
											"pm.environment.set(\"START_DATE\", startDate);",
											"pm.environment.set(\"END_DATE\", endDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"start_date_time\": \"{{START_DATE}}\",\n    \"end_date_time\": \"{{END_DATE}}\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/five9report/2?includeReportId=true",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"five9report",
										"2"
									],
									"query": [
										{
											"key": "includeReportId",
											"value": "true"
										}
									]
								},
								"description": "five9 reports"
							},
							"response": []
						},
						{
							"name": "[Test C29858] Verify snowflake agent status report on public table",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "67b7d1c5-fa71-4d68-9225-3d9ad897150c",
										"exec": [
											"setTimeout(function(){}, [30000]);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "141a1f19-3b31-4ef9-82d8-73c05506eb4d",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });",
											" ",
											"var jsonBody = JSON.parse(responseBody);",
											" ",
											"pm.test(\"Verify entry has an Id.\", function (err, response) {",
											"    pm.expect(jsonBody.id).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Verify is he correct one by verifying the reportId.\", function () {",
											"    pm.expect(jsonBody.five9ReportId).to.eql(pm.environment.get(\"REPORT_ID\"))",
											"});",
											"",
											"pm.test(\"Verify status should be uploaded_to_S3\", function () {",
											"    pm.expect(jsonBody.status).to.eql(\"UPLOADED_TO_S3\");",
											"});",
											"",
											"pm.test(\"Verify s3Path should not be null\", function () {",
											"    pm.expect(jsonBody.status).to.not.be.null;",
											"});",
											"pm.test(\"Verify folderName should not be null\", function () {",
											"    pm.expect(jsonBody.folderName).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Verify reportName is Agent_Status\", function () {",
											"    pm.expect(jsonBody.folderName).to.eql(\"Snowflake_Data_Integration\");",
											"});",
											"",
											"pm.environment.set(\"FIVE9_REPORT_ID\", pm.response.json().id);",
											"pm.environment.set(\"SNOWFLAKE_RECORDS_ADDED_ON_REPORT_ROW\", pm.response.json().recordsAdded);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tableName\": \"REPORT\",\n    \"reportId\": \"{{REPORT_ID}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report"
									]
								},
								"description": "five9 reports"
							},
							"response": []
						},
						{
							"name": "[Test] [200] Get row Count from report",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a085da52-9326-4ef9-acc0-2af85fbebda2",
										"exec": [
											"//  pm.test(\"Status code is 200\", function () {",
											"//      pm.response.to.have.status(200);",
											"//  });",
											" ",
											"// var jsonBody = JSON.parse(responseBody);",
											"",
											"// We remove one row to remove the header row from the excel sheet",
											"// var count = (jsonBody.rowCount - 1);",
											"",
											"// pm.test(\"Verify rowCount provided on snowflake to the one's on the downloaded excel - should be equal\", function () {",
											"//     pm.expect(count).to.eql(parseInt(pm.environment.get(\"SNOWFLAKE_RECORDS_ADDED_ON_REPORT_ROW\")));",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report/download",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report",
										"download"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Test C29859] Trigger five9 call log report (3)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "04a06dba-8d3c-4574-9d9d-b5ccec37f422",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Verify status should be success\", function (err, response) {",
											"    pm.expect(jsonBody.status).to.eql(\"Success\");",
											"});",
											"",
											"pm.test(\"Verify call_log_report has an Id.\", function (err, response) {",
											"    pm.expect(jsonBody.reportId).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Verify call_log_report has report type of CALL_LOG\", function () {",
											"    pm.expect(jsonBody.reportType).to.eql(\"CALL_LOG\");",
											"});",
											"",
											"pm.environment.set(\"REPORT_ID\", pm.response.json().reportId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b8587728-35da-4818-9415-f70cca12940e",
										"exec": [
											"//Setup date",
											"var moment = require('moment');",
											"let day = moment().subtract(3, 'day').format(\"YYYY-MM-DD\");",
											"startDate = day+\"T08:26+03:00\"",
											"let dayLater = moment().add(1, 'day').format(\"YYYY-MM-DD\");",
											"",
											"//use same day to reduce call log size",
											"endDate = day+\"T11:26+03:00\"",
											"",
											"pm.environment.set(\"START_DATE\", startDate);",
											"pm.environment.set(\"END_DATE\", endDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"start_date_time\": \"{{START_DATE}}\",\n    \"end_date_time\": \"{{END_DATE}}\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/five9report/3?includeReportId=true",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"five9report",
										"3"
									],
									"query": [
										{
											"key": "includeReportId",
											"value": "true"
										}
									]
								},
								"description": "five9 reports"
							},
							"response": []
						},
						{
							"name": "[Test C29859] Verify snowflake call log report on public table",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "081ea1af-ed0c-4a67-958e-9e26b8414e13",
										"exec": [
											"setTimeout(function(){}, [30000]);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c3d821e4-8ed2-48f2-92f3-b4482b2e5dc2",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });",
											" ",
											"var jsonBody = JSON.parse(responseBody);",
											" ",
											"pm.test(\"Verify entry has an Id.\", function (err, response) {",
											"    pm.expect(jsonBody.id).to.not.be.null;",
											"});",
											"pm.test(\"Verify is he correct one by verifying the reportId.\", function () {",
											"    pm.expect(jsonBody.five9ReportId).to.eql(pm.environment.get(\"REPORT_ID\"))",
											"});",
											"pm.test(\"Verify status should be uploaded_to_S3\", function () {",
											"    pm.expect(jsonBody.status).to.eql(\"RUNNING_COMPLETE\");",
											"});",
											"pm.test(\"Verify s3Path should not be null\", function () {",
											"    pm.expect(jsonBody.status).to.not.be.null;",
											"});",
											"pm.test(\"Verify folderName should not be null\", function () {",
											"    pm.expect(jsonBody.folderName).to.not.be.null;",
											"});",
											"pm.test(\"Verify reportName is Agent_state_report\", function () {",
											"    pm.expect(jsonBody.folderName).to.eql(\"Snowflake_Data_Integration\");",
											"});",
											"",
											"pm.environment.set(\"FIVE9_REPORT_ID\", pm.response.json().id);",
											"pm.environment.set(\"SNOWFLAKE_RECORDS_ADDED_ON_REPORT_ROW\", pm.response.json().recordsAdded);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tableName\": \"REPORT\",\n    \"reportId\": \"{{REPORT_ID}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report"
									]
								},
								"description": "five9 reports"
							},
							"response": []
						},
						{
							"name": "[Test] [200] Download reports from S3",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report/download",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report",
										"download"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Test] [200] Test row Count from actual table and downloaded excel",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b08665e-ae80-4d4b-8a5b-3c59aab3257d",
										"exec": [
											"//  pm.test(\"Status code is 200\", function () {",
											"//      pm.response.to.have.status(200);",
											"//  });",
											" ",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"// We remove one row to remove the header row from the excel sheet",
											"var count = (jsonBody.rowCount - 1);",
											"",
											"//This funcionality was reverted on loan collection until it's returned, we cannot confirm row count",
											"// pm.test(\"Verify rowCount provided on snowflake to the one's on the downloaded excel - should be equal\", function () {",
											"//     pm.expect(count).to.eql(parseInt(pm.environment.get(\"SNOWFLAKE_RECORDS_ADDED_ON_REPORT_ROW\")));",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report/count",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Test] [200] Get row Count from report",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2101e0b4-8381-4d65-a7cd-157621f96396",
										"exec": [
											"//  pm.test(\"Status code is 200\", function () {",
											"//      pm.response.to.have.status(200);",
											"//  });",
											" ",
											"// var jsonBody = JSON.parse(responseBody);",
											"",
											"// We remove one row to remove the header row from the excel sheet",
											"// var count = (jsonBody.rowCount - 1);",
											"",
											"//This funcionality was reverted on loan collection until it's returned, we cannot confirm row count",
											"// pm.test(\"Verify rowCount provided on snowflake to the one's on the downloaded excel - should be equal\", function () {",
											"//     pm.expect(count).to.eql(parseInt(pm.environment.get(\"SNOWFLAKE_RECORDS_ADDED_ON_REPORT_ROW\")));",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report/download",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report",
										"download"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Test C29860] Trigger five9 call segment report (4)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8a36cc1-8405-4585-b9d2-6bab4030ef31",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });",
											"",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"pm.test(\"Verify status should be success\", function (err, response) {",
											"    pm.expect(jsonBody.status).to.eql(\"Success\");",
											"});",
											"",
											"pm.test(\"Verify call_log_report has an Id.\", function (err, response) {",
											"    pm.expect(jsonBody.reportId).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Verify call_log_report has report type of CALL_SEGMENT\", function () {",
											"    pm.expect(jsonBody.reportType).to.eql(\"CALL_SEGMENT\");",
											"});",
											"",
											"pm.environment.set(\"REPORT_ID\", pm.response.json().reportId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6d1674a2-0d70-4c7a-8255-8c9f647fc480",
										"exec": [
											"//Setup date",
											"var moment = require('moment');",
											"let day = moment().subtract(3, 'day').format(\"YYYY-MM-DD\");",
											"startDate = day+\"T08:26+03:00\"",
											"let dayLater = moment().add(1, 'day').format(\"YYYY-MM-DD\");",
											"",
											"//use same day to reduce call segment size",
											"endDate = day+\"T10:26+03:00\"",
											"",
											"pm.environment.set(\"START_DATE\", startDate);",
											"pm.environment.set(\"END_DATE\", endDate);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"start_date_time\": \"{{START_DATE}}\",\n    \"end_date_time\": \"{{END_DATE}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{LOAN_COLLECTIONS_BASE_URL}}/api/v1/five9report/4?includeReportId=true",
									"host": [
										"{{LOAN_COLLECTIONS_BASE_URL}}"
									],
									"path": [
										"api",
										"v1",
										"five9report",
										"4"
									],
									"query": [
										{
											"key": "includeReportId",
											"value": "true"
										}
									]
								},
								"description": "five9 reports"
							},
							"response": []
						},
						{
							"name": "[Test C29860] Verify snowflake call segment report on public table",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d647a000-d916-4cf7-b698-48dea35a5d7f",
										"exec": [
											"setTimeout(function(){}, [30000]);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e829b7cb-66fa-4921-8c47-6b01d1bd219f",
										"exec": [
											" pm.test(\"Status code is 200\", function () {",
											"     pm.response.to.have.status(200);",
											" });",
											" ",
											"var jsonBody = JSON.parse(responseBody);",
											" ",
											"pm.test(\"Verify entry has an Id.\", function (err, response) {",
											"    pm.expect(jsonBody.id).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Verify is he correct one by verifying the reportId.\", function () {",
											"    pm.expect(jsonBody.five9ReportId).to.eql(pm.environment.get(\"REPORT_ID\"))",
											"});",
											"",
											"pm.test(\"Verify status should be uploaded_to_S3\", function () {",
											"    pm.expect(jsonBody.status).to.eql(\"UPLOADED_TO_S3\");",
											"});",
											"",
											"pm.test(\"Verify s3Path should not be null\", function () {",
											"    pm.expect(jsonBody.status).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Verify folderName should not be null\", function () {",
											"    pm.expect(jsonBody.folderName).to.not.be.null;",
											"});",
											"",
											"pm.test(\"Verify reportName is Call_Segment_Draft1\", function () {",
											"    pm.expect(jsonBody.folderName).to.eql(\"Snowflake_Data_Integration\");",
											"});",
											"",
											"pm.environment.set(\"FIVE9_REPORT_ID\", pm.response.json().id);",
											"pm.environment.set(\"SNOWFLAKE_RECORDS_ADDED_ON_REPORT_ROW\", pm.response.json().recordsAdded);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tableName\": \"REPORT\",\n    \"reportId\": \"{{REPORT_ID}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report"
									]
								},
								"description": "five9 reports"
							},
							"response": []
						},
						{
							"name": "[Test] [200] Download reports from S3",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report/download",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report",
										"download"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Test] [200] Test row Count from actual table and downloaded excel",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb879e9a-a72b-479c-babb-99187a913978",
										"exec": [
											"//  pm.test(\"Status code is 200\", function () {",
											"//      pm.response.to.have.status(200);",
											"//  });",
											" ",
											"var jsonBody = JSON.parse(responseBody);",
											"",
											"// We remove one row to remove the header row from the excel sheet",
											"var count = (jsonBody.rowCount - 1);",
											"",
											"",
											"//This funcionality was reverted on loan collection until it's returned, we cannot confirm row count",
											"// pm.test(\"Verify rowCount provided on snowflake to the one's on the downloaded excel - should be equal\", function () {",
											"//     pm.expect(count).to.eql(parseInt(pm.environment.get(\"SNOWFLAKE_RECORDS_ADDED_ON_REPORT_ROW\")));",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report/count",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Test] [200] Get row Count from report",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report/download",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report",
										"download"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Test] [200] Fetching reports from S3",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/snowflake/report",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"snowflake",
										"report"
									]
								}
							},
							"response": []
						},
						{
							"name": "Insert account into Snowflake",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6afedb78-cfc8-4995-885a-3a27327cf974",
										"exec": [
											"",
											"var token = \"non_production_non_senstive_token\";",
											"var moment = require('moment');",
											"var timeStamp = moment().unix() ;",
											"",
											"const newDate = new Date();",
											"pm.globals.set(\"LOCAL_START_DATE\", moment(newDate, \"YYYY-MM-DD\"));",
											"pm.globals.set(\"LOCAL_START_DATE\", moment(newDate, \"YYYY-MM-DD\").add('days', 1));",
											"",
											"var MD5 = function(d){result = M(V(Y(X(d),8*d.length)));return result.toLowerCase()};function M(d){for(var _,m=\"0123456789ABCDEF\",f=\"\",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _=\"\",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_}",
											"",
											"var userId = pm.environment.get(\"ADMIN_USER_ID\");",
											"var hash = MD5(token + userId + (timeStamp * 1000));",
											"",
											"pm.environment.set('HASH_TOKEN_LOAN_COLLECTIONS' , hash + ' ' + pm.environment.get(\"ADMIN_USER_ID\") + ' ' + (timeStamp * 1000));",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08e717b5-9eba-4afc-9a4f-1460809dcfd0",
										"exec": [
											"// pm.test(\"Status code is 200 Ok\", function() {",
											"//     pm.response.to.have.status(200);",
											"// });",
											"",
											"// var jsonBody = JSON.parse(responseBody);",
											"",
											"// pm.test(\"Confirm resposne is true\", function (err, response) {",
											"//     pm.expect(jsonBody.response) === true;",
											"// });",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Authorization",
										"value": "{{HASH_TOKEN_LOAN_COLLECTIONS}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{ACCEPTANCE_SERVICE_BASE_URL}}/utility/v2/loancollection/automatewaiver/generateCsv",
									"host": [
										"{{ACCEPTANCE_SERVICE_BASE_URL}}"
									],
									"path": [
										"utility",
										"v2",
										"loancollection",
										"automatewaiver",
										"generateCsv"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e4c69834-3ea9-4fa1-ab38-c9e601a5161c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "002a7a01-318d-4306-b51c-393e03ec6071",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}